I0715 23:58:27.821570 132821147629056 run.py:722] (val) algo minimum step 0: {'min': 0.123046875, 'score': 0.123046875, 'examples_seen': 80, 'step': 0, 'algorithm': 'minimum'}
I0715 23:59:32.427624 132821147629056 run.py:722] (val) algo minimum step 50: {'min': 0.69775390625, 'score': 0.69775390625, 'examples_seen': 2640, 'step': 50, 'algorithm': 'minimum'}
I0715 23:59:34.162227 132821147629056 run.py:722] (val) algo minimum step 100: {'min': 0.5634765625, 'score': 0.5634765625, 'examples_seen': 5200, 'step': 100, 'algorithm': 'minimum'}
I0715 23:59:35.885226 132821147629056 run.py:722] (val) algo minimum step 150: {'min': 0.888671875, 'score': 0.888671875, 'examples_seen': 7744, 'step': 150, 'algorithm': 'minimum'}
I0715 23:59:37.627919 132821147629056 run.py:722] (val) algo minimum step 200: {'min': 0.8994140625, 'score': 0.8994140625, 'examples_seen': 10288, 'step': 200, 'algorithm': 'minimum'}
I0715 23:59:39.383134 132821147629056 run.py:722] (val) algo minimum step 250: {'min': 0.88037109375, 'score': 0.88037109375, 'examples_seen': 12816, 'step': 250, 'algorithm': 'minimum'}
I0715 23:59:41.158137 132821147629056 run.py:722] (val) algo minimum step 300: {'min': 0.875, 'score': 0.875, 'examples_seen': 15472, 'step': 300, 'algorithm': 'minimum'}
I0715 23:59:42.894185 132821147629056 run.py:722] (val) algo minimum step 350: {'min': 0.81884765625, 'score': 0.81884765625, 'examples_seen': 18080, 'step': 350, 'algorithm': 'minimum'}
I0715 23:59:44.616821 132821147629056 run.py:722] (val) algo minimum step 400: {'min': 0.820068359375, 'score': 0.820068359375, 'examples_seen': 20640, 'step': 400, 'algorithm': 'minimum'}
I0715 23:59:46.329749 132821147629056 run.py:722] (val) algo minimum step 450: {'min': 0.857666015625, 'score': 0.857666015625, 'examples_seen': 23216, 'step': 450, 'algorithm': 'minimum'}
I0715 23:59:48.059046 132821147629056 run.py:722] (val) algo minimum step 500: {'min': 0.947265625, 'score': 0.947265625, 'examples_seen': 25744, 'step': 500, 'algorithm': 'minimum'}
I0715 23:59:49.797787 132821147629056 run.py:722] (val) algo minimum step 550: {'min': 0.85791015625, 'score': 0.85791015625, 'examples_seen': 28288, 'step': 550, 'algorithm': 'minimum'}
I0715 23:59:51.545686 132821147629056 run.py:722] (val) algo minimum step 600: {'min': 0.9599609375, 'score': 0.9599609375, 'examples_seen': 30832, 'step': 600, 'algorithm': 'minimum'}
I0715 23:59:53.297144 132821147629056 run.py:722] (val) algo minimum step 650: {'min': 0.90283203125, 'score': 0.90283203125, 'examples_seen': 33456, 'step': 650, 'algorithm': 'minimum'}
I0715 23:59:55.032594 132821147629056 run.py:722] (val) algo minimum step 700: {'min': 0.85986328125, 'score': 0.85986328125, 'examples_seen': 36080, 'step': 700, 'algorithm': 'minimum'}
I0715 23:59:56.761975 132821147629056 run.py:722] (val) algo minimum step 750: {'min': 0.904296875, 'score': 0.904296875, 'examples_seen': 38640, 'step': 750, 'algorithm': 'minimum'}
I0715 23:59:58.496001 132821147629056 run.py:722] (val) algo minimum step 800: {'min': 0.895751953125, 'score': 0.895751953125, 'examples_seen': 41216, 'step': 800, 'algorithm': 'minimum'}
I0716 00:00:00.219640 132821147629056 run.py:722] (val) algo minimum step 850: {'min': 0.914794921875, 'score': 0.914794921875, 'examples_seen': 43760, 'step': 850, 'algorithm': 'minimum'}
I0716 00:00:01.957482 132821147629056 run.py:722] (val) algo minimum step 900: {'min': 0.96240234375, 'score': 0.96240234375, 'examples_seen': 46320, 'step': 900, 'algorithm': 'minimum'}
I0716 00:00:03.709511 132821147629056 run.py:722] (val) algo minimum step 950: {'min': 0.910400390625, 'score': 0.910400390625, 'examples_seen': 48832, 'step': 950, 'algorithm': 'minimum'}
I0716 00:00:05.452578 132821147629056 run.py:722] (val) algo minimum step 1000: {'min': 0.855224609375, 'score': 0.855224609375, 'examples_seen': 51488, 'step': 1000, 'algorithm': 'minimum'}
I0716 00:00:07.189644 132821147629056 run.py:722] (val) algo minimum step 1050: {'min': 0.958251953125, 'score': 0.958251953125, 'examples_seen': 54080, 'step': 1050, 'algorithm': 'minimum'}
I0716 00:00:08.920431 132821147629056 run.py:722] (val) algo minimum step 1100: {'min': 0.89306640625, 'score': 0.89306640625, 'examples_seen': 56656, 'step': 1100, 'algorithm': 'minimum'}
I0716 00:00:10.656735 132821147629056 run.py:722] (val) algo minimum step 1150: {'min': 0.96728515625, 'score': 0.96728515625, 'examples_seen': 59232, 'step': 1150, 'algorithm': 'minimum'}
I0716 00:00:12.389882 132821147629056 run.py:722] (val) algo minimum step 1200: {'min': 0.92138671875, 'score': 0.92138671875, 'examples_seen': 61744, 'step': 1200, 'algorithm': 'minimum'}
I0716 00:00:14.120648 132821147629056 run.py:722] (val) algo minimum step 1250: {'min': 0.936767578125, 'score': 0.936767578125, 'examples_seen': 64304, 'step': 1250, 'algorithm': 'minimum'}
I0716 00:00:15.850055 132821147629056 run.py:722] (val) algo minimum step 1300: {'min': 0.956787109375, 'score': 0.956787109375, 'examples_seen': 66848, 'step': 1300, 'algorithm': 'minimum'}
I0716 00:00:17.589944 132821147629056 run.py:722] (val) algo minimum step 1350: {'min': 0.947265625, 'score': 0.947265625, 'examples_seen': 69472, 'step': 1350, 'algorithm': 'minimum'}
I0716 00:00:19.335162 132821147629056 run.py:722] (val) algo minimum step 1400: {'min': 0.938720703125, 'score': 0.938720703125, 'examples_seen': 72096, 'step': 1400, 'algorithm': 'minimum'}
I0716 00:00:21.060006 132821147629056 run.py:722] (val) algo minimum step 1450: {'min': 0.965576171875, 'score': 0.965576171875, 'examples_seen': 74656, 'step': 1450, 'algorithm': 'minimum'}
I0716 00:00:22.785773 132821147629056 run.py:722] (val) algo minimum step 1500: {'min': 0.97705078125, 'score': 0.97705078125, 'examples_seen': 77216, 'step': 1500, 'algorithm': 'minimum'}
I0716 00:00:24.525892 132821147629056 run.py:722] (val) algo minimum step 1550: {'min': 0.9619140625, 'score': 0.9619140625, 'examples_seen': 79760, 'step': 1550, 'algorithm': 'minimum'}
I0716 00:00:26.256197 132821147629056 run.py:722] (val) algo minimum step 1600: {'min': 0.97705078125, 'score': 0.97705078125, 'examples_seen': 82304, 'step': 1600, 'algorithm': 'minimum'}
I0716 00:00:27.977514 132821147629056 run.py:722] (val) algo minimum step 1650: {'min': 0.9775390625, 'score': 0.9775390625, 'examples_seen': 84832, 'step': 1650, 'algorithm': 'minimum'}
I0716 00:00:29.741457 132821147629056 run.py:722] (val) algo minimum step 1700: {'min': 0.980224609375, 'score': 0.980224609375, 'examples_seen': 87472, 'step': 1700, 'algorithm': 'minimum'}
I0716 00:00:31.508111 132821147629056 run.py:722] (val) algo minimum step 1750: {'min': 0.9052734375, 'score': 0.9052734375, 'examples_seen': 90096, 'step': 1750, 'algorithm': 'minimum'}
I0716 00:00:33.258011 132821147629056 run.py:722] (val) algo minimum step 1800: {'min': 0.8759765625, 'score': 0.8759765625, 'examples_seen': 92656, 'step': 1800, 'algorithm': 'minimum'}
I0716 00:00:34.974626 132821147629056 run.py:722] (val) algo minimum step 1850: {'min': 0.958251953125, 'score': 0.958251953125, 'examples_seen': 95232, 'step': 1850, 'algorithm': 'minimum'}
I0716 00:00:36.688772 132821147629056 run.py:722] (val) algo minimum step 1900: {'min': 0.968994140625, 'score': 0.968994140625, 'examples_seen': 97776, 'step': 1900, 'algorithm': 'minimum'}
I0716 00:00:38.396568 132821147629056 run.py:722] (val) algo minimum step 1950: {'min': 0.9658203125, 'score': 0.9658203125, 'examples_seen': 100320, 'step': 1950, 'algorithm': 'minimum'}
I0716 00:00:40.118280 132821147629056 run.py:722] (val) algo minimum step 2000: {'min': 0.976806640625, 'score': 0.976806640625, 'examples_seen': 102848, 'step': 2000, 'algorithm': 'minimum'}
I0716 00:00:41.849784 132821147629056 run.py:722] (val) algo minimum step 2050: {'min': 0.947265625, 'score': 0.947265625, 'examples_seen': 105488, 'step': 2050, 'algorithm': 'minimum'}
I0716 00:00:43.583235 132821147629056 run.py:722] (val) algo minimum step 2100: {'min': 0.98095703125, 'score': 0.98095703125, 'examples_seen': 108096, 'step': 2100, 'algorithm': 'minimum'}
I0716 00:00:45.324722 132821147629056 run.py:722] (val) algo minimum step 2150: {'min': 0.984375, 'score': 0.984375, 'examples_seen': 110688, 'step': 2150, 'algorithm': 'minimum'}
I0716 00:00:47.065646 132821147629056 run.py:722] (val) algo minimum step 2200: {'min': 0.924072265625, 'score': 0.924072265625, 'examples_seen': 113232, 'step': 2200, 'algorithm': 'minimum'}
I0716 00:00:48.790298 132821147629056 run.py:722] (val) algo minimum step 2250: {'min': 0.96484375, 'score': 0.96484375, 'examples_seen': 115760, 'step': 2250, 'algorithm': 'minimum'}
I0716 00:00:50.519479 132821147629056 run.py:722] (val) algo minimum step 2300: {'min': 0.972900390625, 'score': 0.972900390625, 'examples_seen': 118336, 'step': 2300, 'algorithm': 'minimum'}
I0716 00:00:52.253767 132821147629056 run.py:722] (val) algo minimum step 2350: {'min': 0.970703125, 'score': 0.970703125, 'examples_seen': 120848, 'step': 2350, 'algorithm': 'minimum'}
I0716 00:00:53.999714 132821147629056 run.py:722] (val) algo minimum step 2400: {'min': 0.973876953125, 'score': 0.973876953125, 'examples_seen': 123488, 'step': 2400, 'algorithm': 'minimum'}
I0716 00:00:55.731923 132821147629056 run.py:722] (val) algo minimum step 2450: {'min': 0.931884765625, 'score': 0.931884765625, 'examples_seen': 126112, 'step': 2450, 'algorithm': 'minimum'}
I0716 00:00:57.462049 132821147629056 run.py:722] (val) algo minimum step 2500: {'min': 0.8759765625, 'score': 0.8759765625, 'examples_seen': 128656, 'step': 2500, 'algorithm': 'minimum'}
I0716 00:00:59.193185 132821147629056 run.py:722] (val) algo minimum step 2550: {'min': 0.9453125, 'score': 0.9453125, 'examples_seen': 131232, 'step': 2550, 'algorithm': 'minimum'}
I0716 00:01:00.917993 132821147629056 run.py:722] (val) algo minimum step 2600: {'min': 0.947998046875, 'score': 0.947998046875, 'examples_seen': 133760, 'step': 2600, 'algorithm': 'minimum'}
I0716 00:01:02.637261 132821147629056 run.py:722] (val) algo minimum step 2650: {'min': 0.968017578125, 'score': 0.968017578125, 'examples_seen': 136304, 'step': 2650, 'algorithm': 'minimum'}
I0716 00:01:04.359154 132821147629056 run.py:722] (val) algo minimum step 2700: {'min': 0.939208984375, 'score': 0.939208984375, 'examples_seen': 138848, 'step': 2700, 'algorithm': 'minimum'}
I0716 00:01:06.110479 132821147629056 run.py:722] (val) algo minimum step 2750: {'min': 0.98193359375, 'score': 0.98193359375, 'examples_seen': 141488, 'step': 2750, 'algorithm': 'minimum'}
I0716 00:01:07.852214 132821147629056 run.py:722] (val) algo minimum step 2800: {'min': 0.9111328125, 'score': 0.9111328125, 'examples_seen': 144112, 'step': 2800, 'algorithm': 'minimum'}
I0716 00:01:09.576959 132821147629056 run.py:722] (val) algo minimum step 2850: {'min': 0.956298828125, 'score': 0.956298828125, 'examples_seen': 146672, 'step': 2850, 'algorithm': 'minimum'}
I0716 00:01:11.303227 132821147629056 run.py:722] (val) algo minimum step 2900: {'min': 0.972412109375, 'score': 0.972412109375, 'examples_seen': 149216, 'step': 2900, 'algorithm': 'minimum'}
I0716 00:01:13.234295 132821147629056 run.py:722] (val) algo minimum step 2950: {'min': 0.961669921875, 'score': 0.961669921875, 'examples_seen': 151776, 'step': 2950, 'algorithm': 'minimum'}
I0716 00:01:14.954101 132821147629056 run.py:722] (val) algo minimum step 3000: {'min': 0.952880859375, 'score': 0.952880859375, 'examples_seen': 154320, 'step': 3000, 'algorithm': 'minimum'}
I0716 00:01:16.677908 132821147629056 run.py:722] (val) algo minimum step 3050: {'min': 0.981689453125, 'score': 0.981689453125, 'examples_seen': 156832, 'step': 3050, 'algorithm': 'minimum'}
I0716 00:01:18.413835 132821147629056 run.py:722] (val) algo minimum step 3100: {'min': 0.928955078125, 'score': 0.928955078125, 'examples_seen': 159488, 'step': 3100, 'algorithm': 'minimum'}
I0716 00:01:20.154757 132821147629056 run.py:722] (val) algo minimum step 3150: {'min': 0.9541015625, 'score': 0.9541015625, 'examples_seen': 162112, 'step': 3150, 'algorithm': 'minimum'}
I0716 00:01:21.878091 132821147629056 run.py:722] (val) algo minimum step 3200: {'min': 0.974609375, 'score': 0.974609375, 'examples_seen': 164672, 'step': 3200, 'algorithm': 'minimum'}
I0716 00:01:23.621692 132821147629056 run.py:722] (val) algo minimum step 3250: {'min': 0.95751953125, 'score': 0.95751953125, 'examples_seen': 167248, 'step': 3250, 'algorithm': 'minimum'}
I0716 00:01:25.333044 132821147629056 run.py:722] (val) algo minimum step 3300: {'min': 0.914306640625, 'score': 0.914306640625, 'examples_seen': 169776, 'step': 3300, 'algorithm': 'minimum'}
I0716 00:01:27.062427 132821147629056 run.py:722] (val) algo minimum step 3350: {'min': 0.95947265625, 'score': 0.95947265625, 'examples_seen': 172336, 'step': 3350, 'algorithm': 'minimum'}
I0716 00:01:28.794284 132821147629056 run.py:722] (val) algo minimum step 3400: {'min': 0.9853515625, 'score': 0.9853515625, 'examples_seen': 174864, 'step': 3400, 'algorithm': 'minimum'}
I0716 00:01:30.535891 132821147629056 run.py:722] (val) algo minimum step 3450: {'min': 0.977783203125, 'score': 0.977783203125, 'examples_seen': 177504, 'step': 3450, 'algorithm': 'minimum'}
I0716 00:01:32.269747 132821147629056 run.py:722] (val) algo minimum step 3500: {'min': 0.967529296875, 'score': 0.967529296875, 'examples_seen': 180112, 'step': 3500, 'algorithm': 'minimum'}
I0716 00:01:33.979891 132821147629056 run.py:722] (val) algo minimum step 3550: {'min': 0.9736328125, 'score': 0.9736328125, 'examples_seen': 182672, 'step': 3550, 'algorithm': 'minimum'}
I0716 00:01:35.706126 132821147629056 run.py:722] (val) algo minimum step 3600: {'min': 0.949462890625, 'score': 0.949462890625, 'examples_seen': 185248, 'step': 3600, 'algorithm': 'minimum'}
I0716 00:01:37.430397 132821147629056 run.py:722] (val) algo minimum step 3650: {'min': 0.983154296875, 'score': 0.983154296875, 'examples_seen': 187776, 'step': 3650, 'algorithm': 'minimum'}
I0716 00:01:39.160153 132821147629056 run.py:722] (val) algo minimum step 3700: {'min': 0.96337890625, 'score': 0.96337890625, 'examples_seen': 190320, 'step': 3700, 'algorithm': 'minimum'}
I0716 00:01:40.885833 132821147629056 run.py:722] (val) algo minimum step 3750: {'min': 0.978271484375, 'score': 0.978271484375, 'examples_seen': 192864, 'step': 3750, 'algorithm': 'minimum'}
I0716 00:01:42.631387 132821147629056 run.py:722] (val) algo minimum step 3800: {'min': 0.9853515625, 'score': 0.9853515625, 'examples_seen': 195504, 'step': 3800, 'algorithm': 'minimum'}
I0716 00:01:44.369094 132821147629056 run.py:722] (val) algo minimum step 3850: {'min': 0.91748046875, 'score': 0.91748046875, 'examples_seen': 198128, 'step': 3850, 'algorithm': 'minimum'}
I0716 00:01:46.093441 132821147629056 run.py:722] (val) algo minimum step 3900: {'min': 0.9873046875, 'score': 0.9873046875, 'examples_seen': 200672, 'step': 3900, 'algorithm': 'minimum'}
I0716 00:01:47.832284 132821147629056 run.py:722] (val) algo minimum step 3950: {'min': 0.947998046875, 'score': 0.947998046875, 'examples_seen': 203232, 'step': 3950, 'algorithm': 'minimum'}
I0716 00:01:49.574827 132821147629056 run.py:722] (val) algo minimum step 4000: {'min': 0.973388671875, 'score': 0.973388671875, 'examples_seen': 205792, 'step': 4000, 'algorithm': 'minimum'}
I0716 00:01:51.288470 132821147629056 run.py:722] (val) algo minimum step 4050: {'min': 0.989990234375, 'score': 0.989990234375, 'examples_seen': 208320, 'step': 4050, 'algorithm': 'minimum'}
I0716 00:01:53.028672 132821147629056 run.py:722] (val) algo minimum step 4100: {'min': 0.98046875, 'score': 0.98046875, 'examples_seen': 210848, 'step': 4100, 'algorithm': 'minimum'}
I0716 00:01:54.771323 132821147629056 run.py:722] (val) algo minimum step 4150: {'min': 0.983642578125, 'score': 0.983642578125, 'examples_seen': 213520, 'step': 4150, 'algorithm': 'minimum'}
I0716 00:01:56.520855 132821147629056 run.py:722] (val) algo minimum step 4200: {'min': 0.984619140625, 'score': 0.984619140625, 'examples_seen': 216112, 'step': 4200, 'algorithm': 'minimum'}
I0716 00:01:58.248172 132821147629056 run.py:722] (val) algo minimum step 4250: {'min': 0.9287109375, 'score': 0.9287109375, 'examples_seen': 218688, 'step': 4250, 'algorithm': 'minimum'}
I0716 00:01:59.977010 132821147629056 run.py:722] (val) algo minimum step 4300: {'min': 0.974853515625, 'score': 0.974853515625, 'examples_seen': 221248, 'step': 4300, 'algorithm': 'minimum'}
I0716 00:02:01.706814 132821147629056 run.py:722] (val) algo minimum step 4350: {'min': 0.986328125, 'score': 0.986328125, 'examples_seen': 223792, 'step': 4350, 'algorithm': 'minimum'}
I0716 00:02:03.424140 132821147629056 run.py:722] (val) algo minimum step 4400: {'min': 0.961669921875, 'score': 0.961669921875, 'examples_seen': 226352, 'step': 4400, 'algorithm': 'minimum'}
I0716 00:02:05.148269 132821147629056 run.py:722] (val) algo minimum step 4450: {'min': 0.971435546875, 'score': 0.971435546875, 'examples_seen': 228880, 'step': 4450, 'algorithm': 'minimum'}
I0716 00:02:06.894418 132821147629056 run.py:722] (val) algo minimum step 4500: {'min': 0.98779296875, 'score': 0.98779296875, 'examples_seen': 231504, 'step': 4500, 'algorithm': 'minimum'}
I0716 00:02:08.639659 132821147629056 run.py:722] (val) algo minimum step 4550: {'min': 0.968505859375, 'score': 0.968505859375, 'examples_seen': 234128, 'step': 4550, 'algorithm': 'minimum'}
I0716 00:02:10.380412 132821147629056 run.py:722] (val) algo minimum step 4600: {'min': 0.977294921875, 'score': 0.977294921875, 'examples_seen': 236688, 'step': 4600, 'algorithm': 'minimum'}
I0716 00:02:12.108375 132821147629056 run.py:722] (val) algo minimum step 4650: {'min': 0.986328125, 'score': 0.986328125, 'examples_seen': 239264, 'step': 4650, 'algorithm': 'minimum'}
I0716 00:02:13.831294 132821147629056 run.py:722] (val) algo minimum step 4700: {'min': 0.98388671875, 'score': 0.98388671875, 'examples_seen': 241792, 'step': 4700, 'algorithm': 'minimum'}
I0716 00:02:15.553920 132821147629056 run.py:722] (val) algo minimum step 4750: {'min': 0.973876953125, 'score': 0.973876953125, 'examples_seen': 244336, 'step': 4750, 'algorithm': 'minimum'}
I0716 00:02:17.279586 132821147629056 run.py:722] (val) algo minimum step 4800: {'min': 0.94091796875, 'score': 0.94091796875, 'examples_seen': 246880, 'step': 4800, 'algorithm': 'minimum'}
I0716 00:02:19.021156 132821147629056 run.py:722] (val) algo minimum step 4850: {'min': 0.9658203125, 'score': 0.9658203125, 'examples_seen': 249520, 'step': 4850, 'algorithm': 'minimum'}
I0716 00:02:20.742073 132821147629056 run.py:722] (val) algo minimum step 4900: {'min': 0.979248046875, 'score': 0.979248046875, 'examples_seen': 252128, 'step': 4900, 'algorithm': 'minimum'}
I0716 00:02:22.461312 132821147629056 run.py:722] (val) algo minimum step 4950: {'min': 0.9716796875, 'score': 0.9716796875, 'examples_seen': 254688, 'step': 4950, 'algorithm': 'minimum'}
I0716 00:02:24.170893 132821147629056 run.py:722] (val) algo minimum step 5000: {'min': 0.961181640625, 'score': 0.961181640625, 'examples_seen': 257264, 'step': 5000, 'algorithm': 'minimum'}
I0716 00:02:25.894711 132821147629056 run.py:722] (val) algo minimum step 5050: {'min': 0.986083984375, 'score': 0.986083984375, 'examples_seen': 259792, 'step': 5050, 'algorithm': 'minimum'}
I0716 00:02:27.615943 132821147629056 run.py:722] (val) algo minimum step 5100: {'min': 0.955810546875, 'score': 0.955810546875, 'examples_seen': 262336, 'step': 5100, 'algorithm': 'minimum'}
I0716 00:02:29.339204 132821147629056 run.py:722] (val) algo minimum step 5150: {'min': 0.968017578125, 'score': 0.968017578125, 'examples_seen': 264880, 'step': 5150, 'algorithm': 'minimum'}
I0716 00:02:31.068293 132821147629056 run.py:722] (val) algo minimum step 5200: {'min': 0.971923828125, 'score': 0.971923828125, 'examples_seen': 267520, 'step': 5200, 'algorithm': 'minimum'}
I0716 00:02:32.809226 132821147629056 run.py:722] (val) algo minimum step 5250: {'min': 0.93994140625, 'score': 0.93994140625, 'examples_seen': 270128, 'step': 5250, 'algorithm': 'minimum'}
I0716 00:02:34.534385 132821147629056 run.py:722] (val) algo minimum step 5300: {'min': 0.94970703125, 'score': 0.94970703125, 'examples_seen': 272688, 'step': 5300, 'algorithm': 'minimum'}
I0716 00:02:36.257774 132821147629056 run.py:722] (val) algo minimum step 5350: {'min': 0.966552734375, 'score': 0.966552734375, 'examples_seen': 275248, 'step': 5350, 'algorithm': 'minimum'}
I0716 00:02:37.981922 132821147629056 run.py:722] (val) algo minimum step 5400: {'min': 0.97802734375, 'score': 0.97802734375, 'examples_seen': 277792, 'step': 5400, 'algorithm': 'minimum'}
I0716 00:02:39.722807 132821147629056 run.py:722] (val) algo minimum step 5450: {'min': 0.9658203125, 'score': 0.9658203125, 'examples_seen': 280352, 'step': 5450, 'algorithm': 'minimum'}
I0716 00:02:41.452152 132821147629056 run.py:722] (val) algo minimum step 5500: {'min': 0.897705078125, 'score': 0.897705078125, 'examples_seen': 282864, 'step': 5500, 'algorithm': 'minimum'}
I0716 00:02:43.192068 132821147629056 run.py:722] (val) algo minimum step 5550: {'min': 0.966552734375, 'score': 0.966552734375, 'examples_seen': 285504, 'step': 5550, 'algorithm': 'minimum'}
I0716 00:02:44.930610 132821147629056 run.py:722] (val) algo minimum step 5600: {'min': 0.972412109375, 'score': 0.972412109375, 'examples_seen': 288128, 'step': 5600, 'algorithm': 'minimum'}
I0716 00:02:46.650165 132821147629056 run.py:722] (val) algo minimum step 5650: {'min': 0.985107421875, 'score': 0.985107421875, 'examples_seen': 290688, 'step': 5650, 'algorithm': 'minimum'}
I0716 00:02:48.392974 132821147629056 run.py:722] (val) algo minimum step 5700: {'min': 0.9765625, 'score': 0.9765625, 'examples_seen': 293280, 'step': 5700, 'algorithm': 'minimum'}
I0716 00:02:50.134028 132821147629056 run.py:722] (val) algo minimum step 5750: {'min': 0.970458984375, 'score': 0.970458984375, 'examples_seen': 295808, 'step': 5750, 'algorithm': 'minimum'}
I0716 00:02:51.859843 132821147629056 run.py:722] (val) algo minimum step 5800: {'min': 0.944091796875, 'score': 0.944091796875, 'examples_seen': 298352, 'step': 5800, 'algorithm': 'minimum'}
I0716 00:02:53.594547 132821147629056 run.py:722] (val) algo minimum step 5850: {'min': 0.9814453125, 'score': 0.9814453125, 'examples_seen': 300896, 'step': 5850, 'algorithm': 'minimum'}
I0716 00:02:55.337395 132821147629056 run.py:722] (val) algo minimum step 5900: {'min': 0.9873046875, 'score': 0.9873046875, 'examples_seen': 303520, 'step': 5900, 'algorithm': 'minimum'}
I0716 00:02:57.073823 132821147629056 run.py:722] (val) algo minimum step 5950: {'min': 0.974609375, 'score': 0.974609375, 'examples_seen': 306144, 'step': 5950, 'algorithm': 'minimum'}
I0716 00:02:58.798129 132821147629056 run.py:722] (val) algo minimum step 6000: {'min': 0.986328125, 'score': 0.986328125, 'examples_seen': 308720, 'step': 6000, 'algorithm': 'minimum'}
I0716 00:03:00.531005 132821147629056 run.py:722] (val) algo minimum step 6050: {'min': 0.92578125, 'score': 0.92578125, 'examples_seen': 311264, 'step': 6050, 'algorithm': 'minimum'}
I0716 00:03:02.267933 132821147629056 run.py:722] (val) algo minimum step 6100: {'min': 0.978271484375, 'score': 0.978271484375, 'examples_seen': 313808, 'step': 6100, 'algorithm': 'minimum'}
I0716 00:03:04.000036 132821147629056 run.py:722] (val) algo minimum step 6150: {'min': 0.978759765625, 'score': 0.978759765625, 'examples_seen': 316368, 'step': 6150, 'algorithm': 'minimum'}
I0716 00:03:05.730194 132821147629056 run.py:722] (val) algo minimum step 6200: {'min': 0.988037109375, 'score': 0.988037109375, 'examples_seen': 318880, 'step': 6200, 'algorithm': 'minimum'}
I0716 00:03:07.468344 132821147629056 run.py:722] (val) algo minimum step 6250: {'min': 0.970458984375, 'score': 0.970458984375, 'examples_seen': 321536, 'step': 6250, 'algorithm': 'minimum'}
I0716 00:03:09.201594 132821147629056 run.py:722] (val) algo minimum step 6300: {'min': 0.974365234375, 'score': 0.974365234375, 'examples_seen': 324128, 'step': 6300, 'algorithm': 'minimum'}
I0716 00:03:10.942994 132821147629056 run.py:722] (val) algo minimum step 6350: {'min': 0.958740234375, 'score': 0.958740234375, 'examples_seen': 326704, 'step': 6350, 'algorithm': 'minimum'}
I0716 00:03:12.674984 132821147629056 run.py:722] (val) algo minimum step 6400: {'min': 0.93115234375, 'score': 0.93115234375, 'examples_seen': 329264, 'step': 6400, 'algorithm': 'minimum'}
I0716 00:03:14.396495 132821147629056 run.py:722] (val) algo minimum step 6450: {'min': 0.973876953125, 'score': 0.973876953125, 'examples_seen': 331792, 'step': 6450, 'algorithm': 'minimum'}
I0716 00:03:16.123349 132821147629056 run.py:722] (val) algo minimum step 6500: {'min': 0.979736328125, 'score': 0.979736328125, 'examples_seen': 334352, 'step': 6500, 'algorithm': 'minimum'}
I0716 00:03:17.849990 132821147629056 run.py:722] (val) algo minimum step 6550: {'min': 0.97607421875, 'score': 0.97607421875, 'examples_seen': 336880, 'step': 6550, 'algorithm': 'minimum'}
I0716 00:03:19.609362 132821147629056 run.py:722] (val) algo minimum step 6600: {'min': 0.98583984375, 'score': 0.98583984375, 'examples_seen': 339520, 'step': 6600, 'algorithm': 'minimum'}
I0716 00:03:21.354104 132821147629056 run.py:722] (val) algo minimum step 6650: {'min': 0.985595703125, 'score': 0.985595703125, 'examples_seen': 342144, 'step': 6650, 'algorithm': 'minimum'}
I0716 00:03:23.080788 132821147629056 run.py:722] (val) algo minimum step 6700: {'min': 0.97021484375, 'score': 0.97021484375, 'examples_seen': 344704, 'step': 6700, 'algorithm': 'minimum'}
I0716 00:03:24.804538 132821147629056 run.py:722] (val) algo minimum step 6750: {'min': 0.9853515625, 'score': 0.9853515625, 'examples_seen': 347280, 'step': 6750, 'algorithm': 'minimum'}
I0716 00:03:26.543429 132821147629056 run.py:722] (val) algo minimum step 6800: {'min': 0.9765625, 'score': 0.9765625, 'examples_seen': 349824, 'step': 6800, 'algorithm': 'minimum'}
I0716 00:03:28.257311 132821147629056 run.py:722] (val) algo minimum step 6850: {'min': 0.989501953125, 'score': 0.989501953125, 'examples_seen': 352368, 'step': 6850, 'algorithm': 'minimum'}
I0716 00:03:29.984771 132821147629056 run.py:722] (val) algo minimum step 6900: {'min': 0.987548828125, 'score': 0.987548828125, 'examples_seen': 354896, 'step': 6900, 'algorithm': 'minimum'}
I0716 00:03:31.730669 132821147629056 run.py:722] (val) algo minimum step 6950: {'min': 0.9892578125, 'score': 0.9892578125, 'examples_seen': 357536, 'step': 6950, 'algorithm': 'minimum'}
I0716 00:03:33.459039 132821147629056 run.py:722] (val) algo minimum step 7000: {'min': 0.921142578125, 'score': 0.921142578125, 'examples_seen': 360176, 'step': 7000, 'algorithm': 'minimum'}
I0716 00:03:35.192879 132821147629056 run.py:722] (val) algo minimum step 7050: {'min': 0.984130859375, 'score': 0.984130859375, 'examples_seen': 362720, 'step': 7050, 'algorithm': 'minimum'}
I0716 00:03:36.919516 132821147629056 run.py:722] (val) algo minimum step 7100: {'min': 0.947998046875, 'score': 0.947998046875, 'examples_seen': 365280, 'step': 7100, 'algorithm': 'minimum'}
I0716 00:03:38.648809 132821147629056 run.py:722] (val) algo minimum step 7150: {'min': 0.984375, 'score': 0.984375, 'examples_seen': 367824, 'step': 7150, 'algorithm': 'minimum'}
I0716 00:03:40.381133 132821147629056 run.py:722] (val) algo minimum step 7200: {'min': 0.990478515625, 'score': 0.990478515625, 'examples_seen': 370368, 'step': 7200, 'algorithm': 'minimum'}
I0716 00:03:42.123354 132821147629056 run.py:722] (val) algo minimum step 7250: {'min': 0.987060546875, 'score': 0.987060546875, 'examples_seen': 372896, 'step': 7250, 'algorithm': 'minimum'}
I0716 00:03:43.853821 132821147629056 run.py:722] (val) algo minimum step 7300: {'min': 0.96435546875, 'score': 0.96435546875, 'examples_seen': 375536, 'step': 7300, 'algorithm': 'minimum'}
I0716 00:03:45.591563 132821147629056 run.py:722] (val) algo minimum step 7350: {'min': 0.9697265625, 'score': 0.9697265625, 'examples_seen': 378144, 'step': 7350, 'algorithm': 'minimum'}
I0716 00:03:47.324244 132821147629056 run.py:722] (val) algo minimum step 7400: {'min': 0.96240234375, 'score': 0.96240234375, 'examples_seen': 380720, 'step': 7400, 'algorithm': 'minimum'}
I0716 00:03:49.054144 132821147629056 run.py:722] (val) algo minimum step 7450: {'min': 0.987548828125, 'score': 0.987548828125, 'examples_seen': 383280, 'step': 7450, 'algorithm': 'minimum'}
I0716 00:03:50.782295 132821147629056 run.py:722] (val) algo minimum step 7500: {'min': 0.967041015625, 'score': 0.967041015625, 'examples_seen': 385808, 'step': 7500, 'algorithm': 'minimum'}
I0716 00:03:52.508182 132821147629056 run.py:722] (val) algo minimum step 7550: {'min': 0.98779296875, 'score': 0.98779296875, 'examples_seen': 388368, 'step': 7550, 'algorithm': 'minimum'}
I0716 00:03:54.233412 132821147629056 run.py:722] (val) algo minimum step 7600: {'min': 0.9736328125, 'score': 0.9736328125, 'examples_seen': 390896, 'step': 7600, 'algorithm': 'minimum'}
I0716 00:03:55.964772 132821147629056 run.py:722] (val) algo minimum step 7650: {'min': 0.962158203125, 'score': 0.962158203125, 'examples_seen': 393536, 'step': 7650, 'algorithm': 'minimum'}
I0716 00:03:57.714300 132821147629056 run.py:722] (val) algo minimum step 7700: {'min': 0.97119140625, 'score': 0.97119140625, 'examples_seen': 396160, 'step': 7700, 'algorithm': 'minimum'}
I0716 00:03:59.426192 132821147629056 run.py:722] (val) algo minimum step 7750: {'min': 0.95458984375, 'score': 0.95458984375, 'examples_seen': 398704, 'step': 7750, 'algorithm': 'minimum'}
I0716 00:04:01.136345 132821147629056 run.py:722] (val) algo minimum step 7800: {'min': 0.964599609375, 'score': 0.964599609375, 'examples_seen': 401280, 'step': 7800, 'algorithm': 'minimum'}
I0716 00:04:02.844050 132821147629056 run.py:722] (val) algo minimum step 7850: {'min': 0.975341796875, 'score': 0.975341796875, 'examples_seen': 403808, 'step': 7850, 'algorithm': 'minimum'}
I0716 00:04:04.545016 132821147629056 run.py:722] (val) algo minimum step 7900: {'min': 0.983642578125, 'score': 0.983642578125, 'examples_seen': 406352, 'step': 7900, 'algorithm': 'minimum'}
I0716 00:04:06.258882 132821147629056 run.py:722] (val) algo minimum step 7950: {'min': 0.9775390625, 'score': 0.9775390625, 'examples_seen': 408896, 'step': 7950, 'algorithm': 'minimum'}
I0716 00:04:07.997678 132821147629056 run.py:722] (val) algo minimum step 8000: {'min': 0.95849609375, 'score': 0.95849609375, 'examples_seen': 411552, 'step': 8000, 'algorithm': 'minimum'}
I0716 00:04:09.725168 132821147629056 run.py:722] (val) algo minimum step 8050: {'min': 0.974609375, 'score': 0.974609375, 'examples_seen': 414160, 'step': 8050, 'algorithm': 'minimum'}
I0716 00:04:11.436107 132821147629056 run.py:722] (val) algo minimum step 8100: {'min': 0.962890625, 'score': 0.962890625, 'examples_seen': 416720, 'step': 8100, 'algorithm': 'minimum'}
I0716 00:04:13.143895 132821147629056 run.py:722] (val) algo minimum step 8150: {'min': 0.990234375, 'score': 0.990234375, 'examples_seen': 419280, 'step': 8150, 'algorithm': 'minimum'}
I0716 00:04:14.859450 132821147629056 run.py:722] (val) algo minimum step 8200: {'min': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 421840, 'step': 8200, 'algorithm': 'minimum'}
I0716 00:04:16.781290 132821147629056 run.py:722] (val) algo minimum step 8250: {'min': 0.980712890625, 'score': 0.980712890625, 'examples_seen': 424384, 'step': 8250, 'algorithm': 'minimum'}
I0716 00:04:18.495771 132821147629056 run.py:722] (val) algo minimum step 8300: {'min': 0.9755859375, 'score': 0.9755859375, 'examples_seen': 426896, 'step': 8300, 'algorithm': 'minimum'}
I0716 00:04:20.234569 132821147629056 run.py:722] (val) algo minimum step 8350: {'min': 0.97021484375, 'score': 0.97021484375, 'examples_seen': 429552, 'step': 8350, 'algorithm': 'minimum'}
I0716 00:04:21.966654 132821147629056 run.py:722] (val) algo minimum step 8400: {'min': 0.974365234375, 'score': 0.974365234375, 'examples_seen': 432160, 'step': 8400, 'algorithm': 'minimum'}
I0716 00:04:23.691208 132821147629056 run.py:722] (val) algo minimum step 8450: {'min': 0.9736328125, 'score': 0.9736328125, 'examples_seen': 434736, 'step': 8450, 'algorithm': 'minimum'}
I0716 00:04:25.405111 132821147629056 run.py:722] (val) algo minimum step 8500: {'min': 0.98046875, 'score': 0.98046875, 'examples_seen': 437296, 'step': 8500, 'algorithm': 'minimum'}
I0716 00:04:27.114126 132821147629056 run.py:722] (val) algo minimum step 8550: {'min': 0.98486328125, 'score': 0.98486328125, 'examples_seen': 439824, 'step': 8550, 'algorithm': 'minimum'}
I0716 00:04:28.839620 132821147629056 run.py:722] (val) algo minimum step 8600: {'min': 0.990966796875, 'score': 0.990966796875, 'examples_seen': 442384, 'step': 8600, 'algorithm': 'minimum'}
I0716 00:04:30.583039 132821147629056 run.py:722] (val) algo minimum step 8650: {'min': 0.964111328125, 'score': 0.964111328125, 'examples_seen': 444912, 'step': 8650, 'algorithm': 'minimum'}
I0716 00:04:32.320589 132821147629056 run.py:722] (val) algo minimum step 8700: {'min': 0.97412109375, 'score': 0.97412109375, 'examples_seen': 447552, 'step': 8700, 'algorithm': 'minimum'}
I0716 00:04:34.049232 132821147629056 run.py:722] (val) algo minimum step 8750: {'min': 0.9912109375, 'score': 0.9912109375, 'examples_seen': 450160, 'step': 8750, 'algorithm': 'minimum'}
I0716 00:04:35.778155 132821147629056 run.py:722] (val) algo minimum step 8800: {'min': 0.980712890625, 'score': 0.980712890625, 'examples_seen': 452720, 'step': 8800, 'algorithm': 'minimum'}
I0716 00:04:37.494828 132821147629056 run.py:722] (val) algo minimum step 8850: {'min': 0.98486328125, 'score': 0.98486328125, 'examples_seen': 455296, 'step': 8850, 'algorithm': 'minimum'}
I0716 00:04:39.227743 132821147629056 run.py:722] (val) algo minimum step 8900: {'min': 0.991455078125, 'score': 0.991455078125, 'examples_seen': 457824, 'step': 8900, 'algorithm': 'minimum'}
I0716 00:04:40.969332 132821147629056 run.py:722] (val) algo minimum step 8950: {'min': 0.988037109375, 'score': 0.988037109375, 'examples_seen': 460368, 'step': 8950, 'algorithm': 'minimum'}
I0716 00:04:42.696455 132821147629056 run.py:722] (val) algo minimum step 9000: {'min': 0.983642578125, 'score': 0.983642578125, 'examples_seen': 462928, 'step': 9000, 'algorithm': 'minimum'}
I0716 00:04:44.452484 132821147629056 run.py:722] (val) algo minimum step 9050: {'min': 0.98291015625, 'score': 0.98291015625, 'examples_seen': 465552, 'step': 9050, 'algorithm': 'minimum'}
I0716 00:04:46.176957 132821147629056 run.py:722] (val) algo minimum step 9100: {'min': 0.980712890625, 'score': 0.980712890625, 'examples_seen': 468176, 'step': 9100, 'algorithm': 'minimum'}
I0716 00:04:47.910555 132821147629056 run.py:722] (val) algo minimum step 9150: {'min': 0.9794921875, 'score': 0.9794921875, 'examples_seen': 470720, 'step': 9150, 'algorithm': 'minimum'}
I0716 00:04:49.644380 132821147629056 run.py:722] (val) algo minimum step 9200: {'min': 0.986572265625, 'score': 0.986572265625, 'examples_seen': 473296, 'step': 9200, 'algorithm': 'minimum'}
I0716 00:04:51.387357 132821147629056 run.py:722] (val) algo minimum step 9250: {'min': 0.97509765625, 'score': 0.97509765625, 'examples_seen': 475856, 'step': 9250, 'algorithm': 'minimum'}
I0716 00:04:53.110319 132821147629056 run.py:722] (val) algo minimum step 9300: {'min': 0.983154296875, 'score': 0.983154296875, 'examples_seen': 478384, 'step': 9300, 'algorithm': 'minimum'}
I0716 00:04:54.834555 132821147629056 run.py:722] (val) algo minimum step 9350: {'min': 0.99169921875, 'score': 0.99169921875, 'examples_seen': 480912, 'step': 9350, 'algorithm': 'minimum'}
I0716 00:04:56.601603 132821147629056 run.py:722] (val) algo minimum step 9400: {'min': 0.98388671875, 'score': 0.98388671875, 'examples_seen': 483568, 'step': 9400, 'algorithm': 'minimum'}
I0716 00:04:58.348857 132821147629056 run.py:722] (val) algo minimum step 9450: {'min': 0.9521484375, 'score': 0.9521484375, 'examples_seen': 486176, 'step': 9450, 'algorithm': 'minimum'}
I0716 00:05:00.078276 132821147629056 run.py:722] (val) algo minimum step 9500: {'min': 0.977783203125, 'score': 0.977783203125, 'examples_seen': 488752, 'step': 9500, 'algorithm': 'minimum'}
I0716 00:05:01.807194 132821147629056 run.py:722] (val) algo minimum step 9550: {'min': 0.965576171875, 'score': 0.965576171875, 'examples_seen': 491312, 'step': 9550, 'algorithm': 'minimum'}
I0716 00:05:03.515488 132821147629056 run.py:722] (val) algo minimum step 9600: {'min': 0.988037109375, 'score': 0.988037109375, 'examples_seen': 493840, 'step': 9600, 'algorithm': 'minimum'}
I0716 00:05:05.224726 132821147629056 run.py:722] (val) algo minimum step 9650: {'min': 0.989990234375, 'score': 0.989990234375, 'examples_seen': 496400, 'step': 9650, 'algorithm': 'minimum'}
I0716 00:05:06.932370 132821147629056 run.py:722] (val) algo minimum step 9700: {'min': 0.984619140625, 'score': 0.984619140625, 'examples_seen': 498928, 'step': 9700, 'algorithm': 'minimum'}
I0716 00:05:08.662194 132821147629056 run.py:722] (val) algo minimum step 9750: {'min': 0.986083984375, 'score': 0.986083984375, 'examples_seen': 501552, 'step': 9750, 'algorithm': 'minimum'}
I0716 00:05:10.392399 132821147629056 run.py:722] (val) algo minimum step 9800: {'min': 0.982421875, 'score': 0.982421875, 'examples_seen': 504176, 'step': 9800, 'algorithm': 'minimum'}
I0716 00:05:12.109910 132821147629056 run.py:722] (val) algo minimum step 9850: {'min': 0.9912109375, 'score': 0.9912109375, 'examples_seen': 506736, 'step': 9850, 'algorithm': 'minimum'}
I0716 00:05:13.853975 132821147629056 run.py:722] (val) algo minimum step 9900: {'min': 0.986572265625, 'score': 0.986572265625, 'examples_seen': 509312, 'step': 9900, 'algorithm': 'minimum'}
I0716 00:05:15.573440 132821147629056 run.py:722] (val) algo minimum step 9950: {'min': 0.9931640625, 'score': 0.9931640625, 'examples_seen': 511840, 'step': 9950, 'algorithm': 'minimum'}
I0716 00:05:16.566320 132821147629056 run.py:752] Restoring best model from checkpoint...
I0716 00:05:34.616270 132821147629056 run.py:767] (test) algo minimum : {'min': 0.95751953125, 'score': 0.95751953125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'minimum'}
I0716 00:05:34.616468 132821147629056 run.py:769] Done!
