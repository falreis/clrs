I0716 18:23:53.837694 124088241030656 run.py:767] (test) algo activity_selector : {'selected': 0.8812260536398469, 'score': 0.8812260536398469, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'activity_selector'}
I0716 18:32:54.513650 137040288290304 run.py:767] (test) algo articulation_points : {'is_cut': 0.506079027355623, 'score': 0.506079027355623, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'articulation_points'}
I0716 18:45:42.772969 130711122957824 run.py:767] (test) algo bellman_ford : {'pi': 0.91650390625, 'score': 0.91650390625, 'examples_seen': 1108784, 'step': 10000, 'algorithm': 'bellman_ford'}
I0716 18:58:00.482147 130232025478656 run.py:767] (test) algo bfs : {'pi': 0.99462890625, 'score': 0.99462890625, 'examples_seen': 1194759, 'step': 10000, 'algorithm': 'bfs'}
I0716 19:08:02.608947 132180842464768 run.py:767] (test) algo binary_search : {'return': 0.57763671875, 'score': 0.57763671875, 'examples_seen': 768330, 'step': 10000, 'algorithm': 'binary_search'}
I0716 19:17:10.353070 126140538426880 run.py:767] (test) algo bridges : {'is_bridge': 0.723540731237973, 'score': 0.723540731237973, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'bridges'}
I0716 19:34:12.943014 136221394413056 run.py:767] (test) algo bubble_sort : {'pred': 0.33740234375, 'score': 0.33740234375, 'examples_seen': 338304, 'step': 10000, 'algorithm': 'bubble_sort'}
I0716 19:44:48.945872 132227552474624 run.py:767] (test) algo dag_shortest_paths : {'pi': 0.8310546875, 'score': 0.8310546875, 'examples_seen': 296183, 'step': 10000, 'algorithm': 'dag_shortest_paths'}
I0716 19:53:14.402269 132276257179136 run.py:767] (test) algo dfs : {'pi': 0.13623046875, 'score': 0.13623046875, 'examples_seen': 171456, 'step': 10000, 'algorithm': 'dfs'}
I0716 20:03:07.793761 140603330549248 run.py:767] (test) algo dijkstra : {'pi': 0.93798828125, 'score': 0.93798828125, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'dijkstra'}
I0716 20:15:13.588345 125941570491904 run.py:767] (test) algo floyd_warshall : {'Pi': 0.4221954345703125, 'score': 0.4221954345703125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'floyd_warshall'}
I0716 20:22:28.844798 128459458754048 run.py:767] (test) algo graham_scan : {'in_hull': 0.7876447876447876, 'score': 0.7876447876447876, 'examples_seen': 297430, 'step': 10000, 'algorithm': 'graham_scan'}
I0716 20:37:23.862481 140086191965696 run.py:767] (test) algo heapsort : {'pred': 0.1953125, 'score': 0.1953125, 'examples_seen': 155410, 'step': 10000, 'algorithm': 'heapsort'}
I0716 20:56:17.143755 138801230378496 run.py:767] (test) algo insertion_sort : {'pred': 0.8369140625, 'score': 0.8369140625, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'insertion_sort'}
I0716 21:02:34.111168 125832661394944 run.py:767] (test) algo jarvis_march : {'in_hull': 0.5522388059701493, 'score': 0.5522388059701493, 'examples_seen': 114103, 'step': 10000, 'algorithm': 'jarvis_march'}
I0716 21:19:18.988025 138760313800192 run.py:767] (test) algo kmp_matcher : {'match': 0.06494140625, 'score': 0.06494140625, 'examples_seen': 168847, 'step': 10000, 'algorithm': 'kmp_matcher'}
I0716 21:32:34.155784 137202607490560 run.py:767] (test) algo lcs_length : {'b': 0.820404052734375, 'score': 0.820404052734375, 'examples_seen': 1186537, 'step': 10000, 'algorithm': 'lcs_length'}
I0716 21:48:54.705409 139718869898752 run.py:767] (test) algo matrix_chain_order : {'s': 0.9265365600585938, 'score': 0.9265365600585938, 'examples_seen': 821852, 'step': 10000, 'algorithm': 'matrix_chain_order'}
I0716 21:57:16.158195 130696166696448 run.py:767] (test) algo minimum : {'min': 0.9580078125, 'score': 0.9580078125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'minimum'}
I0716 22:11:38.806797 138665005028864 run.py:767] (test) algo mst_kruskal : {'in_mst': 0.8144872101362658, 'score': 0.8144872101362658, 'examples_seen': 826765, 'step': 10000, 'algorithm': 'mst_kruskal'}
I0716 22:21:22.688629 129552255399424 run.py:767] (test) algo mst_prim : {'pi': 0.8984375, 'score': 0.8984375, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'mst_prim'}
I0716 22:35:26.709656 128188165961216 run.py:767] (test) algo optimal_bst : {'root': 0.8145488165680473, 'score': 0.8145488165680473, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'optimal_bst'}
I0716 23:14:58.016204 139152854750720 run.py:767] (test) algo quickselect : {'median': 0.0302734375, 'score': 0.0302734375, 'examples_seen': 323100, 'step': 10000, 'algorithm': 'quickselect'}
I0716 23:32:24.299129 137884747625984 run.py:767] (test) algo quicksort : {'pred': 0.4150390625, 'score': 0.4150390625, 'examples_seen': 347181, 'step': 10000, 'algorithm': 'quicksort'}
I0716 23:39:38.359205 140579278480896 run.py:767] (test) algo segments_intersect : {'intersect': 0.9270935960591132, 'score': 0.9270935960591132, 'examples_seen': 512000, 'step': 10000, 'algorithm': 'segments_intersect'}
I0716 23:46:09.039387 126182279984640 run.py:767] (test) algo task_scheduling : {'selected': 0.8869244935543279, 'score': 0.8869244935543279, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'task_scheduling'}
I0716 23:54:05.185426 128828847339008 run.py:767] (test) algo topological_sort : {'topo': 0.7353515625, 'topo_head': 0.78125, 'score': 0.75830078125, 'examples_seen': 190739, 'step': 10000, 'algorithm': 'topological_sort'}
