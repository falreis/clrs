I0827 16:40:20.120060 134493687799808 xla_bridge.py:925] Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
I0827 16:40:20.126972 134493687799808 xla_bridge.py:925] Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
I0827 16:40:20.496079 134493687799808 run.py:414] Model: f4 ['mst_kruskal', 'mst_prim', 'naive_string_matcher', 'optimal_bst', 'quickselect', 'quicksort', 'segments_intersect', 'strongly_connected_components', 'task_scheduling', 'topological_sort']
I0827 16:40:20.496216 134493687799808 run.py:416] algorithms ['mst_kruskal', 'mst_prim', 'naive_string_matcher', 'optimal_bst', 'quickselect', 'quicksort', 'segments_intersect', 'strongly_connected_components', 'task_scheduling', 'topological_sort']
I0827 16:40:20.496619 134493687799808 run.py:417] train_lengths ['4', '7', '11', '13', '16']
I0827 16:40:20.496668 134493687799808 run.py:418] train_batch_size 16
I0827 16:40:20.496860 134493687799808 run.py:419] val_batch_size 16
I0827 16:40:20.496895 134493687799808 run.py:420] test_batch_size 16
I0827 16:40:20.496925 134493687799808 run.py:421] chunked_training True
I0827 16:40:20.497056 134493687799808 run.py:422] chunk_length 8
I0827 16:40:20.497088 134493687799808 run.py:423] train_steps 10000
I0827 16:40:20.497119 134493687799808 run.py:424] eval_every 50
I0827 16:40:20.497148 134493687799808 run.py:425] test_every 500
I0827 16:40:20.497177 134493687799808 run.py:426] hidden_size 128
I0827 16:40:20.497206 134493687799808 run.py:427] nb_msg_passing_steps 1
I0827 16:40:20.497235 134493687799808 run.py:428] learning_rate 0.001
I0827 16:40:20.497374 134493687799808 run.py:429] grad_clip_max_norm 1.0
I0827 16:40:20.497404 134493687799808 run.py:430] dropout_prob 0.0
I0827 16:40:20.497434 134493687799808 run.py:431] hint_teacher_forcing 0.0
I0827 16:40:20.497485 134493687799808 run.py:432] hint_mode none
I0827 16:40:20.497758 134493687799808 run.py:433] hint_repred_mode soft
I0827 16:40:20.497794 134493687799808 run.py:434] use_ln False
I0827 16:40:20.497826 134493687799808 run.py:435] use_lstm True
I0827 16:40:20.497855 134493687799808 run.py:436] nb_triplet_fts 8
I0827 16:40:20.497885 134493687799808 run.py:437] encoder_init xavier_on_scalars
I0827 16:40:20.497914 134493687799808 run.py:438] processor_type f4
I0827 16:40:20.497944 134493687799808 run.py:439] checkpoint_path CLRS30
I0827 16:40:20.497974 134493687799808 run.py:440] dataset_path CLRS30
I0827 16:40:20.498003 134493687799808 run.py:441] freeze_processor False
I0827 16:40:20.498031 134493687799808 run.py:442] reduction min
I0827 16:40:20.498059 134493687799808 run.py:443] activation elu
I0827 16:40:20.498086 134493687799808 run.py:444] restore_model 
I0827 16:40:20.498114 134493687799808 run.py:445] gated False
I0827 16:40:20.498142 134493687799808 run.py:446] gated_activation sigmoid
I0827 16:40:20.503931 134493687799808 run.py:472] Creating samplers for algo mst_kruskal
W0827 16:40:20.504205 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.MSTSampler'>
W0827 16:40:20.504599 134493687799808 samplers.py:109] Sampling dataset on-the-fly, unlimited samples.
W0827 16:40:20.926682 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.MSTSampler'>
W0827 16:40:21.431510 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.MSTSampler'>
W0827 16:40:22.198591 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.MSTSampler'>
W0827 16:40:23.403432 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.MSTSampler'>
W0827 16:40:25.205432 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.MSTSampler'>
I0827 16:40:25.205890 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:25.285777 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:25.286823 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_kruskal_test/1.0.0
I0827 16:40:25.290480 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_kruskal_test/1.0.0
I0827 16:40:25.295068 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 2 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_kruskal_test/1.0.0.
I0827 16:40:25.377580 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_kruskal_test/1.0.0
I0827 16:40:25.671848 134493687799808 run.py:472] Creating samplers for algo mst_prim
W0827 16:40:25.672136 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.BellmanFordSampler'>
W0827 16:40:26.024697 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.BellmanFordSampler'>
W0827 16:40:26.445224 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.BellmanFordSampler'>
W0827 16:40:26.994504 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.BellmanFordSampler'>
W0827 16:40:27.614125 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.BellmanFordSampler'>
W0827 16:40:28.318205 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.BellmanFordSampler'>
I0827 16:40:28.318673 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:28.364788 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:28.365631 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_prim_test/1.0.0
I0827 16:40:28.370398 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_prim_test/1.0.0
I0827 16:40:28.373166 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 1 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_prim_test/1.0.0.
I0827 16:40:28.425189 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/mst_prim_test/1.0.0
I0827 16:40:28.550094 134493687799808 run.py:472] Creating samplers for algo naive_string_matcher
W0827 16:40:28.550350 134493687799808 samplers.py:299] Ignoring kwargs {'p'} when building sampler class <class 'clrs._src.samplers.MatcherSampler'>
W0827 16:40:29.042640 134493687799808 samplers.py:299] Ignoring kwargs {'p'} when building sampler class <class 'clrs._src.samplers.MatcherSampler'>
I0827 16:40:29.043027 134493687799808 samplers.py:124] Creating a dataset with 4096 samples.
I0827 16:40:29.494235 134493687799808 samplers.py:144] 1000 samples created
I0827 16:40:29.945567 134493687799808 samplers.py:144] 2000 samples created
I0827 16:40:30.421323 134493687799808 samplers.py:144] 3000 samples created
I0827 16:40:30.885805 134493687799808 samplers.py:144] 4000 samples created
I0827 16:40:31.043301 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:31.044199 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/naive_string_matcher_test/1.0.0
I0827 16:40:31.047307 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/naive_string_matcher_test/1.0.0
I0827 16:40:31.050039 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 2 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/naive_string_matcher_test/1.0.0.
I0827 16:40:31.099112 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/naive_string_matcher_test/1.0.0
I0827 16:40:31.207390 134493687799808 run.py:472] Creating samplers for algo optimal_bst
W0827 16:40:31.207678 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.OptimalBSTSampler'>
W0827 16:40:33.473955 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.OptimalBSTSampler'>
I0827 16:40:33.474435 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:33.572818 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:33.573549 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/optimal_bst_test/1.0.0
I0827 16:40:33.576655 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/optimal_bst_test/1.0.0
I0827 16:40:33.579173 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 2 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/optimal_bst_test/1.0.0.
I0827 16:40:33.630156 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/optimal_bst_test/1.0.0
I0827 16:40:33.747027 134493687799808 run.py:472] Creating samplers for algo quickselect
W0827 16:40:33.747262 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.SortingSampler'>
W0827 16:40:35.822108 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.SortingSampler'>
I0827 16:40:35.822923 134493687799808 samplers.py:124] Creating a dataset with 4096 samples.
I0827 16:40:37.841740 134493687799808 samplers.py:144] 1000 samples created
I0827 16:40:39.446110 134493687799808 samplers.py:144] 2000 samples created
I0827 16:40:40.942082 134493687799808 samplers.py:144] 3000 samples created
I0827 16:40:42.510709 134493687799808 samplers.py:144] 4000 samples created
I0827 16:40:42.938883 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:42.939846 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/quickselect_test/1.0.0
I0827 16:40:42.944865 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/quickselect_test/1.0.0
I0827 16:40:42.948247 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 16 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/quickselect_test/1.0.0.
I0827 16:40:43.000292 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/quickselect_test/1.0.0
I0827 16:40:43.138945 134493687799808 run.py:472] Creating samplers for algo quicksort
W0827 16:40:43.139248 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.SortingSampler'>
W0827 16:40:45.204047 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.SortingSampler'>
I0827 16:40:45.204593 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:45.303690 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:45.304441 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/quicksort_test/1.0.0
I0827 16:40:45.307223 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/quicksort_test/1.0.0
I0827 16:40:45.309681 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 1 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/quicksort_test/1.0.0.
I0827 16:40:45.355784 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/quicksort_test/1.0.0
I0827 16:40:45.460832 134493687799808 run.py:472] Creating samplers for algo segments_intersect
W0827 16:40:45.461083 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.SegmentsSampler'>
W0827 16:40:45.747616 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.SegmentsSampler'>
I0827 16:40:45.748071 134493687799808 samplers.py:124] Creating a dataset with 4096 samples.
I0827 16:40:46.051003 134493687799808 samplers.py:144] 1000 samples created
I0827 16:40:46.339753 134493687799808 samplers.py:144] 2000 samples created
I0827 16:40:46.632672 134493687799808 samplers.py:144] 3000 samples created
I0827 16:40:46.943075 134493687799808 samplers.py:144] 4000 samples created
I0827 16:40:47.074551 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:47.076881 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/segments_intersect_test/1.0.0
I0827 16:40:47.079863 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/segments_intersect_test/1.0.0
I0827 16:40:47.082264 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 1 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/segments_intersect_test/1.0.0.
I0827 16:40:47.136206 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/segments_intersect_test/1.0.0
I0827 16:40:47.253101 134493687799808 run.py:472] Creating samplers for algo strongly_connected_components
W0827 16:40:47.253508 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.SccSampler'>
W0827 16:40:55.208693 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.SccSampler'>
I0827 16:40:55.209147 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:55.566005 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:55.566908 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/strongly_connected_components_test/1.0.0
I0827 16:40:55.570878 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/strongly_connected_components_test/1.0.0
I0827 16:40:55.573905 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 2 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/strongly_connected_components_test/1.0.0.
I0827 16:40:55.641213 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/strongly_connected_components_test/1.0.0
I0827 16:40:55.818696 134493687799808 run.py:472] Creating samplers for algo task_scheduling
W0827 16:40:55.818967 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.TaskSampler'>
W0827 16:40:56.413513 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle', 'p'} when building sampler class <class 'clrs._src.samplers.TaskSampler'>
I0827 16:40:56.413953 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:56.447760 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:56.448513 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/task_scheduling_test/1.0.0
I0827 16:40:56.451391 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/task_scheduling_test/1.0.0
I0827 16:40:56.453968 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 1 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/task_scheduling_test/1.0.0.
I0827 16:40:56.501862 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/task_scheduling_test/1.0.0
I0827 16:40:56.603550 134493687799808 run.py:472] Creating samplers for algo topological_sort
W0827 16:40:56.603757 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.TopoSampler'>
W0827 16:40:58.418602 134493687799808 samplers.py:299] Ignoring kwargs {'length_needle'} when building sampler class <class 'clrs._src.samplers.TopoSampler'>
I0827 16:40:58.419007 134493687799808 samplers.py:124] Creating a dataset with 64 samples.
I0827 16:40:58.517320 134493687799808 run.py:258] Dataset found at CLRS30/CLRS30_v1.0.0. Skipping download.
I0827 16:40:58.518050 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/topological_sort_test/1.0.0
I0827 16:40:58.523200 134493687799808 dataset_info.py:708] Load dataset info from CLRS30/CLRS30_v1.0.0/clrs_dataset/topological_sort_test/1.0.0
I0827 16:40:58.526044 134493687799808 reader.py:262] Creating a tf.data.Dataset reading 1 files located in folders: CLRS30/CLRS30_v1.0.0/clrs_dataset/topological_sort_test/1.0.0.
I0827 16:40:58.583199 134493687799808 logging_logger.py:49] Constructing tf.data.Dataset clrs_dataset for split test, from CLRS30/CLRS30_v1.0.0/clrs_dataset/topological_sort_test/1.0.0
I0827 16:42:04.689876 134493687799808 run.py:695] Algo mst_kruskal step 0 current loss 0.743032, current_train_items 26.
I0827 16:42:12.256140 134493687799808 run.py:695] Algo mst_prim step 0 current loss 1.907033, current_train_items 20.
I0827 16:42:18.139016 134493687799808 run.py:695] Algo naive_string_matcher step 0 current loss 2.853990, current_train_items 15.
I0827 16:42:28.579369 134493687799808 run.py:695] Algo optimal_bst step 0 current loss 0.000000, current_train_items 0.
I0827 16:42:33.324406 134493687799808 run.py:695] Algo quickselect step 0 current loss 0.000000, current_train_items 0.
I0827 16:42:44.395656 134493687799808 run.py:695] Algo quicksort step 0 current loss 0.000000, current_train_items 0.
I0827 16:42:48.674321 134493687799808 run.py:695] Algo segments_intersect step 0 current loss 0.753108, current_train_items 32.
I0827 16:42:57.912876 134493687799808 run.py:695] Algo strongly_connected_components step 0 current loss 0.000000, current_train_items 0.
I0827 16:43:02.489022 134493687799808 run.py:695] Algo task_scheduling step 0 current loss 0.000000, current_train_items 0.
I0827 16:43:11.556647 134493687799808 run.py:695] Algo topological_sort step 0 current loss 0.000000, current_train_items 0.
I0827 16:43:13.094504 134493687799808 run.py:730] (val) algo mst_kruskal step 0: {'in_mst': 0.0, 'score': 0.0, 'examples_seen': 26, 'step': 0, 'algorithm': 'mst_kruskal'}
I0827 16:43:14.440027 134493687799808 run.py:730] (val) algo mst_prim step 0: {'pi': 0.54296875, 'score': 0.54296875, 'examples_seen': 20, 'step': 0, 'algorithm': 'mst_prim'}
I0827 16:43:16.595617 134493687799808 run.py:730] (val) algo naive_string_matcher step 0: {'match': 0.200927734375, 'score': 0.200927734375, 'examples_seen': 15, 'step': 0, 'algorithm': 'naive_string_matcher'}
I0827 16:43:18.269775 134493687799808 run.py:730] (val) algo optimal_bst step 0: {'root': 0.0027032871972318337, 'score': 0.0027032871972318337, 'examples_seen': 0, 'step': 0, 'algorithm': 'optimal_bst'}
I0827 16:43:22.421832 134493687799808 run.py:730] (val) algo quickselect step 0: {'median': 0.03271484375, 'score': 0.03271484375, 'examples_seen': 0, 'step': 0, 'algorithm': 'quickselect'}
I0827 16:43:25.620383 134493687799808 run.py:730] (val) algo quicksort step 0: {'pred': 0.1083984375, 'score': 0.1083984375, 'examples_seen': 0, 'step': 0, 'algorithm': 'quicksort'}
I0827 16:43:27.194011 134493687799808 run.py:730] (val) algo segments_intersect step 0: {'intersect': 0.0010251153254741158, 'score': 0.0010251153254741158, 'examples_seen': 32, 'step': 0, 'algorithm': 'segments_intersect'}
I0827 16:43:29.401252 134493687799808 run.py:730] (val) algo strongly_connected_components step 0: {'scc_id': 0.5341796875, 'score': 0.5341796875, 'examples_seen': 0, 'step': 0, 'algorithm': 'strongly_connected_components'}
I0827 16:43:30.124663 134493687799808 run.py:730] (val) algo task_scheduling step 0: {'selected': 0.780952380952381, 'score': 0.780952380952381, 'examples_seen': 0, 'step': 0, 'algorithm': 'task_scheduling'}
I0827 16:43:31.609868 134493687799808 run.py:730] (val) algo topological_sort step 0: {'topo': 0.005859375, 'topo_head': 0.140625, 'score': 0.0732421875, 'examples_seen': 0, 'step': 0, 'algorithm': 'topological_sort'}
I0827 16:43:31.610083 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.228, val scores are: mst_kruskal: 0.000, mst_prim: 0.543, naive_string_matcher: 0.201, optimal_bst: 0.003, quickselect: 0.033, quicksort: 0.108, segments_intersect: 0.001, strongly_connected_components: 0.534, task_scheduling: 0.781, topological_sort: 0.073
W0827 16:44:03.668368 134493687799808 samplers.py:175] Increasing hint lengh from 118 to 120
W0827 16:44:45.069513 134493687799808 samplers.py:175] Increasing hint lengh from 13 to 15
I0827 16:44:50.944312 134493687799808 run.py:695] Algo mst_kruskal step 50 current loss 0.170802, current_train_items 1154.
I0827 16:44:50.953891 134493687799808 run.py:695] Algo mst_prim step 50 current loss 0.865683, current_train_items 1029.
I0827 16:44:50.962377 134493687799808 run.py:695] Algo naive_string_matcher step 50 current loss 2.607570, current_train_items 688.
I0827 16:44:50.974239 134493687799808 run.py:695] Algo optimal_bst step 50 current loss 0.000000, current_train_items 304.
I0827 16:44:51.052012 134493687799808 run.py:695] Algo quickselect step 50 current loss 2.520464, current_train_items 121.
I0827 16:44:51.062132 134493687799808 run.py:695] Algo quicksort step 50 current loss 0.000000, current_train_items 78.
I0827 16:44:51.080071 134493687799808 run.py:695] Algo segments_intersect step 50 current loss 0.706732, current_train_items 1312.
I0827 16:44:51.090282 134493687799808 run.py:695] Algo strongly_connected_components step 50 current loss 1.299994, current_train_items 64.
I0827 16:44:51.108825 134493687799808 run.py:695] Algo task_scheduling step 50 current loss 0.000000, current_train_items 304.
I0827 16:44:51.122106 134493687799808 run.py:695] Algo topological_sort step 50 current loss 2.951955, current_train_items 133.
I0827 16:44:51.234131 134493687799808 run.py:730] (val) algo mst_kruskal step 50: {'in_mst': 0.1739130434782609, 'score': 0.1739130434782609, 'examples_seen': 1154, 'step': 50, 'algorithm': 'mst_kruskal'}
I0827 16:44:51.255934 134493687799808 run.py:730] (val) algo mst_prim step 50: {'pi': 0.6123046875, 'score': 0.6123046875, 'examples_seen': 1029, 'step': 50, 'algorithm': 'mst_prim'}
I0827 16:44:52.007752 134493687799808 run.py:730] (val) algo naive_string_matcher step 50: {'match': 0.2412109375, 'score': 0.2412109375, 'examples_seen': 688, 'step': 50, 'algorithm': 'naive_string_matcher'}
I0827 16:44:52.055859 134493687799808 run.py:730] (val) algo optimal_bst step 50: {'root': 0.5675821799307958, 'score': 0.5675821799307958, 'examples_seen': 304, 'step': 50, 'algorithm': 'optimal_bst'}
I0827 16:44:55.744958 134493687799808 run.py:730] (val) algo quickselect step 50: {'median': 0.150146484375, 'score': 0.150146484375, 'examples_seen': 121, 'step': 50, 'algorithm': 'quickselect'}
I0827 16:44:55.900934 134493687799808 run.py:730] (val) algo quicksort step 50: {'pred': 0.4658203125, 'score': 0.4658203125, 'examples_seen': 78, 'step': 50, 'algorithm': 'quicksort'}
I0827 16:44:56.386898 134493687799808 run.py:730] (val) algo segments_intersect step 50: {'intersect': 0.17420157610949813, 'score': 0.17420157610949813, 'examples_seen': 1312, 'step': 50, 'algorithm': 'segments_intersect'}
I0827 16:44:56.493454 134493687799808 run.py:730] (val) algo strongly_connected_components step 50: {'scc_id': 0.6826171875, 'score': 0.6826171875, 'examples_seen': 64, 'step': 50, 'algorithm': 'strongly_connected_components'}
I0827 16:44:56.507904 134493687799808 run.py:730] (val) algo task_scheduling step 50: {'selected': 0.1958041958041958, 'score': 0.1958041958041958, 'examples_seen': 304, 'step': 50, 'algorithm': 'task_scheduling'}
I0827 16:44:56.564088 134493687799808 run.py:730] (val) algo topological_sort step 50: {'topo': 0.125, 'topo_head': 1.0, 'score': 0.5625, 'examples_seen': 133, 'step': 50, 'algorithm': 'topological_sort'}
I0827 16:44:56.564270 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.383, val scores are: mst_kruskal: 0.174, mst_prim: 0.612, naive_string_matcher: 0.241, optimal_bst: 0.568, quickselect: 0.150, quicksort: 0.466, segments_intersect: 0.174, strongly_connected_components: 0.683, task_scheduling: 0.196, topological_sort: 0.562
W0827 16:44:59.919800 134493687799808 samplers.py:175] Increasing hint lengh from 58 to 66
I0827 16:45:13.330563 134493687799808 run.py:695] Algo mst_kruskal step 100 current loss 0.180671, current_train_items 2193.
I0827 16:45:13.339991 134493687799808 run.py:695] Algo mst_prim step 100 current loss 0.695355, current_train_items 2076.
I0827 16:45:13.348419 134493687799808 run.py:695] Algo naive_string_matcher step 100 current loss 2.508136, current_train_items 1379.
I0827 16:45:13.360035 134493687799808 run.py:695] Algo optimal_bst step 100 current loss 0.000000, current_train_items 608.
I0827 16:45:13.439404 134493687799808 run.py:695] Algo quickselect step 100 current loss 2.798605, current_train_items 238.
I0827 16:45:13.450272 134493687799808 run.py:695] Algo quicksort step 100 current loss 15.425622, current_train_items 155.
I0827 16:45:13.469127 134493687799808 run.py:695] Algo segments_intersect step 100 current loss 0.693357, current_train_items 2592.
I0827 16:45:13.480170 134493687799808 run.py:695] Algo strongly_connected_components step 100 current loss 0.000000, current_train_items 112.
I0827 16:45:13.499127 134493687799808 run.py:695] Algo task_scheduling step 100 current loss 0.000000, current_train_items 608.
I0827 16:45:13.511079 134493687799808 run.py:695] Algo topological_sort step 100 current loss 2.837451, current_train_items 274.
I0827 16:45:13.634583 134493687799808 run.py:730] (val) algo mst_kruskal step 100: {'in_mst': 0.061224489795918366, 'score': 0.061224489795918366, 'examples_seen': 2193, 'step': 100, 'algorithm': 'mst_kruskal'}
I0827 16:45:13.656208 134493687799808 run.py:730] (val) algo mst_prim step 100: {'pi': 0.58203125, 'score': 0.58203125, 'examples_seen': 2076, 'step': 100, 'algorithm': 'mst_prim'}
I0827 16:45:14.413866 134493687799808 run.py:730] (val) algo naive_string_matcher step 100: {'match': 0.230224609375, 'score': 0.230224609375, 'examples_seen': 1379, 'step': 100, 'algorithm': 'naive_string_matcher'}
I0827 16:45:14.461993 134493687799808 run.py:730] (val) algo optimal_bst step 100: {'root': 0.6996107266435986, 'score': 0.6996107266435986, 'examples_seen': 608, 'step': 100, 'algorithm': 'optimal_bst'}
I0827 16:45:18.238196 134493687799808 run.py:730] (val) algo quickselect step 100: {'median': 0.1142578125, 'score': 0.1142578125, 'examples_seen': 238, 'step': 100, 'algorithm': 'quickselect'}
I0827 16:45:18.389967 134493687799808 run.py:730] (val) algo quicksort step 100: {'pred': 0.732421875, 'score': 0.732421875, 'examples_seen': 155, 'step': 100, 'algorithm': 'quicksort'}
I0827 16:45:19.281143 134493687799808 run.py:730] (val) algo segments_intersect step 100: {'intersect': 0.07692307692307694, 'score': 0.07692307692307694, 'examples_seen': 2592, 'step': 100, 'algorithm': 'segments_intersect'}
I0827 16:45:19.388876 134493687799808 run.py:730] (val) algo strongly_connected_components step 100: {'scc_id': 0.6865234375, 'score': 0.6865234375, 'examples_seen': 112, 'step': 100, 'algorithm': 'strongly_connected_components'}
I0827 16:45:19.402568 134493687799808 run.py:730] (val) algo task_scheduling step 100: {'selected': 0.9224865694551037, 'score': 0.9224865694551037, 'examples_seen': 608, 'step': 100, 'algorithm': 'task_scheduling'}
I0827 16:45:19.457535 134493687799808 run.py:730] (val) algo topological_sort step 100: {'topo': 0.1767578125, 'topo_head': 1.0, 'score': 0.58837890625, 'examples_seen': 274, 'step': 100, 'algorithm': 'topological_sort'}
I0827 16:45:19.457734 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.469, val scores are: mst_kruskal: 0.061, mst_prim: 0.582, naive_string_matcher: 0.230, optimal_bst: 0.700, quickselect: 0.114, quicksort: 0.732, segments_intersect: 0.077, strongly_connected_components: 0.687, task_scheduling: 0.922, topological_sort: 0.588
W0827 16:45:30.137807 134493687799808 samplers.py:175] Increasing hint lengh from 57 to 58
I0827 16:45:36.470635 134493687799808 run.py:695] Algo mst_kruskal step 150 current loss 0.176575, current_train_items 3288.
I0827 16:45:36.479972 134493687799808 run.py:695] Algo mst_prim step 150 current loss 0.616715, current_train_items 3096.
I0827 16:45:36.488011 134493687799808 run.py:695] Algo naive_string_matcher step 150 current loss 2.328727, current_train_items 2065.
I0827 16:45:36.500129 134493687799808 run.py:695] Algo optimal_bst step 150 current loss 0.000000, current_train_items 912.
I0827 16:45:36.577992 134493687799808 run.py:695] Algo quickselect step 150 current loss 2.366847, current_train_items 359.
I0827 16:45:36.587972 134493687799808 run.py:695] Algo quicksort step 150 current loss 14.278408, current_train_items 232.
I0827 16:45:36.605611 134493687799808 run.py:695] Algo segments_intersect step 150 current loss 0.703677, current_train_items 3872.
I0827 16:45:36.616002 134493687799808 run.py:695] Algo strongly_connected_components step 150 current loss 0.000000, current_train_items 176.
I0827 16:45:36.634249 134493687799808 run.py:695] Algo task_scheduling step 150 current loss 0.000000, current_train_items 912.
I0827 16:45:36.646205 134493687799808 run.py:695] Algo topological_sort step 150 current loss 2.189045, current_train_items 415.
I0827 16:45:36.760742 134493687799808 run.py:730] (val) algo mst_kruskal step 150: {'in_mst': 0.1708920187793427, 'score': 0.1708920187793427, 'examples_seen': 3288, 'step': 150, 'algorithm': 'mst_kruskal'}
I0827 16:45:36.781560 134493687799808 run.py:730] (val) algo mst_prim step 150: {'pi': 0.72265625, 'score': 0.72265625, 'examples_seen': 3096, 'step': 150, 'algorithm': 'mst_prim'}
I0827 16:45:37.523752 134493687799808 run.py:730] (val) algo naive_string_matcher step 150: {'match': 0.224365234375, 'score': 0.224365234375, 'examples_seen': 2065, 'step': 150, 'algorithm': 'naive_string_matcher'}
I0827 16:45:37.571610 134493687799808 run.py:730] (val) algo optimal_bst step 150: {'root': 0.7319420415224913, 'score': 0.7319420415224913, 'examples_seen': 912, 'step': 150, 'algorithm': 'optimal_bst'}
I0827 16:45:41.226823 134493687799808 run.py:730] (val) algo quickselect step 150: {'median': 0.207275390625, 'score': 0.207275390625, 'examples_seen': 359, 'step': 150, 'algorithm': 'quickselect'}
I0827 16:45:41.371282 134493687799808 run.py:730] (val) algo quicksort step 150: {'pred': 0.7607421875, 'score': 0.7607421875, 'examples_seen': 232, 'step': 150, 'algorithm': 'quicksort'}
I0827 16:45:42.308810 134493687799808 run.py:730] (val) algo segments_intersect step 150: {'intersect': 0.627911380420375, 'score': 0.627911380420375, 'examples_seen': 3872, 'step': 150, 'algorithm': 'segments_intersect'}
I0827 16:45:42.414905 134493687799808 run.py:730] (val) algo strongly_connected_components step 150: {'scc_id': 0.7080078125, 'score': 0.7080078125, 'examples_seen': 176, 'step': 150, 'algorithm': 'strongly_connected_components'}
I0827 16:45:42.437819 134493687799808 run.py:730] (val) algo task_scheduling step 150: {'selected': 0.9350453172205437, 'score': 0.9350453172205437, 'examples_seen': 912, 'step': 150, 'algorithm': 'task_scheduling'}
I0827 16:45:42.492713 134493687799808 run.py:730] (val) algo topological_sort step 150: {'topo': 0.2548828125, 'topo_head': 0.984375, 'score': 0.61962890625, 'examples_seen': 415, 'step': 150, 'algorithm': 'topological_sort'}
I0827 16:45:42.492956 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.571, val scores are: mst_kruskal: 0.171, mst_prim: 0.723, naive_string_matcher: 0.224, optimal_bst: 0.732, quickselect: 0.207, quicksort: 0.761, segments_intersect: 0.628, strongly_connected_components: 0.708, task_scheduling: 0.935, topological_sort: 0.620
W0827 16:45:50.645816 134493687799808 samplers.py:175] Increasing hint lengh from 32 to 33
I0827 16:45:59.553098 134493687799808 run.py:695] Algo mst_kruskal step 200 current loss 0.149114, current_train_items 4369.
I0827 16:45:59.563033 134493687799808 run.py:695] Algo mst_prim step 200 current loss 0.660027, current_train_items 4091.
I0827 16:45:59.571821 134493687799808 run.py:695] Algo naive_string_matcher step 200 current loss 2.367992, current_train_items 2744.
I0827 16:45:59.584858 134493687799808 run.py:695] Algo optimal_bst step 200 current loss 0.000000, current_train_items 1216.
I0827 16:45:59.661886 134493687799808 run.py:695] Algo quickselect step 200 current loss 2.306951, current_train_items 482.
I0827 16:45:59.671944 134493687799808 run.py:695] Algo quicksort step 200 current loss 0.000000, current_train_items 310.
I0827 16:45:59.689870 134493687799808 run.py:695] Algo segments_intersect step 200 current loss 0.788413, current_train_items 5152.
I0827 16:45:59.701176 134493687799808 run.py:695] Algo strongly_connected_components step 200 current loss 0.000000, current_train_items 238.
I0827 16:45:59.720003 134493687799808 run.py:695] Algo task_scheduling step 200 current loss 0.000000, current_train_items 1216.
I0827 16:45:59.731313 134493687799808 run.py:695] Algo topological_sort step 200 current loss 3.670487, current_train_items 552.
I0827 16:45:59.841914 134493687799808 run.py:730] (val) algo mst_kruskal step 200: {'in_mst': 0.10224948875255623, 'score': 0.10224948875255623, 'examples_seen': 4369, 'step': 200, 'algorithm': 'mst_kruskal'}
I0827 16:45:59.862672 134493687799808 run.py:730] (val) algo mst_prim step 200: {'pi': 0.7099609375, 'score': 0.7099609375, 'examples_seen': 4091, 'step': 200, 'algorithm': 'mst_prim'}
I0827 16:46:00.602041 134493687799808 run.py:730] (val) algo naive_string_matcher step 200: {'match': 0.25048828125, 'score': 0.25048828125, 'examples_seen': 2744, 'step': 200, 'algorithm': 'naive_string_matcher'}
I0827 16:46:00.650099 134493687799808 run.py:730] (val) algo optimal_bst step 200: {'root': 0.7757352941176471, 'score': 0.7757352941176471, 'examples_seen': 1216, 'step': 200, 'algorithm': 'optimal_bst'}
I0827 16:46:04.299045 134493687799808 run.py:730] (val) algo quickselect step 200: {'median': 0.20849609375, 'score': 0.20849609375, 'examples_seen': 482, 'step': 200, 'algorithm': 'quickselect'}
I0827 16:46:04.443625 134493687799808 run.py:730] (val) algo quicksort step 200: {'pred': 0.7421875, 'score': 0.7421875, 'examples_seen': 310, 'step': 200, 'algorithm': 'quicksort'}
I0827 16:46:04.949738 134493687799808 run.py:730] (val) algo segments_intersect step 200: {'intersect': 0.6612191534564471, 'score': 0.6612191534564471, 'examples_seen': 5152, 'step': 200, 'algorithm': 'segments_intersect'}
I0827 16:46:05.053761 134493687799808 run.py:730] (val) algo strongly_connected_components step 200: {'scc_id': 0.7041015625, 'score': 0.7041015625, 'examples_seen': 238, 'step': 200, 'algorithm': 'strongly_connected_components'}
I0827 16:46:05.067130 134493687799808 run.py:730] (val) algo task_scheduling step 200: {'selected': 0.9153656532456861, 'score': 0.9153656532456861, 'examples_seen': 1216, 'step': 200, 'algorithm': 'task_scheduling'}
I0827 16:46:05.121297 134493687799808 run.py:730] (val) algo topological_sort step 200: {'topo': 0.2626953125, 'topo_head': 1.0, 'score': 0.63134765625, 'examples_seen': 552, 'step': 200, 'algorithm': 'topological_sort'}
I0827 16:46:05.121508 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.570, val scores are: mst_kruskal: 0.102, mst_prim: 0.710, naive_string_matcher: 0.250, optimal_bst: 0.776, quickselect: 0.208, quicksort: 0.742, segments_intersect: 0.661, strongly_connected_components: 0.704, task_scheduling: 0.915, topological_sort: 0.631
I0827 16:46:23.334410 134493687799808 run.py:695] Algo mst_kruskal step 250 current loss 0.117110, current_train_items 5488.
I0827 16:46:23.344084 134493687799808 run.py:695] Algo mst_prim step 250 current loss 0.558967, current_train_items 5111.
I0827 16:46:23.353152 134493687799808 run.py:695] Algo naive_string_matcher step 250 current loss 2.401247, current_train_items 3439.
I0827 16:46:23.365010 134493687799808 run.py:695] Algo optimal_bst step 250 current loss 0.000000, current_train_items 1520.
I0827 16:46:23.443604 134493687799808 run.py:695] Algo quickselect step 250 current loss 2.390209, current_train_items 612.
I0827 16:46:23.454074 134493687799808 run.py:695] Algo quicksort step 250 current loss 12.908827, current_train_items 385.
I0827 16:46:23.472343 134493687799808 run.py:695] Algo segments_intersect step 250 current loss 0.671913, current_train_items 6432.
I0827 16:46:23.483150 134493687799808 run.py:695] Algo strongly_connected_components step 250 current loss 0.000000, current_train_items 291.
I0827 16:46:23.501998 134493687799808 run.py:695] Algo task_scheduling step 250 current loss 0.000000, current_train_items 1520.
I0827 16:46:23.513881 134493687799808 run.py:695] Algo topological_sort step 250 current loss 2.176745, current_train_items 691.
I0827 16:46:23.630930 134493687799808 run.py:730] (val) algo mst_kruskal step 250: {'in_mst': 0.1863354037267081, 'score': 0.1863354037267081, 'examples_seen': 5488, 'step': 250, 'algorithm': 'mst_kruskal'}
I0827 16:46:23.652301 134493687799808 run.py:730] (val) algo mst_prim step 250: {'pi': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 5111, 'step': 250, 'algorithm': 'mst_prim'}
I0827 16:46:24.410929 134493687799808 run.py:730] (val) algo naive_string_matcher step 250: {'match': 0.2421875, 'score': 0.2421875, 'examples_seen': 3439, 'step': 250, 'algorithm': 'naive_string_matcher'}
I0827 16:46:24.458874 134493687799808 run.py:730] (val) algo optimal_bst step 250: {'root': 0.7640570934256056, 'score': 0.7640570934256056, 'examples_seen': 1520, 'step': 250, 'algorithm': 'optimal_bst'}
I0827 16:46:28.190120 134493687799808 run.py:730] (val) algo quickselect step 250: {'median': 0.219970703125, 'score': 0.219970703125, 'examples_seen': 612, 'step': 250, 'algorithm': 'quickselect'}
I0827 16:46:28.336868 134493687799808 run.py:730] (val) algo quicksort step 250: {'pred': 0.6318359375, 'score': 0.6318359375, 'examples_seen': 385, 'step': 250, 'algorithm': 'quicksort'}
I0827 16:46:28.829478 134493687799808 run.py:730] (val) algo segments_intersect step 250: {'intersect': 0.6424799863737013, 'score': 0.6424799863737013, 'examples_seen': 6432, 'step': 250, 'algorithm': 'segments_intersect'}
I0827 16:46:28.935217 134493687799808 run.py:730] (val) algo strongly_connected_components step 250: {'scc_id': 0.6669921875, 'score': 0.6669921875, 'examples_seen': 291, 'step': 250, 'algorithm': 'strongly_connected_components'}
I0827 16:46:28.948949 134493687799808 run.py:730] (val) algo task_scheduling step 250: {'selected': 0.9506263817243921, 'score': 0.9506263817243921, 'examples_seen': 1520, 'step': 250, 'algorithm': 'task_scheduling'}
I0827 16:46:29.003920 134493687799808 run.py:730] (val) algo topological_sort step 250: {'topo': 0.4013671875, 'topo_head': 0.984375, 'score': 0.69287109375, 'examples_seen': 691, 'step': 250, 'algorithm': 'topological_sort'}
I0827 16:46:29.004106 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.570, current avg val score is 0.577, val scores are: mst_kruskal: 0.186, mst_prim: 0.772, naive_string_matcher: 0.242, optimal_bst: 0.764, quickselect: 0.220, quicksort: 0.632, segments_intersect: 0.642, strongly_connected_components: 0.667, task_scheduling: 0.951, topological_sort: 0.693
W0827 16:46:44.990856 134493687799808 samplers.py:175] Increasing hint lengh from 66 to 70
I0827 16:46:46.377174 134493687799808 run.py:695] Algo mst_kruskal step 300 current loss 0.162634, current_train_items 6574.
I0827 16:46:46.387242 134493687799808 run.py:695] Algo mst_prim step 300 current loss 0.640299, current_train_items 6125.
I0827 16:46:46.396298 134493687799808 run.py:695] Algo naive_string_matcher step 300 current loss 2.547484, current_train_items 4131.
I0827 16:46:46.407682 134493687799808 run.py:695] Algo optimal_bst step 300 current loss 0.000000, current_train_items 1824.
I0827 16:46:46.485077 134493687799808 run.py:695] Algo quickselect step 300 current loss 1.900493, current_train_items 739.
I0827 16:46:46.496174 134493687799808 run.py:695] Algo quicksort step 300 current loss 19.870596, current_train_items 464.
I0827 16:46:46.513378 134493687799808 run.py:695] Algo segments_intersect step 300 current loss 0.691933, current_train_items 7712.
I0827 16:46:46.524216 134493687799808 run.py:695] Algo strongly_connected_components step 300 current loss 0.000000, current_train_items 351.
I0827 16:46:46.542589 134493687799808 run.py:695] Algo task_scheduling step 300 current loss 0.000000, current_train_items 1824.
I0827 16:46:46.554768 134493687799808 run.py:695] Algo topological_sort step 300 current loss 1.369674, current_train_items 830.
I0827 16:46:46.677051 134493687799808 run.py:730] (val) algo mst_kruskal step 300: {'in_mst': 0.0, 'score': 0.0, 'examples_seen': 6574, 'step': 300, 'algorithm': 'mst_kruskal'}
I0827 16:46:46.698292 134493687799808 run.py:730] (val) algo mst_prim step 300: {'pi': 0.73828125, 'score': 0.73828125, 'examples_seen': 6125, 'step': 300, 'algorithm': 'mst_prim'}
I0827 16:46:47.444282 134493687799808 run.py:730] (val) algo naive_string_matcher step 300: {'match': 0.23779296875, 'score': 0.23779296875, 'examples_seen': 4131, 'step': 300, 'algorithm': 'naive_string_matcher'}
I0827 16:46:47.492825 134493687799808 run.py:730] (val) algo optimal_bst step 300: {'root': 0.7898464532871973, 'score': 0.7898464532871973, 'examples_seen': 1824, 'step': 300, 'algorithm': 'optimal_bst'}
I0827 16:46:51.179792 134493687799808 run.py:730] (val) algo quickselect step 300: {'median': 0.15869140625, 'score': 0.15869140625, 'examples_seen': 739, 'step': 300, 'algorithm': 'quickselect'}
I0827 16:46:51.325508 134493687799808 run.py:730] (val) algo quicksort step 300: {'pred': 0.759765625, 'score': 0.759765625, 'examples_seen': 464, 'step': 300, 'algorithm': 'quicksort'}
I0827 16:46:51.825541 134493687799808 run.py:730] (val) algo segments_intersect step 300: {'intersect': 0.6563731931668857, 'score': 0.6563731931668857, 'examples_seen': 7712, 'step': 300, 'algorithm': 'segments_intersect'}
I0827 16:46:51.930938 134493687799808 run.py:730] (val) algo strongly_connected_components step 300: {'scc_id': 0.765625, 'score': 0.765625, 'examples_seen': 351, 'step': 300, 'algorithm': 'strongly_connected_components'}
I0827 16:46:51.944617 134493687799808 run.py:730] (val) algo task_scheduling step 300: {'selected': 0.9216965742251223, 'score': 0.9216965742251223, 'examples_seen': 1824, 'step': 300, 'algorithm': 'task_scheduling'}
I0827 16:46:51.999320 134493687799808 run.py:730] (val) algo topological_sort step 300: {'topo': 0.4599609375, 'topo_head': 1.0, 'score': 0.72998046875, 'examples_seen': 830, 'step': 300, 'algorithm': 'topological_sort'}
I0827 16:46:51.999538 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.576, val scores are: mst_kruskal: 0.000, mst_prim: 0.738, naive_string_matcher: 0.238, optimal_bst: 0.790, quickselect: 0.159, quicksort: 0.760, segments_intersect: 0.656, strongly_connected_components: 0.766, task_scheduling: 0.922, topological_sort: 0.730
W0827 16:47:02.632496 134493687799808 samplers.py:175] Increasing hint lengh from 25 to 26
I0827 16:47:09.482565 134493687799808 run.py:695] Algo mst_kruskal step 350 current loss 0.112629, current_train_items 7689.
I0827 16:47:09.493317 134493687799808 run.py:695] Algo mst_prim step 350 current loss 0.503088, current_train_items 7155.
I0827 16:47:09.501948 134493687799808 run.py:695] Algo naive_string_matcher step 350 current loss 2.644240, current_train_items 4809.
I0827 16:47:09.513492 134493687799808 run.py:695] Algo optimal_bst step 350 current loss 0.557585, current_train_items 2144.
I0827 16:47:09.592525 134493687799808 run.py:695] Algo quickselect step 350 current loss 0.000000, current_train_items 863.
I0827 16:47:09.603101 134493687799808 run.py:695] Algo quicksort step 350 current loss 16.952465, current_train_items 541.
I0827 16:47:09.621000 134493687799808 run.py:695] Algo segments_intersect step 350 current loss 0.695927, current_train_items 8992.
I0827 16:47:09.631816 134493687799808 run.py:695] Algo strongly_connected_components step 350 current loss 1.529816, current_train_items 414.
I0827 16:47:09.649848 134493687799808 run.py:695] Algo task_scheduling step 350 current loss 0.158325, current_train_items 2144.
I0827 16:47:09.661947 134493687799808 run.py:695] Algo topological_sort step 350 current loss 1.492422, current_train_items 968.
I0827 16:47:09.780241 134493687799808 run.py:730] (val) algo mst_kruskal step 350: {'in_mst': 0.7653390742734122, 'score': 0.7653390742734122, 'examples_seen': 7689, 'step': 350, 'algorithm': 'mst_kruskal'}
I0827 16:47:09.801348 134493687799808 run.py:730] (val) algo mst_prim step 350: {'pi': 0.7373046875, 'score': 0.7373046875, 'examples_seen': 7155, 'step': 350, 'algorithm': 'mst_prim'}
I0827 16:47:10.538982 134493687799808 run.py:730] (val) algo naive_string_matcher step 350: {'match': 0.23974609375, 'score': 0.23974609375, 'examples_seen': 4809, 'step': 350, 'algorithm': 'naive_string_matcher'}
I0827 16:47:10.586845 134493687799808 run.py:730] (val) algo optimal_bst step 350: {'root': 0.7999567474048442, 'score': 0.7999567474048442, 'examples_seen': 2144, 'step': 350, 'algorithm': 'optimal_bst'}
I0827 16:47:14.246307 134493687799808 run.py:730] (val) algo quickselect step 350: {'median': 0.2099609375, 'score': 0.2099609375, 'examples_seen': 863, 'step': 350, 'algorithm': 'quickselect'}
I0827 16:47:14.390802 134493687799808 run.py:730] (val) algo quicksort step 350: {'pred': 0.8349609375, 'score': 0.8349609375, 'examples_seen': 541, 'step': 350, 'algorithm': 'quicksort'}
I0827 16:47:14.899014 134493687799808 run.py:730] (val) algo segments_intersect step 350: {'intersect': 0.27903411268685324, 'score': 0.27903411268685324, 'examples_seen': 8992, 'step': 350, 'algorithm': 'segments_intersect'}
I0827 16:47:15.006234 134493687799808 run.py:730] (val) algo strongly_connected_components step 350: {'scc_id': 0.7294921875, 'score': 0.7294921875, 'examples_seen': 414, 'step': 350, 'algorithm': 'strongly_connected_components'}
I0827 16:47:15.019756 134493687799808 run.py:730] (val) algo task_scheduling step 350: {'selected': 0.8645833333333334, 'score': 0.8645833333333334, 'examples_seen': 2144, 'step': 350, 'algorithm': 'task_scheduling'}
I0827 16:47:15.073766 134493687799808 run.py:730] (val) algo topological_sort step 350: {'topo': 0.4814453125, 'topo_head': 1.0, 'score': 0.74072265625, 'examples_seen': 968, 'step': 350, 'algorithm': 'topological_sort'}
I0827 16:47:15.073967 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.620, val scores are: mst_kruskal: 0.765, mst_prim: 0.737, naive_string_matcher: 0.240, optimal_bst: 0.800, quickselect: 0.210, quicksort: 0.835, segments_intersect: 0.279, strongly_connected_components: 0.729, task_scheduling: 0.865, topological_sort: 0.741
I0827 16:47:33.156802 134493687799808 run.py:695] Algo mst_kruskal step 400 current loss 0.117949, current_train_items 8836.
I0827 16:47:33.166681 134493687799808 run.py:695] Algo mst_prim step 400 current loss 0.305297, current_train_items 8186.
I0827 16:47:33.175560 134493687799808 run.py:695] Algo naive_string_matcher step 400 current loss 2.337174, current_train_items 5498.
I0827 16:47:33.187315 134493687799808 run.py:695] Algo optimal_bst step 400 current loss 0.551368, current_train_items 2448.
I0827 16:47:33.265198 134493687799808 run.py:695] Algo quickselect step 400 current loss 2.309807, current_train_items 985.
I0827 16:47:33.275693 134493687799808 run.py:695] Algo quicksort step 400 current loss 0.000000, current_train_items 617.
I0827 16:47:33.293905 134493687799808 run.py:695] Algo segments_intersect step 400 current loss 0.696295, current_train_items 10272.
I0827 16:47:33.304565 134493687799808 run.py:695] Algo strongly_connected_components step 400 current loss 0.000000, current_train_items 470.
I0827 16:47:33.322664 134493687799808 run.py:695] Algo task_scheduling step 400 current loss 0.198487, current_train_items 2448.
I0827 16:47:33.334954 134493687799808 run.py:695] Algo topological_sort step 400 current loss 1.470906, current_train_items 1109.
I0827 16:47:33.454232 134493687799808 run.py:730] (val) algo mst_kruskal step 400: {'in_mst': 0.7602852441031267, 'score': 0.7602852441031267, 'examples_seen': 8836, 'step': 400, 'algorithm': 'mst_kruskal'}
I0827 16:47:33.475353 134493687799808 run.py:730] (val) algo mst_prim step 400: {'pi': 0.7109375, 'score': 0.7109375, 'examples_seen': 8186, 'step': 400, 'algorithm': 'mst_prim'}
I0827 16:47:34.223747 134493687799808 run.py:730] (val) algo naive_string_matcher step 400: {'match': 0.336181640625, 'score': 0.336181640625, 'examples_seen': 5498, 'step': 400, 'algorithm': 'naive_string_matcher'}
I0827 16:47:34.272171 134493687799808 run.py:730] (val) algo optimal_bst step 400: {'root': 0.7993620242214533, 'score': 0.7993620242214533, 'examples_seen': 2448, 'step': 400, 'algorithm': 'optimal_bst'}
I0827 16:47:37.960371 134493687799808 run.py:730] (val) algo quickselect step 400: {'median': 0.15625, 'score': 0.15625, 'examples_seen': 985, 'step': 400, 'algorithm': 'quickselect'}
I0827 16:47:38.106094 134493687799808 run.py:730] (val) algo quicksort step 400: {'pred': 0.8212890625, 'score': 0.8212890625, 'examples_seen': 617, 'step': 400, 'algorithm': 'quicksort'}
I0827 16:47:38.618948 134493687799808 run.py:730] (val) algo segments_intersect step 400: {'intersect': 0.5864183511242336, 'score': 0.5864183511242336, 'examples_seen': 10272, 'step': 400, 'algorithm': 'segments_intersect'}
I0827 16:47:38.724673 134493687799808 run.py:730] (val) algo strongly_connected_components step 400: {'scc_id': 0.7607421875, 'score': 0.7607421875, 'examples_seen': 470, 'step': 400, 'algorithm': 'strongly_connected_components'}
I0827 16:47:38.738251 134493687799808 run.py:730] (val) algo task_scheduling step 400: {'selected': 0.9191290824261275, 'score': 0.9191290824261275, 'examples_seen': 2448, 'step': 400, 'algorithm': 'task_scheduling'}
I0827 16:47:38.791799 134493687799808 run.py:730] (val) algo topological_sort step 400: {'topo': 0.4921875, 'topo_head': 1.0, 'score': 0.74609375, 'examples_seen': 1109, 'step': 400, 'algorithm': 'topological_sort'}
I0827 16:47:38.791996 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.620, current avg val score is 0.660, val scores are: mst_kruskal: 0.760, mst_prim: 0.711, naive_string_matcher: 0.336, optimal_bst: 0.799, quickselect: 0.156, quicksort: 0.821, segments_intersect: 0.586, strongly_connected_components: 0.761, task_scheduling: 0.919, topological_sort: 0.746
I0827 16:47:56.400018 134493687799808 run.py:695] Algo mst_kruskal step 450 current loss 0.124500, current_train_items 9971.
I0827 16:47:56.410498 134493687799808 run.py:695] Algo mst_prim step 450 current loss 0.828363, current_train_items 9217.
I0827 16:47:56.419780 134493687799808 run.py:695] Algo naive_string_matcher step 450 current loss 2.175270, current_train_items 6163.
I0827 16:47:56.431244 134493687799808 run.py:695] Algo optimal_bst step 450 current loss 0.494645, current_train_items 2752.
I0827 16:47:56.511820 134493687799808 run.py:695] Algo quickselect step 450 current loss 1.882560, current_train_items 1109.
I0827 16:47:56.522761 134493687799808 run.py:695] Algo quicksort step 450 current loss 12.087901, current_train_items 692.
I0827 16:47:56.540687 134493687799808 run.py:695] Algo segments_intersect step 450 current loss 0.668550, current_train_items 11552.
I0827 16:47:56.551246 134493687799808 run.py:695] Algo strongly_connected_components step 450 current loss 1.348042, current_train_items 528.
I0827 16:47:56.570185 134493687799808 run.py:695] Algo task_scheduling step 450 current loss 0.175748, current_train_items 2752.
I0827 16:47:56.582162 134493687799808 run.py:695] Algo topological_sort step 450 current loss 2.565845, current_train_items 1247.
I0827 16:47:56.695822 134493687799808 run.py:730] (val) algo mst_kruskal step 450: {'in_mst': 0.6146527117031398, 'score': 0.6146527117031398, 'examples_seen': 9971, 'step': 450, 'algorithm': 'mst_kruskal'}
I0827 16:47:56.716909 134493687799808 run.py:730] (val) algo mst_prim step 450: {'pi': 0.78515625, 'score': 0.78515625, 'examples_seen': 9217, 'step': 450, 'algorithm': 'mst_prim'}
I0827 16:47:57.469092 134493687799808 run.py:730] (val) algo naive_string_matcher step 450: {'match': 0.47265625, 'score': 0.47265625, 'examples_seen': 6163, 'step': 450, 'algorithm': 'naive_string_matcher'}
I0827 16:47:57.518001 134493687799808 run.py:730] (val) algo optimal_bst step 450: {'root': 0.8219074394463668, 'score': 0.8219074394463668, 'examples_seen': 2752, 'step': 450, 'algorithm': 'optimal_bst'}
I0827 16:48:01.220697 134493687799808 run.py:730] (val) algo quickselect step 450: {'median': 0.173828125, 'score': 0.173828125, 'examples_seen': 1109, 'step': 450, 'algorithm': 'quickselect'}
I0827 16:48:01.367084 134493687799808 run.py:730] (val) algo quicksort step 450: {'pred': 0.7568359375, 'score': 0.7568359375, 'examples_seen': 692, 'step': 450, 'algorithm': 'quicksort'}
I0827 16:48:01.885078 134493687799808 run.py:730] (val) algo segments_intersect step 450: {'intersect': 0.6406336341867748, 'score': 0.6406336341867748, 'examples_seen': 11552, 'step': 450, 'algorithm': 'segments_intersect'}
I0827 16:48:01.991730 134493687799808 run.py:730] (val) algo strongly_connected_components step 450: {'scc_id': 0.7314453125, 'score': 0.7314453125, 'examples_seen': 528, 'step': 450, 'algorithm': 'strongly_connected_components'}
I0827 16:48:02.005508 134493687799808 run.py:730] (val) algo task_scheduling step 450: {'selected': 0.8877721943048575, 'score': 0.8877721943048575, 'examples_seen': 2752, 'step': 450, 'algorithm': 'task_scheduling'}
I0827 16:48:02.059130 134493687799808 run.py:730] (val) algo topological_sort step 450: {'topo': 0.546875, 'topo_head': 1.0, 'score': 0.7734375, 'examples_seen': 1247, 'step': 450, 'algorithm': 'topological_sort'}
I0827 16:48:02.059316 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.660, current avg val score is 0.666, val scores are: mst_kruskal: 0.615, mst_prim: 0.785, naive_string_matcher: 0.473, optimal_bst: 0.822, quickselect: 0.174, quicksort: 0.757, segments_intersect: 0.641, strongly_connected_components: 0.731, task_scheduling: 0.888, topological_sort: 0.773
W0827 16:48:04.705332 134493687799808 samplers.py:175] Increasing hint lengh from 15 to 20
W0827 16:48:13.309325 134493687799808 samplers.py:175] Increasing hint lengh from 121 to 126
I0827 16:48:19.611232 134493687799808 run.py:695] Algo mst_kruskal step 500 current loss 0.125000, current_train_items 11102.
I0827 16:48:19.621827 134493687799808 run.py:695] Algo mst_prim step 500 current loss 0.557111, current_train_items 10275.
I0827 16:48:19.630911 134493687799808 run.py:695] Algo naive_string_matcher step 500 current loss 1.557896, current_train_items 6853.
I0827 16:48:19.642861 134493687799808 run.py:695] Algo optimal_bst step 500 current loss 0.690216, current_train_items 3056.
I0827 16:48:19.721343 134493687799808 run.py:695] Algo quickselect step 500 current loss 2.233011, current_train_items 1231.
I0827 16:48:19.731553 134493687799808 run.py:695] Algo quicksort step 500 current loss 6.284365, current_train_items 770.
I0827 16:48:19.749779 134493687799808 run.py:695] Algo segments_intersect step 500 current loss 0.724407, current_train_items 12832.
I0827 16:48:19.760291 134493687799808 run.py:695] Algo strongly_connected_components step 500 current loss 1.566811, current_train_items 587.
I0827 16:48:19.778927 134493687799808 run.py:695] Algo task_scheduling step 500 current loss 0.146102, current_train_items 3056.
I0827 16:48:19.790894 134493687799808 run.py:695] Algo topological_sort step 500 current loss 2.164656, current_train_items 1388.
I0827 16:48:19.910084 134493687799808 run.py:730] (val) algo mst_kruskal step 500: {'in_mst': 0.45547945205479456, 'score': 0.45547945205479456, 'examples_seen': 11102, 'step': 500, 'algorithm': 'mst_kruskal'}
I0827 16:48:19.931620 134493687799808 run.py:730] (val) algo mst_prim step 500: {'pi': 0.744140625, 'score': 0.744140625, 'examples_seen': 10275, 'step': 500, 'algorithm': 'mst_prim'}
I0827 16:48:20.674837 134493687799808 run.py:730] (val) algo naive_string_matcher step 500: {'match': 0.60400390625, 'score': 0.60400390625, 'examples_seen': 6853, 'step': 500, 'algorithm': 'naive_string_matcher'}
I0827 16:48:20.723048 134493687799808 run.py:730] (val) algo optimal_bst step 500: {'root': 0.7655168685121108, 'score': 0.7655168685121108, 'examples_seen': 3056, 'step': 500, 'algorithm': 'optimal_bst'}
I0827 16:48:24.402734 134493687799808 run.py:730] (val) algo quickselect step 500: {'median': 0.2001953125, 'score': 0.2001953125, 'examples_seen': 1231, 'step': 500, 'algorithm': 'quickselect'}
I0827 16:48:24.548769 134493687799808 run.py:730] (val) algo quicksort step 500: {'pred': 0.81640625, 'score': 0.81640625, 'examples_seen': 770, 'step': 500, 'algorithm': 'quicksort'}
I0827 16:48:25.083089 134493687799808 run.py:730] (val) algo segments_intersect step 500: {'intersect': 0.34946790250600757, 'score': 0.34946790250600757, 'examples_seen': 12832, 'step': 500, 'algorithm': 'segments_intersect'}
I0827 16:48:25.187954 134493687799808 run.py:730] (val) algo strongly_connected_components step 500: {'scc_id': 0.6650390625, 'score': 0.6650390625, 'examples_seen': 587, 'step': 500, 'algorithm': 'strongly_connected_components'}
I0827 16:48:25.201745 134493687799808 run.py:730] (val) algo task_scheduling step 500: {'selected': 0.9353796445880452, 'score': 0.9353796445880452, 'examples_seen': 3056, 'step': 500, 'algorithm': 'task_scheduling'}
I0827 16:48:25.256599 134493687799808 run.py:730] (val) algo topological_sort step 500: {'topo': 0.5498046875, 'topo_head': 1.0, 'score': 0.77490234375, 'examples_seen': 1388, 'step': 500, 'algorithm': 'topological_sort'}
I0827 16:48:25.256782 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.631, val scores are: mst_kruskal: 0.455, mst_prim: 0.744, naive_string_matcher: 0.604, optimal_bst: 0.766, quickselect: 0.200, quicksort: 0.816, segments_intersect: 0.349, strongly_connected_components: 0.665, task_scheduling: 0.935, topological_sort: 0.775
I0827 16:48:43.031727 134493687799808 run.py:695] Algo mst_kruskal step 550 current loss 0.107047, current_train_items 12232.
I0827 16:48:43.051206 134493687799808 run.py:695] Algo mst_prim step 550 current loss 0.515522, current_train_items 11263.
I0827 16:48:43.059850 134493687799808 run.py:695] Algo naive_string_matcher step 550 current loss 1.643970, current_train_items 7546.
I0827 16:48:43.071500 134493687799808 run.py:695] Algo optimal_bst step 550 current loss 0.465208, current_train_items 3360.
I0827 16:48:43.148316 134493687799808 run.py:695] Algo quickselect step 550 current loss 3.183176, current_train_items 1359.
I0827 16:48:43.158154 134493687799808 run.py:695] Algo quicksort step 550 current loss 16.075796, current_train_items 846.
I0827 16:48:43.175735 134493687799808 run.py:695] Algo segments_intersect step 550 current loss 0.661469, current_train_items 14112.
I0827 16:48:43.185793 134493687799808 run.py:695] Algo strongly_connected_components step 550 current loss 1.048891, current_train_items 645.
I0827 16:48:43.204321 134493687799808 run.py:695] Algo task_scheduling step 550 current loss 0.164139, current_train_items 3360.
I0827 16:48:43.217105 134493687799808 run.py:695] Algo topological_sort step 550 current loss 2.187481, current_train_items 1529.
I0827 16:48:43.345565 134493687799808 run.py:730] (val) algo mst_kruskal step 550: {'in_mst': 0.7488931056293485, 'score': 0.7488931056293485, 'examples_seen': 12232, 'step': 550, 'algorithm': 'mst_kruskal'}
I0827 16:48:43.366428 134493687799808 run.py:730] (val) algo mst_prim step 550: {'pi': 0.7607421875, 'score': 0.7607421875, 'examples_seen': 11263, 'step': 550, 'algorithm': 'mst_prim'}
I0827 16:48:44.107013 134493687799808 run.py:730] (val) algo naive_string_matcher step 550: {'match': 0.60791015625, 'score': 0.60791015625, 'examples_seen': 7546, 'step': 550, 'algorithm': 'naive_string_matcher'}
I0827 16:48:44.155778 134493687799808 run.py:730] (val) algo optimal_bst step 550: {'root': 0.8125, 'score': 0.8125, 'examples_seen': 3360, 'step': 550, 'algorithm': 'optimal_bst'}
I0827 16:48:47.837850 134493687799808 run.py:730] (val) algo quickselect step 550: {'median': 0.17529296875, 'score': 0.17529296875, 'examples_seen': 1359, 'step': 550, 'algorithm': 'quickselect'}
I0827 16:48:47.982633 134493687799808 run.py:730] (val) algo quicksort step 550: {'pred': 0.658203125, 'score': 0.658203125, 'examples_seen': 846, 'step': 550, 'algorithm': 'quicksort'}
I0827 16:48:48.487265 134493687799808 run.py:730] (val) algo segments_intersect step 550: {'intersect': 0.5353748680042238, 'score': 0.5353748680042238, 'examples_seen': 14112, 'step': 550, 'algorithm': 'segments_intersect'}
I0827 16:48:48.593415 134493687799808 run.py:730] (val) algo strongly_connected_components step 550: {'scc_id': 0.7119140625, 'score': 0.7119140625, 'examples_seen': 645, 'step': 550, 'algorithm': 'strongly_connected_components'}
I0827 16:48:48.606897 134493687799808 run.py:730] (val) algo task_scheduling step 550: {'selected': 0.9111842105263157, 'score': 0.9111842105263157, 'examples_seen': 3360, 'step': 550, 'algorithm': 'task_scheduling'}
I0827 16:48:48.660883 134493687799808 run.py:730] (val) algo topological_sort step 550: {'topo': 0.5537109375, 'topo_head': 1.0, 'score': 0.77685546875, 'examples_seen': 1529, 'step': 550, 'algorithm': 'topological_sort'}
I0827 16:48:48.661072 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.631, current avg val score is 0.670, val scores are: mst_kruskal: 0.749, mst_prim: 0.761, naive_string_matcher: 0.608, optimal_bst: 0.812, quickselect: 0.175, quicksort: 0.658, segments_intersect: 0.535, strongly_connected_components: 0.712, task_scheduling: 0.911, topological_sort: 0.777
I0827 16:49:06.609260 134493687799808 run.py:695] Algo mst_kruskal step 600 current loss 0.182320, current_train_items 13295.
I0827 16:49:06.628799 134493687799808 run.py:695] Algo mst_prim step 600 current loss 0.423089, current_train_items 12277.
I0827 16:49:06.645032 134493687799808 run.py:695] Algo naive_string_matcher step 600 current loss 2.179229, current_train_items 8229.
I0827 16:49:06.664538 134493687799808 run.py:695] Algo optimal_bst step 600 current loss 0.538639, current_train_items 3664.
I0827 16:49:06.748765 134493687799808 run.py:695] Algo quickselect step 600 current loss 2.104644, current_train_items 1486.
I0827 16:49:06.770942 134493687799808 run.py:695] Algo quicksort step 600 current loss 3.913405, current_train_items 923.
I0827 16:49:06.789724 134493687799808 run.py:695] Algo segments_intersect step 600 current loss 0.710236, current_train_items 15392.
I0827 16:49:06.815931 134493687799808 run.py:695] Algo strongly_connected_components step 600 current loss 1.032600, current_train_items 706.
I0827 16:49:06.840152 134493687799808 run.py:695] Algo task_scheduling step 600 current loss 0.147354, current_train_items 3664.
I0827 16:49:06.862048 134493687799808 run.py:695] Algo topological_sort step 600 current loss 0.989872, current_train_items 1665.
I0827 16:49:07.008430 134493687799808 run.py:730] (val) algo mst_kruskal step 600: {'in_mst': 0.2920681986656783, 'score': 0.2920681986656783, 'examples_seen': 13295, 'step': 600, 'algorithm': 'mst_kruskal'}
I0827 16:49:07.030391 134493687799808 run.py:730] (val) algo mst_prim step 600: {'pi': 0.7294921875, 'score': 0.7294921875, 'examples_seen': 12277, 'step': 600, 'algorithm': 'mst_prim'}
I0827 16:49:07.776426 134493687799808 run.py:730] (val) algo naive_string_matcher step 600: {'match': 0.561279296875, 'score': 0.561279296875, 'examples_seen': 8229, 'step': 600, 'algorithm': 'naive_string_matcher'}
I0827 16:49:07.824223 134493687799808 run.py:730] (val) algo optimal_bst step 600: {'root': 0.8073637543252595, 'score': 0.8073637543252595, 'examples_seen': 3664, 'step': 600, 'algorithm': 'optimal_bst'}
I0827 16:49:11.520493 134493687799808 run.py:730] (val) algo quickselect step 600: {'median': 0.174560546875, 'score': 0.174560546875, 'examples_seen': 1486, 'step': 600, 'algorithm': 'quickselect'}
I0827 16:49:11.665770 134493687799808 run.py:730] (val) algo quicksort step 600: {'pred': 0.8779296875, 'score': 0.8779296875, 'examples_seen': 923, 'step': 600, 'algorithm': 'quicksort'}
I0827 16:49:12.177543 134493687799808 run.py:730] (val) algo segments_intersect step 600: {'intersect': 0.6552575283857167, 'score': 0.6552575283857167, 'examples_seen': 15392, 'step': 600, 'algorithm': 'segments_intersect'}
I0827 16:49:12.283033 134493687799808 run.py:730] (val) algo strongly_connected_components step 600: {'scc_id': 0.76171875, 'score': 0.76171875, 'examples_seen': 706, 'step': 600, 'algorithm': 'strongly_connected_components'}
I0827 16:49:12.296743 134493687799808 run.py:730] (val) algo task_scheduling step 600: {'selected': 0.8984310487200661, 'score': 0.8984310487200661, 'examples_seen': 3664, 'step': 600, 'algorithm': 'task_scheduling'}
I0827 16:49:12.350900 134493687799808 run.py:730] (val) algo topological_sort step 600: {'topo': 0.556640625, 'topo_head': 1.0, 'score': 0.7783203125, 'examples_seen': 1665, 'step': 600, 'algorithm': 'topological_sort'}
I0827 16:49:12.351082 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.670, current avg val score is 0.654, val scores are: mst_kruskal: 0.292, mst_prim: 0.729, naive_string_matcher: 0.561, optimal_bst: 0.807, quickselect: 0.175, quicksort: 0.878, segments_intersect: 0.655, strongly_connected_components: 0.762, task_scheduling: 0.898, topological_sort: 0.778
W0827 16:49:18.090159 134493687799808 samplers.py:175] Increasing hint lengh from 120 to 131
I0827 16:49:28.996747 134493687799808 run.py:695] Algo mst_kruskal step 650 current loss 0.169537, current_train_items 14395.
I0827 16:49:29.017197 134493687799808 run.py:695] Algo mst_prim step 650 current loss 0.816385, current_train_items 13281.
I0827 16:49:29.034921 134493687799808 run.py:695] Algo naive_string_matcher step 650 current loss 1.601613, current_train_items 8924.
I0827 16:49:29.055067 134493687799808 run.py:695] Algo optimal_bst step 650 current loss 0.494115, current_train_items 3968.
I0827 16:49:29.144778 134493687799808 run.py:695] Algo quickselect step 650 current loss 3.138338, current_train_items 1606.
I0827 16:49:29.164293 134493687799808 run.py:695] Algo quicksort step 650 current loss 34.886139, current_train_items 1000.
I0827 16:49:29.183154 134493687799808 run.py:695] Algo segments_intersect step 650 current loss 0.680079, current_train_items 16672.
I0827 16:49:29.201042 134493687799808 run.py:695] Algo strongly_connected_components step 650 current loss 0.000000, current_train_items 760.
I0827 16:49:29.223326 134493687799808 run.py:695] Algo task_scheduling step 650 current loss 0.170191, current_train_items 3968.
I0827 16:49:29.242607 134493687799808 run.py:695] Algo topological_sort step 650 current loss 1.830948, current_train_items 1806.
I0827 16:49:29.408423 134493687799808 run.py:730] (val) algo mst_kruskal step 650: {'in_mst': 0.23676012461059187, 'score': 0.23676012461059187, 'examples_seen': 14395, 'step': 650, 'algorithm': 'mst_kruskal'}
I0827 16:49:29.433901 134493687799808 run.py:730] (val) algo mst_prim step 650: {'pi': 0.783203125, 'score': 0.783203125, 'examples_seen': 13281, 'step': 650, 'algorithm': 'mst_prim'}
I0827 16:49:30.607806 134493687799808 run.py:730] (val) algo naive_string_matcher step 650: {'match': 0.636474609375, 'score': 0.636474609375, 'examples_seen': 8924, 'step': 650, 'algorithm': 'naive_string_matcher'}
I0827 16:49:30.657610 134493687799808 run.py:730] (val) algo optimal_bst step 650: {'root': 0.8053092560553633, 'score': 0.8053092560553633, 'examples_seen': 3968, 'step': 650, 'algorithm': 'optimal_bst'}
I0827 16:49:34.347943 134493687799808 run.py:730] (val) algo quickselect step 650: {'median': 0.204345703125, 'score': 0.204345703125, 'examples_seen': 1606, 'step': 650, 'algorithm': 'quickselect'}
I0827 16:49:34.493867 134493687799808 run.py:730] (val) algo quicksort step 650: {'pred': 0.90234375, 'score': 0.90234375, 'examples_seen': 1000, 'step': 650, 'algorithm': 'quicksort'}
I0827 16:49:34.998939 134493687799808 run.py:730] (val) algo segments_intersect step 650: {'intersect': 0.4367895280744058, 'score': 0.4367895280744058, 'examples_seen': 16672, 'step': 650, 'algorithm': 'segments_intersect'}
I0827 16:49:35.104372 134493687799808 run.py:730] (val) algo strongly_connected_components step 650: {'scc_id': 0.740234375, 'score': 0.740234375, 'examples_seen': 760, 'step': 650, 'algorithm': 'strongly_connected_components'}
I0827 16:49:35.118542 134493687799808 run.py:730] (val) algo task_scheduling step 650: {'selected': 0.9155405405405406, 'score': 0.9155405405405406, 'examples_seen': 3968, 'step': 650, 'algorithm': 'task_scheduling'}
I0827 16:49:35.172469 134493687799808 run.py:730] (val) algo topological_sort step 650: {'topo': 0.5625, 'topo_head': 0.90625, 'score': 0.734375, 'examples_seen': 1806, 'step': 650, 'algorithm': 'topological_sort'}
I0827 16:49:35.172678 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.640, val scores are: mst_kruskal: 0.237, mst_prim: 0.783, naive_string_matcher: 0.636, optimal_bst: 0.805, quickselect: 0.204, quicksort: 0.902, segments_intersect: 0.437, strongly_connected_components: 0.740, task_scheduling: 0.916, topological_sort: 0.734
W0827 16:49:47.740195 134493687799808 samplers.py:175] Increasing hint lengh from 86 to 94
I0827 16:49:52.279669 134493687799808 run.py:695] Algo mst_kruskal step 700 current loss 0.134067, current_train_items 15567.
I0827 16:49:52.290060 134493687799808 run.py:695] Algo mst_prim step 700 current loss 0.330083, current_train_items 14283.
I0827 16:49:52.299078 134493687799808 run.py:695] Algo naive_string_matcher step 700 current loss 1.535566, current_train_items 9628.
I0827 16:49:52.311378 134493687799808 run.py:695] Algo optimal_bst step 700 current loss 0.854257, current_train_items 4272.
I0827 16:49:52.388473 134493687799808 run.py:695] Algo quickselect step 700 current loss 2.191822, current_train_items 1730.
I0827 16:49:52.399575 134493687799808 run.py:695] Algo quicksort step 700 current loss 0.000000, current_train_items 1075.
I0827 16:49:52.417361 134493687799808 run.py:695] Algo segments_intersect step 700 current loss 0.677008, current_train_items 17952.
I0827 16:49:52.428603 134493687799808 run.py:695] Algo strongly_connected_components step 700 current loss 0.000000, current_train_items 823.
I0827 16:49:52.447170 134493687799808 run.py:695] Algo task_scheduling step 700 current loss 1.930718, current_train_items 4272.
I0827 16:49:52.458892 134493687799808 run.py:695] Algo topological_sort step 700 current loss 0.835149, current_train_items 1943.
I0827 16:49:52.580691 134493687799808 run.py:730] (val) algo mst_kruskal step 700: {'in_mst': 0.2818671454219031, 'score': 0.2818671454219031, 'examples_seen': 15567, 'step': 700, 'algorithm': 'mst_kruskal'}
I0827 16:49:52.601731 134493687799808 run.py:730] (val) algo mst_prim step 700: {'pi': 0.802734375, 'score': 0.802734375, 'examples_seen': 14283, 'step': 700, 'algorithm': 'mst_prim'}
I0827 16:49:53.581029 134493687799808 run.py:730] (val) algo naive_string_matcher step 700: {'match': 0.614990234375, 'score': 0.614990234375, 'examples_seen': 9628, 'step': 700, 'algorithm': 'naive_string_matcher'}
I0827 16:49:53.630517 134493687799808 run.py:730] (val) algo optimal_bst step 700: {'root': 0.823961937716263, 'score': 0.823961937716263, 'examples_seen': 4272, 'step': 700, 'algorithm': 'optimal_bst'}
I0827 16:49:57.316297 134493687799808 run.py:730] (val) algo quickselect step 700: {'median': 0.1904296875, 'score': 0.1904296875, 'examples_seen': 1730, 'step': 700, 'algorithm': 'quickselect'}
I0827 16:49:57.462229 134493687799808 run.py:730] (val) algo quicksort step 700: {'pred': 0.69921875, 'score': 0.69921875, 'examples_seen': 1075, 'step': 700, 'algorithm': 'quicksort'}
I0827 16:49:57.978817 134493687799808 run.py:730] (val) algo segments_intersect step 700: {'intersect': 0.19360414866032843, 'score': 0.19360414866032843, 'examples_seen': 17952, 'step': 700, 'algorithm': 'segments_intersect'}
I0827 16:49:58.084118 134493687799808 run.py:730] (val) algo strongly_connected_components step 700: {'scc_id': 0.7509765625, 'score': 0.7509765625, 'examples_seen': 823, 'step': 700, 'algorithm': 'strongly_connected_components'}
I0827 16:49:58.097714 134493687799808 run.py:730] (val) algo task_scheduling step 700: {'selected': 0.9310344827586207, 'score': 0.9310344827586207, 'examples_seen': 4272, 'step': 700, 'algorithm': 'task_scheduling'}
I0827 16:49:58.151428 134493687799808 run.py:730] (val) algo topological_sort step 700: {'topo': 0.5908203125, 'topo_head': 1.0, 'score': 0.79541015625, 'examples_seen': 1943, 'step': 700, 'algorithm': 'topological_sort'}
I0827 16:49:58.151648 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.608, val scores are: mst_kruskal: 0.282, mst_prim: 0.803, naive_string_matcher: 0.615, optimal_bst: 0.824, quickselect: 0.190, quicksort: 0.699, segments_intersect: 0.194, strongly_connected_components: 0.751, task_scheduling: 0.931, topological_sort: 0.795
I0827 16:50:15.435658 134493687799808 run.py:695] Algo mst_kruskal step 750 current loss 0.139537, current_train_items 16721.
I0827 16:50:15.445865 134493687799808 run.py:695] Algo mst_prim step 750 current loss 0.632325, current_train_items 15286.
I0827 16:50:15.454451 134493687799808 run.py:695] Algo naive_string_matcher step 750 current loss 1.987932, current_train_items 10308.
I0827 16:50:15.467038 134493687799808 run.py:695] Algo optimal_bst step 750 current loss 0.000000, current_train_items 4576.
I0827 16:50:15.544858 134493687799808 run.py:695] Algo quickselect step 750 current loss 1.544645, current_train_items 1846.
I0827 16:50:15.555631 134493687799808 run.py:695] Algo quicksort step 750 current loss 10.551045, current_train_items 1145.
I0827 16:50:15.573690 134493687799808 run.py:695] Algo segments_intersect step 750 current loss 0.695220, current_train_items 19232.
I0827 16:50:15.584800 134493687799808 run.py:695] Algo strongly_connected_components step 750 current loss 1.125145, current_train_items 880.
I0827 16:50:15.603674 134493687799808 run.py:695] Algo task_scheduling step 750 current loss 0.000000, current_train_items 4576.
I0827 16:50:15.616232 134493687799808 run.py:695] Algo topological_sort step 750 current loss 1.676637, current_train_items 2082.
I0827 16:50:15.731324 134493687799808 run.py:730] (val) algo mst_kruskal step 750: {'in_mst': 0.27629233511586454, 'score': 0.27629233511586454, 'examples_seen': 16721, 'step': 750, 'algorithm': 'mst_kruskal'}
I0827 16:50:15.752595 134493687799808 run.py:730] (val) algo mst_prim step 750: {'pi': 0.80078125, 'score': 0.80078125, 'examples_seen': 15286, 'step': 750, 'algorithm': 'mst_prim'}
I0827 16:50:16.502878 134493687799808 run.py:730] (val) algo naive_string_matcher step 750: {'match': 0.61962890625, 'score': 0.61962890625, 'examples_seen': 10308, 'step': 750, 'algorithm': 'naive_string_matcher'}
I0827 16:50:16.551259 134493687799808 run.py:730] (val) algo optimal_bst step 750: {'root': 0.8182850346020761, 'score': 0.8182850346020761, 'examples_seen': 4576, 'step': 750, 'algorithm': 'optimal_bst'}
I0827 16:50:20.222304 134493687799808 run.py:730] (val) algo quickselect step 750: {'median': 0.19970703125, 'score': 0.19970703125, 'examples_seen': 1846, 'step': 750, 'algorithm': 'quickselect'}
I0827 16:50:20.367254 134493687799808 run.py:730] (val) algo quicksort step 750: {'pred': 0.78125, 'score': 0.78125, 'examples_seen': 1145, 'step': 750, 'algorithm': 'quicksort'}
I0827 16:50:20.866390 134493687799808 run.py:730] (val) algo segments_intersect step 750: {'intersect': 0.4758922980588604, 'score': 0.4758922980588604, 'examples_seen': 19232, 'step': 750, 'algorithm': 'segments_intersect'}
I0827 16:50:20.971628 134493687799808 run.py:730] (val) algo strongly_connected_components step 750: {'scc_id': 0.7060546875, 'score': 0.7060546875, 'examples_seen': 880, 'step': 750, 'algorithm': 'strongly_connected_components'}
I0827 16:50:20.985054 134493687799808 run.py:730] (val) algo task_scheduling step 750: {'selected': 0.9248826291079812, 'score': 0.9248826291079812, 'examples_seen': 4576, 'step': 750, 'algorithm': 'task_scheduling'}
I0827 16:50:21.039043 134493687799808 run.py:730] (val) algo topological_sort step 750: {'topo': 0.5810546875, 'topo_head': 0.984375, 'score': 0.78271484375, 'examples_seen': 2082, 'step': 750, 'algorithm': 'topological_sort'}
I0827 16:50:21.039219 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.608, current avg val score is 0.639, val scores are: mst_kruskal: 0.276, mst_prim: 0.801, naive_string_matcher: 0.620, optimal_bst: 0.818, quickselect: 0.200, quicksort: 0.781, segments_intersect: 0.476, strongly_connected_components: 0.706, task_scheduling: 0.925, topological_sort: 0.783
I0827 16:50:37.713835 134493687799808 run.py:695] Algo mst_kruskal step 800 current loss 0.081054, current_train_items 17843.
I0827 16:50:37.724949 134493687799808 run.py:695] Algo mst_prim step 800 current loss 0.639815, current_train_items 16293.
I0827 16:50:37.734125 134493687799808 run.py:695] Algo naive_string_matcher step 800 current loss 1.921400, current_train_items 10993.
I0827 16:50:37.746447 134493687799808 run.py:695] Algo optimal_bst step 800 current loss 0.000000, current_train_items 4880.
I0827 16:50:37.824052 134493687799808 run.py:695] Algo quickselect step 800 current loss 2.605833, current_train_items 1964.
I0827 16:50:37.834389 134493687799808 run.py:695] Algo quicksort step 800 current loss 17.461441, current_train_items 1225.
I0827 16:50:37.852826 134493687799808 run.py:695] Algo segments_intersect step 800 current loss 0.671997, current_train_items 20512.
I0827 16:50:37.864003 134493687799808 run.py:695] Algo strongly_connected_components step 800 current loss 1.689453, current_train_items 939.
I0827 16:50:37.882359 134493687799808 run.py:695] Algo task_scheduling step 800 current loss 0.000000, current_train_items 4880.
I0827 16:50:37.896420 134493687799808 run.py:695] Algo topological_sort step 800 current loss 1.679777, current_train_items 2224.
I0827 16:50:38.007163 134493687799808 run.py:730] (val) algo mst_kruskal step 800: {'in_mst': 0.44664310954063613, 'score': 0.44664310954063613, 'examples_seen': 17843, 'step': 800, 'algorithm': 'mst_kruskal'}
I0827 16:50:38.028442 134493687799808 run.py:730] (val) algo mst_prim step 800: {'pi': 0.82421875, 'score': 0.82421875, 'examples_seen': 16293, 'step': 800, 'algorithm': 'mst_prim'}
I0827 16:50:38.775922 134493687799808 run.py:730] (val) algo naive_string_matcher step 800: {'match': 0.657958984375, 'score': 0.657958984375, 'examples_seen': 10993, 'step': 800, 'algorithm': 'naive_string_matcher'}
I0827 16:50:38.823841 134493687799808 run.py:730] (val) algo optimal_bst step 800: {'root': 0.8274762110726643, 'score': 0.8274762110726643, 'examples_seen': 4880, 'step': 800, 'algorithm': 'optimal_bst'}
I0827 16:50:42.571723 134493687799808 run.py:730] (val) algo quickselect step 800: {'median': 0.183349609375, 'score': 0.183349609375, 'examples_seen': 1964, 'step': 800, 'algorithm': 'quickselect'}
I0827 16:50:42.719730 134493687799808 run.py:730] (val) algo quicksort step 800: {'pred': 0.8828125, 'score': 0.8828125, 'examples_seen': 1225, 'step': 800, 'algorithm': 'quicksort'}
I0827 16:50:43.265533 134493687799808 run.py:730] (val) algo segments_intersect step 800: {'intersect': 0.5945423810673749, 'score': 0.5945423810673749, 'examples_seen': 20512, 'step': 800, 'algorithm': 'segments_intersect'}
I0827 16:50:43.371060 134493687799808 run.py:730] (val) algo strongly_connected_components step 800: {'scc_id': 0.71875, 'score': 0.71875, 'examples_seen': 939, 'step': 800, 'algorithm': 'strongly_connected_components'}
I0827 16:50:43.384629 134493687799808 run.py:730] (val) algo task_scheduling step 800: {'selected': 0.8700959023539669, 'score': 0.8700959023539669, 'examples_seen': 4880, 'step': 800, 'algorithm': 'task_scheduling'}
I0827 16:50:43.438524 134493687799808 run.py:730] (val) algo topological_sort step 800: {'topo': 0.533203125, 'topo_head': 0.96875, 'score': 0.7509765625, 'examples_seen': 2224, 'step': 800, 'algorithm': 'topological_sort'}
I0827 16:50:43.438703 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.639, current avg val score is 0.676, val scores are: mst_kruskal: 0.447, mst_prim: 0.824, naive_string_matcher: 0.658, optimal_bst: 0.827, quickselect: 0.183, quicksort: 0.883, segments_intersect: 0.595, strongly_connected_components: 0.719, task_scheduling: 0.870, topological_sort: 0.751
I0827 16:51:00.537652 134493687799808 run.py:695] Algo mst_kruskal step 850 current loss 0.141704, current_train_items 18989.
I0827 16:51:00.547676 134493687799808 run.py:695] Algo mst_prim step 850 current loss 0.524634, current_train_items 17335.
I0827 16:51:00.556635 134493687799808 run.py:695] Algo naive_string_matcher step 850 current loss 1.710469, current_train_items 11687.
I0827 16:51:00.568740 134493687799808 run.py:695] Algo optimal_bst step 850 current loss 0.000000, current_train_items 5184.
I0827 16:51:00.645760 134493687799808 run.py:695] Algo quickselect step 850 current loss 1.911582, current_train_items 2080.
I0827 16:51:00.656076 134493687799808 run.py:695] Algo quicksort step 850 current loss 9.712680, current_train_items 1301.
I0827 16:51:00.674744 134493687799808 run.py:695] Algo segments_intersect step 850 current loss 0.704188, current_train_items 21792.
I0827 16:51:00.685382 134493687799808 run.py:695] Algo strongly_connected_components step 850 current loss 1.733533, current_train_items 999.
I0827 16:51:00.704180 134493687799808 run.py:695] Algo task_scheduling step 850 current loss 0.000000, current_train_items 5184.
I0827 16:51:00.716130 134493687799808 run.py:695] Algo topological_sort step 850 current loss 0.000000, current_train_items 2361.
I0827 16:51:00.834547 134493687799808 run.py:730] (val) algo mst_kruskal step 850: {'in_mst': 0.43106457242582896, 'score': 0.43106457242582896, 'examples_seen': 18989, 'step': 850, 'algorithm': 'mst_kruskal'}
I0827 16:51:00.855659 134493687799808 run.py:730] (val) algo mst_prim step 850: {'pi': 0.80859375, 'score': 0.80859375, 'examples_seen': 17335, 'step': 850, 'algorithm': 'mst_prim'}
I0827 16:51:01.597925 134493687799808 run.py:730] (val) algo naive_string_matcher step 850: {'match': 0.64453125, 'score': 0.64453125, 'examples_seen': 11687, 'step': 850, 'algorithm': 'naive_string_matcher'}
I0827 16:51:01.646042 134493687799808 run.py:730] (val) algo optimal_bst step 850: {'root': 0.8217452422145328, 'score': 0.8217452422145328, 'examples_seen': 5184, 'step': 850, 'algorithm': 'optimal_bst'}
I0827 16:51:05.353711 134493687799808 run.py:730] (val) algo quickselect step 850: {'median': 0.206298828125, 'score': 0.206298828125, 'examples_seen': 2080, 'step': 850, 'algorithm': 'quickselect'}
I0827 16:51:05.507712 134493687799808 run.py:730] (val) algo quicksort step 850: {'pred': 0.8681640625, 'score': 0.8681640625, 'examples_seen': 1301, 'step': 850, 'algorithm': 'quicksort'}
I0827 16:51:06.426010 134493687799808 run.py:730] (val) algo segments_intersect step 850: {'intersect': 0.47900182592818014, 'score': 0.47900182592818014, 'examples_seen': 21792, 'step': 850, 'algorithm': 'segments_intersect'}
I0827 16:51:06.537600 134493687799808 run.py:730] (val) algo strongly_connected_components step 850: {'scc_id': 0.7236328125, 'score': 0.7236328125, 'examples_seen': 999, 'step': 850, 'algorithm': 'strongly_connected_components'}
I0827 16:51:06.559450 134493687799808 run.py:730] (val) algo task_scheduling step 850: {'selected': 0.9126530612244897, 'score': 0.9126530612244897, 'examples_seen': 5184, 'step': 850, 'algorithm': 'task_scheduling'}
I0827 16:51:06.614732 134493687799808 run.py:730] (val) algo topological_sort step 850: {'topo': 0.5908203125, 'topo_head': 1.0, 'score': 0.79541015625, 'examples_seen': 2361, 'step': 850, 'algorithm': 'topological_sort'}
I0827 16:51:06.614998 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.676, current avg val score is 0.669, val scores are: mst_kruskal: 0.431, mst_prim: 0.809, naive_string_matcher: 0.645, optimal_bst: 0.822, quickselect: 0.206, quicksort: 0.868, segments_intersect: 0.479, strongly_connected_components: 0.724, task_scheduling: 0.913, topological_sort: 0.795
I0827 16:51:24.029399 134493687799808 run.py:695] Algo mst_kruskal step 900 current loss 0.122815, current_train_items 20111.
I0827 16:51:24.038914 134493687799808 run.py:695] Algo mst_prim step 900 current loss 0.296677, current_train_items 18388.
I0827 16:51:24.049802 134493687799808 run.py:695] Algo naive_string_matcher step 900 current loss 1.641850, current_train_items 12380.
I0827 16:51:24.067803 134493687799808 run.py:695] Algo optimal_bst step 900 current loss 0.000000, current_train_items 5488.
I0827 16:51:24.141824 134493687799808 run.py:695] Algo quickselect step 900 current loss 0.000000, current_train_items 2200.
I0827 16:51:24.152376 134493687799808 run.py:695] Algo quicksort step 900 current loss 0.000000, current_train_items 1379.
I0827 16:51:24.169843 134493687799808 run.py:695] Algo segments_intersect step 900 current loss 0.697997, current_train_items 23072.
I0827 16:51:24.180234 134493687799808 run.py:695] Algo strongly_connected_components step 900 current loss 1.636931, current_train_items 1057.
I0827 16:51:24.198320 134493687799808 run.py:695] Algo task_scheduling step 900 current loss 0.000000, current_train_items 5488.
I0827 16:51:24.210711 134493687799808 run.py:695] Algo topological_sort step 900 current loss 2.632892, current_train_items 2501.
I0827 16:51:24.329657 134493687799808 run.py:730] (val) algo mst_kruskal step 900: {'in_mst': 0.4260651629072682, 'score': 0.4260651629072682, 'examples_seen': 20111, 'step': 900, 'algorithm': 'mst_kruskal'}
I0827 16:51:24.350718 134493687799808 run.py:730] (val) algo mst_prim step 900: {'pi': 0.7861328125, 'score': 0.7861328125, 'examples_seen': 18388, 'step': 900, 'algorithm': 'mst_prim'}
I0827 16:51:25.112073 134493687799808 run.py:730] (val) algo naive_string_matcher step 900: {'match': 0.648681640625, 'score': 0.648681640625, 'examples_seen': 12380, 'step': 900, 'algorithm': 'naive_string_matcher'}
I0827 16:51:25.159834 134493687799808 run.py:730] (val) algo optimal_bst step 900: {'root': 0.8380190311418685, 'score': 0.8380190311418685, 'examples_seen': 5488, 'step': 900, 'algorithm': 'optimal_bst'}
I0827 16:51:28.890965 134493687799808 run.py:730] (val) algo quickselect step 900: {'median': 0.21240234375, 'score': 0.21240234375, 'examples_seen': 2200, 'step': 900, 'algorithm': 'quickselect'}
I0827 16:51:29.046162 134493687799808 run.py:730] (val) algo quicksort step 900: {'pred': 0.921875, 'score': 0.921875, 'examples_seen': 1379, 'step': 900, 'algorithm': 'quicksort'}
I0827 16:51:29.975558 134493687799808 run.py:730] (val) algo segments_intersect step 900: {'intersect': 0.6366723259762309, 'score': 0.6366723259762309, 'examples_seen': 23072, 'step': 900, 'algorithm': 'segments_intersect'}
I0827 16:51:30.083291 134493687799808 run.py:730] (val) algo strongly_connected_components step 900: {'scc_id': 0.73046875, 'score': 0.73046875, 'examples_seen': 1057, 'step': 900, 'algorithm': 'strongly_connected_components'}
I0827 16:51:30.103995 134493687799808 run.py:730] (val) algo task_scheduling step 900: {'selected': 0.9387442572741195, 'score': 0.9387442572741195, 'examples_seen': 5488, 'step': 900, 'algorithm': 'task_scheduling'}
I0827 16:51:30.159119 134493687799808 run.py:730] (val) algo topological_sort step 900: {'topo': 0.5732421875, 'topo_head': 1.0, 'score': 0.78662109375, 'examples_seen': 2501, 'step': 900, 'algorithm': 'topological_sort'}
I0827 16:51:30.159348 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.676, current avg val score is 0.693, val scores are: mst_kruskal: 0.426, mst_prim: 0.786, naive_string_matcher: 0.649, optimal_bst: 0.838, quickselect: 0.212, quicksort: 0.922, segments_intersect: 0.637, strongly_connected_components: 0.730, task_scheduling: 0.939, topological_sort: 0.787
I0827 16:51:47.140236 134493687799808 run.py:695] Algo mst_kruskal step 950 current loss 0.164936, current_train_items 21181.
I0827 16:51:47.150542 134493687799808 run.py:695] Algo mst_prim step 950 current loss 0.494933, current_train_items 19373.
I0827 16:51:47.159217 134493687799808 run.py:695] Algo naive_string_matcher step 950 current loss 1.546343, current_train_items 13053.
I0827 16:51:47.171339 134493687799808 run.py:695] Algo optimal_bst step 950 current loss 0.000000, current_train_items 5792.
I0827 16:51:47.249222 134493687799808 run.py:695] Algo quickselect step 950 current loss 3.164393, current_train_items 2323.
I0827 16:51:47.260052 134493687799808 run.py:695] Algo quicksort step 950 current loss 4.688422, current_train_items 1457.
I0827 16:51:47.277370 134493687799808 run.py:695] Algo segments_intersect step 950 current loss 0.706047, current_train_items 24352.
I0827 16:51:47.288337 134493687799808 run.py:695] Algo strongly_connected_components step 950 current loss 1.475000, current_train_items 1114.
I0827 16:51:47.306191 134493687799808 run.py:695] Algo task_scheduling step 950 current loss 0.000000, current_train_items 5792.
I0827 16:51:47.317555 134493687799808 run.py:695] Algo topological_sort step 950 current loss 1.667663, current_train_items 2642.
I0827 16:51:47.437467 134493687799808 run.py:730] (val) algo mst_kruskal step 950: {'in_mst': 0.5294117647058824, 'score': 0.5294117647058824, 'examples_seen': 21181, 'step': 950, 'algorithm': 'mst_kruskal'}
I0827 16:51:47.459270 134493687799808 run.py:730] (val) algo mst_prim step 950: {'pi': 0.7646484375, 'score': 0.7646484375, 'examples_seen': 19373, 'step': 950, 'algorithm': 'mst_prim'}
I0827 16:51:48.200518 134493687799808 run.py:730] (val) algo naive_string_matcher step 950: {'match': 0.670166015625, 'score': 0.670166015625, 'examples_seen': 13053, 'step': 950, 'algorithm': 'naive_string_matcher'}
I0827 16:51:48.248729 134493687799808 run.py:730] (val) algo optimal_bst step 950: {'root': 0.8366673875432526, 'score': 0.8366673875432526, 'examples_seen': 5792, 'step': 950, 'algorithm': 'optimal_bst'}
I0827 16:51:51.929502 134493687799808 run.py:730] (val) algo quickselect step 950: {'median': 0.200927734375, 'score': 0.200927734375, 'examples_seen': 2323, 'step': 950, 'algorithm': 'quickselect'}
I0827 16:51:52.074554 134493687799808 run.py:730] (val) algo quicksort step 950: {'pred': 0.89453125, 'score': 0.89453125, 'examples_seen': 1457, 'step': 950, 'algorithm': 'quicksort'}
I0827 16:51:52.577086 134493687799808 run.py:730] (val) algo segments_intersect step 950: {'intersect': 0.6648748530152864, 'score': 0.6648748530152864, 'examples_seen': 24352, 'step': 950, 'algorithm': 'segments_intersect'}
I0827 16:51:52.682198 134493687799808 run.py:730] (val) algo strongly_connected_components step 950: {'scc_id': 0.6826171875, 'score': 0.6826171875, 'examples_seen': 1114, 'step': 950, 'algorithm': 'strongly_connected_components'}
I0827 16:51:52.705166 134493687799808 run.py:730] (val) algo task_scheduling step 950: {'selected': 0.910411622276029, 'score': 0.910411622276029, 'examples_seen': 5792, 'step': 950, 'algorithm': 'task_scheduling'}
I0827 16:51:52.759577 134493687799808 run.py:730] (val) algo topological_sort step 950: {'topo': 0.5986328125, 'topo_head': 1.0, 'score': 0.79931640625, 'examples_seen': 2642, 'step': 950, 'algorithm': 'topological_sort'}
I0827 16:51:52.759860 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.693, current avg val score is 0.695, val scores are: mst_kruskal: 0.529, mst_prim: 0.765, naive_string_matcher: 0.670, optimal_bst: 0.837, quickselect: 0.201, quicksort: 0.895, segments_intersect: 0.665, strongly_connected_components: 0.683, task_scheduling: 0.910, topological_sort: 0.799
W0827 16:52:05.253316 134493687799808 samplers.py:175] Increasing hint lengh from 94 to 98
I0827 16:52:10.206374 134493687799808 run.py:695] Algo mst_kruskal step 1000 current loss 0.138363, current_train_items 22257.
I0827 16:52:10.216661 134493687799808 run.py:695] Algo mst_prim step 1000 current loss 0.369594, current_train_items 20385.
I0827 16:52:10.225595 134493687799808 run.py:695] Algo naive_string_matcher step 1000 current loss 1.250291, current_train_items 13727.
I0827 16:52:10.237805 134493687799808 run.py:695] Algo optimal_bst step 1000 current loss 0.000000, current_train_items 6096.
I0827 16:52:10.315105 134493687799808 run.py:695] Algo quickselect step 1000 current loss 2.354519, current_train_items 2442.
I0827 16:52:10.325030 134493687799808 run.py:695] Algo quicksort step 1000 current loss 0.000000, current_train_items 1530.
I0827 16:52:10.343543 134493687799808 run.py:695] Algo segments_intersect step 1000 current loss 0.724948, current_train_items 25632.
I0827 16:52:10.354200 134493687799808 run.py:695] Algo strongly_connected_components step 1000 current loss 0.000000, current_train_items 1174.
I0827 16:52:10.373028 134493687799808 run.py:695] Algo task_scheduling step 1000 current loss 0.000000, current_train_items 6096.
I0827 16:52:10.385043 134493687799808 run.py:695] Algo topological_sort step 1000 current loss 1.421347, current_train_items 2782.
I0827 16:52:10.500985 134493687799808 run.py:730] (val) algo mst_kruskal step 1000: {'in_mst': 0.37166793602437165, 'score': 0.37166793602437165, 'examples_seen': 22257, 'step': 1000, 'algorithm': 'mst_kruskal'}
I0827 16:52:10.522007 134493687799808 run.py:730] (val) algo mst_prim step 1000: {'pi': 0.8037109375, 'score': 0.8037109375, 'examples_seen': 20385, 'step': 1000, 'algorithm': 'mst_prim'}
I0827 16:52:11.269277 134493687799808 run.py:730] (val) algo naive_string_matcher step 1000: {'match': 0.6630859375, 'score': 0.6630859375, 'examples_seen': 13727, 'step': 1000, 'algorithm': 'naive_string_matcher'}
I0827 16:52:11.317309 134493687799808 run.py:730] (val) algo optimal_bst step 1000: {'root': 0.8156898788927336, 'score': 0.8156898788927336, 'examples_seen': 6096, 'step': 1000, 'algorithm': 'optimal_bst'}
I0827 16:52:14.989002 134493687799808 run.py:730] (val) algo quickselect step 1000: {'median': 0.18359375, 'score': 0.18359375, 'examples_seen': 2442, 'step': 1000, 'algorithm': 'quickselect'}
I0827 16:52:15.134659 134493687799808 run.py:730] (val) algo quicksort step 1000: {'pred': 0.8681640625, 'score': 0.8681640625, 'examples_seen': 1530, 'step': 1000, 'algorithm': 'quicksort'}
I0827 16:52:15.652541 134493687799808 run.py:730] (val) algo segments_intersect step 1000: {'intersect': 0.6543871399866041, 'score': 0.6543871399866041, 'examples_seen': 25632, 'step': 1000, 'algorithm': 'segments_intersect'}
I0827 16:52:15.758079 134493687799808 run.py:730] (val) algo strongly_connected_components step 1000: {'scc_id': 0.734375, 'score': 0.734375, 'examples_seen': 1174, 'step': 1000, 'algorithm': 'strongly_connected_components'}
I0827 16:52:15.771808 134493687799808 run.py:730] (val) algo task_scheduling step 1000: {'selected': 0.9157979149959905, 'score': 0.9157979149959905, 'examples_seen': 6096, 'step': 1000, 'algorithm': 'task_scheduling'}
I0827 16:52:15.825340 134493687799808 run.py:730] (val) algo topological_sort step 1000: {'topo': 0.6474609375, 'topo_head': 1.0, 'score': 0.82373046875, 'examples_seen': 2782, 'step': 1000, 'algorithm': 'topological_sort'}
I0827 16:52:15.825554 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.683, val scores are: mst_kruskal: 0.372, mst_prim: 0.804, naive_string_matcher: 0.663, optimal_bst: 0.816, quickselect: 0.184, quicksort: 0.868, segments_intersect: 0.654, strongly_connected_components: 0.734, task_scheduling: 0.916, topological_sort: 0.824
W0827 16:52:30.817371 134493687799808 samplers.py:175] Increasing hint lengh from 26 to 27
I0827 16:52:33.146106 134493687799808 run.py:695] Algo mst_kruskal step 1050 current loss 0.111373, current_train_items 23335.
I0827 16:52:33.155735 134493687799808 run.py:695] Algo mst_prim step 1050 current loss 0.318595, current_train_items 21391.
I0827 16:52:33.164787 134493687799808 run.py:695] Algo naive_string_matcher step 1050 current loss 1.375185, current_train_items 14420.
I0827 16:52:33.177228 134493687799808 run.py:695] Algo optimal_bst step 1050 current loss 0.000000, current_train_items 6400.
I0827 16:52:33.255812 134493687799808 run.py:695] Algo quickselect step 1050 current loss 2.950435, current_train_items 2558.
I0827 16:52:33.265679 134493687799808 run.py:695] Algo quicksort step 1050 current loss 14.874183, current_train_items 1608.
I0827 16:52:33.283523 134493687799808 run.py:695] Algo segments_intersect step 1050 current loss 0.638502, current_train_items 26912.
I0827 16:52:33.294205 134493687799808 run.py:695] Algo strongly_connected_components step 1050 current loss 0.000000, current_train_items 1232.
I0827 16:52:33.312885 134493687799808 run.py:695] Algo task_scheduling step 1050 current loss 0.000000, current_train_items 6400.
I0827 16:52:33.325271 134493687799808 run.py:695] Algo topological_sort step 1050 current loss 1.495806, current_train_items 2920.
I0827 16:52:33.442619 134493687799808 run.py:730] (val) algo mst_kruskal step 1050: {'in_mst': 0.4690458849235251, 'score': 0.4690458849235251, 'examples_seen': 23335, 'step': 1050, 'algorithm': 'mst_kruskal'}
I0827 16:52:33.464010 134493687799808 run.py:730] (val) algo mst_prim step 1050: {'pi': 0.814453125, 'score': 0.814453125, 'examples_seen': 21391, 'step': 1050, 'algorithm': 'mst_prim'}
I0827 16:52:34.207741 134493687799808 run.py:730] (val) algo naive_string_matcher step 1050: {'match': 0.672119140625, 'score': 0.672119140625, 'examples_seen': 14420, 'step': 1050, 'algorithm': 'naive_string_matcher'}
I0827 16:52:34.255918 134493687799808 run.py:730] (val) algo optimal_bst step 1050: {'root': 0.8253676470588235, 'score': 0.8253676470588235, 'examples_seen': 6400, 'step': 1050, 'algorithm': 'optimal_bst'}
I0827 16:52:37.935314 134493687799808 run.py:730] (val) algo quickselect step 1050: {'median': 0.21728515625, 'score': 0.21728515625, 'examples_seen': 2558, 'step': 1050, 'algorithm': 'quickselect'}
I0827 16:52:38.080286 134493687799808 run.py:730] (val) algo quicksort step 1050: {'pred': 0.900390625, 'score': 0.900390625, 'examples_seen': 1608, 'step': 1050, 'algorithm': 'quicksort'}
I0827 16:52:38.576108 134493687799808 run.py:730] (val) algo segments_intersect step 1050: {'intersect': 0.5670699631772752, 'score': 0.5670699631772752, 'examples_seen': 26912, 'step': 1050, 'algorithm': 'segments_intersect'}
I0827 16:52:38.680916 134493687799808 run.py:730] (val) algo strongly_connected_components step 1050: {'scc_id': 0.74609375, 'score': 0.74609375, 'examples_seen': 1232, 'step': 1050, 'algorithm': 'strongly_connected_components'}
I0827 16:52:38.694769 134493687799808 run.py:730] (val) algo task_scheduling step 1050: {'selected': 0.9079263410728583, 'score': 0.9079263410728583, 'examples_seen': 6400, 'step': 1050, 'algorithm': 'task_scheduling'}
I0827 16:52:38.748689 134493687799808 run.py:730] (val) algo topological_sort step 1050: {'topo': 0.6103515625, 'topo_head': 1.0, 'score': 0.80517578125, 'examples_seen': 2920, 'step': 1050, 'algorithm': 'topological_sort'}
I0827 16:52:38.748888 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.692, val scores are: mst_kruskal: 0.469, mst_prim: 0.814, naive_string_matcher: 0.672, optimal_bst: 0.825, quickselect: 0.217, quicksort: 0.900, segments_intersect: 0.567, strongly_connected_components: 0.746, task_scheduling: 0.908, topological_sort: 0.805
I0827 16:52:56.595903 134493687799808 run.py:695] Algo mst_kruskal step 1100 current loss 0.128649, current_train_items 24440.
I0827 16:52:56.606528 134493687799808 run.py:695] Algo mst_prim step 1100 current loss 0.485765, current_train_items 22383.
I0827 16:52:56.614931 134493687799808 run.py:695] Algo naive_string_matcher step 1100 current loss 1.736669, current_train_items 15098.
I0827 16:52:56.626829 134493687799808 run.py:695] Algo optimal_bst step 1100 current loss 0.000000, current_train_items 6704.
I0827 16:52:56.705121 134493687799808 run.py:695] Algo quickselect step 1100 current loss 0.000000, current_train_items 2687.
I0827 16:52:56.715103 134493687799808 run.py:695] Algo quicksort step 1100 current loss 5.820295, current_train_items 1683.
I0827 16:52:56.732497 134493687799808 run.py:695] Algo segments_intersect step 1100 current loss 0.689614, current_train_items 28192.
I0827 16:52:56.742465 134493687799808 run.py:695] Algo strongly_connected_components step 1100 current loss 1.232637, current_train_items 1291.
I0827 16:52:56.760378 134493687799808 run.py:695] Algo task_scheduling step 1100 current loss 0.000000, current_train_items 6704.
I0827 16:52:56.772517 134493687799808 run.py:695] Algo topological_sort step 1100 current loss 3.270808, current_train_items 3060.
I0827 16:52:56.887511 134493687799808 run.py:730] (val) algo mst_kruskal step 1100: {'in_mst': 0.5136459062281316, 'score': 0.5136459062281316, 'examples_seen': 24440, 'step': 1100, 'algorithm': 'mst_kruskal'}
I0827 16:52:56.908654 134493687799808 run.py:730] (val) algo mst_prim step 1100: {'pi': 0.8203125, 'score': 0.8203125, 'examples_seen': 22383, 'step': 1100, 'algorithm': 'mst_prim'}
I0827 16:52:57.672330 134493687799808 run.py:730] (val) algo naive_string_matcher step 1100: {'match': 0.677490234375, 'score': 0.677490234375, 'examples_seen': 15098, 'step': 1100, 'algorithm': 'naive_string_matcher'}
I0827 16:52:57.719950 134493687799808 run.py:730] (val) algo optimal_bst step 1100: {'root': 0.8518057958477508, 'score': 0.8518057958477508, 'examples_seen': 6704, 'step': 1100, 'algorithm': 'optimal_bst'}
I0827 16:53:01.399879 134493687799808 run.py:730] (val) algo quickselect step 1100: {'median': 0.200927734375, 'score': 0.200927734375, 'examples_seen': 2687, 'step': 1100, 'algorithm': 'quickselect'}
I0827 16:53:01.545447 134493687799808 run.py:730] (val) algo quicksort step 1100: {'pred': 0.9111328125, 'score': 0.9111328125, 'examples_seen': 1683, 'step': 1100, 'algorithm': 'quicksort'}
I0827 16:53:02.045592 134493687799808 run.py:730] (val) algo segments_intersect step 1100: {'intersect': 0.33097805875790254, 'score': 0.33097805875790254, 'examples_seen': 28192, 'step': 1100, 'algorithm': 'segments_intersect'}
I0827 16:53:02.151462 134493687799808 run.py:730] (val) algo strongly_connected_components step 1100: {'scc_id': 0.7353515625, 'score': 0.7353515625, 'examples_seen': 1291, 'step': 1100, 'algorithm': 'strongly_connected_components'}
I0827 16:53:02.165168 134493687799808 run.py:730] (val) algo task_scheduling step 1100: {'selected': 0.8140610545790935, 'score': 0.8140610545790935, 'examples_seen': 6704, 'step': 1100, 'algorithm': 'task_scheduling'}
I0827 16:53:02.219266 134493687799808 run.py:730] (val) algo topological_sort step 1100: {'topo': 0.6083984375, 'topo_head': 1.0, 'score': 0.80419921875, 'examples_seen': 3060, 'step': 1100, 'algorithm': 'topological_sort'}
I0827 16:53:02.219432 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.692, current avg val score is 0.666, val scores are: mst_kruskal: 0.514, mst_prim: 0.820, naive_string_matcher: 0.677, optimal_bst: 0.852, quickselect: 0.201, quicksort: 0.911, segments_intersect: 0.331, strongly_connected_components: 0.735, task_scheduling: 0.814, topological_sort: 0.804
I0827 16:53:19.741584 134493687799808 run.py:695] Algo mst_kruskal step 1150 current loss 0.098743, current_train_items 25528.
I0827 16:53:19.753085 134493687799808 run.py:695] Algo mst_prim step 1150 current loss 0.501132, current_train_items 23406.
I0827 16:53:19.762925 134493687799808 run.py:695] Algo naive_string_matcher step 1150 current loss 1.631254, current_train_items 15797.
I0827 16:53:19.775273 134493687799808 run.py:695] Algo optimal_bst step 1150 current loss 0.000000, current_train_items 7008.
I0827 16:53:19.854027 134493687799808 run.py:695] Algo quickselect step 1150 current loss 2.035514, current_train_items 2801.
I0827 16:53:19.865038 134493687799808 run.py:695] Algo quicksort step 1150 current loss 15.674096, current_train_items 1759.
I0827 16:53:19.882650 134493687799808 run.py:695] Algo segments_intersect step 1150 current loss 0.695193, current_train_items 29472.
I0827 16:53:19.893674 134493687799808 run.py:695] Algo strongly_connected_components step 1150 current loss 3.229316, current_train_items 1351.
I0827 16:53:19.912073 134493687799808 run.py:695] Algo task_scheduling step 1150 current loss 0.000000, current_train_items 7008.
I0827 16:53:19.924566 134493687799808 run.py:695] Algo topological_sort step 1150 current loss 2.386394, current_train_items 3201.
I0827 16:53:20.041602 134493687799808 run.py:730] (val) algo mst_kruskal step 1150: {'in_mst': 0.5071368597816961, 'score': 0.5071368597816961, 'examples_seen': 25528, 'step': 1150, 'algorithm': 'mst_kruskal'}
I0827 16:53:20.063020 134493687799808 run.py:730] (val) algo mst_prim step 1150: {'pi': 0.8056640625, 'score': 0.8056640625, 'examples_seen': 23406, 'step': 1150, 'algorithm': 'mst_prim'}
I0827 16:53:20.810613 134493687799808 run.py:730] (val) algo naive_string_matcher step 1150: {'match': 0.641357421875, 'score': 0.641357421875, 'examples_seen': 15797, 'step': 1150, 'algorithm': 'naive_string_matcher'}
I0827 16:53:20.858456 134493687799808 run.py:730] (val) algo optimal_bst step 1150: {'root': 0.8337478373702422, 'score': 0.8337478373702422, 'examples_seen': 7008, 'step': 1150, 'algorithm': 'optimal_bst'}
I0827 16:53:24.575778 134493687799808 run.py:730] (val) algo quickselect step 1150: {'median': 0.17626953125, 'score': 0.17626953125, 'examples_seen': 2801, 'step': 1150, 'algorithm': 'quickselect'}
I0827 16:53:24.720200 134493687799808 run.py:730] (val) algo quicksort step 1150: {'pred': 0.9013671875, 'score': 0.9013671875, 'examples_seen': 1759, 'step': 1150, 'algorithm': 'quicksort'}
I0827 16:53:25.209365 134493687799808 run.py:730] (val) algo segments_intersect step 1150: {'intersect': 0.6519911947168302, 'score': 0.6519911947168302, 'examples_seen': 29472, 'step': 1150, 'algorithm': 'segments_intersect'}
I0827 16:53:25.314576 134493687799808 run.py:730] (val) algo strongly_connected_components step 1150: {'scc_id': 0.7119140625, 'score': 0.7119140625, 'examples_seen': 1351, 'step': 1150, 'algorithm': 'strongly_connected_components'}
I0827 16:53:25.327963 134493687799808 run.py:730] (val) algo task_scheduling step 1150: {'selected': 0.888888888888889, 'score': 0.888888888888889, 'examples_seen': 7008, 'step': 1150, 'algorithm': 'task_scheduling'}
I0827 16:53:25.382283 134493687799808 run.py:730] (val) algo topological_sort step 1150: {'topo': 0.58203125, 'topo_head': 1.0, 'score': 0.791015625, 'examples_seen': 3201, 'step': 1150, 'algorithm': 'topological_sort'}
I0827 16:53:25.382550 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.692, current avg val score is 0.691, val scores are: mst_kruskal: 0.507, mst_prim: 0.806, naive_string_matcher: 0.641, optimal_bst: 0.834, quickselect: 0.176, quicksort: 0.901, segments_intersect: 0.652, strongly_connected_components: 0.712, task_scheduling: 0.889, topological_sort: 0.791
I0827 16:53:42.962391 134493687799808 run.py:695] Algo mst_kruskal step 1200 current loss 0.145742, current_train_items 26583.
I0827 16:53:42.972574 134493687799808 run.py:695] Algo mst_prim step 1200 current loss 0.434717, current_train_items 24397.
I0827 16:53:42.981249 134493687799808 run.py:695] Algo naive_string_matcher step 1200 current loss 1.819340, current_train_items 16480.
I0827 16:53:42.993266 134493687799808 run.py:695] Algo optimal_bst step 1200 current loss 0.000000, current_train_items 7312.
I0827 16:53:43.070237 134493687799808 run.py:695] Algo quickselect step 1200 current loss 1.786801, current_train_items 2919.
I0827 16:53:43.080581 134493687799808 run.py:695] Algo quicksort step 1200 current loss 0.000000, current_train_items 1834.
I0827 16:53:43.098596 134493687799808 run.py:695] Algo segments_intersect step 1200 current loss 0.651289, current_train_items 30752.
I0827 16:53:43.109888 134493687799808 run.py:695] Algo strongly_connected_components step 1200 current loss 0.872714, current_train_items 1410.
I0827 16:53:43.129369 134493687799808 run.py:695] Algo task_scheduling step 1200 current loss 0.000000, current_train_items 7312.
I0827 16:53:43.140799 134493687799808 run.py:695] Algo topological_sort step 1200 current loss 1.654258, current_train_items 3342.
I0827 16:53:43.261455 134493687799808 run.py:730] (val) algo mst_kruskal step 1200: {'in_mst': 0.5714285714285715, 'score': 0.5714285714285715, 'examples_seen': 26583, 'step': 1200, 'algorithm': 'mst_kruskal'}
I0827 16:53:43.284017 134493687799808 run.py:730] (val) algo mst_prim step 1200: {'pi': 0.833984375, 'score': 0.833984375, 'examples_seen': 24397, 'step': 1200, 'algorithm': 'mst_prim'}
I0827 16:53:44.027748 134493687799808 run.py:730] (val) algo naive_string_matcher step 1200: {'match': 0.63916015625, 'score': 0.63916015625, 'examples_seen': 16480, 'step': 1200, 'algorithm': 'naive_string_matcher'}
I0827 16:53:44.075964 134493687799808 run.py:730] (val) algo optimal_bst step 1200: {'root': 0.81844723183391, 'score': 0.81844723183391, 'examples_seen': 7312, 'step': 1200, 'algorithm': 'optimal_bst'}
I0827 16:53:47.756444 134493687799808 run.py:730] (val) algo quickselect step 1200: {'median': 0.208984375, 'score': 0.208984375, 'examples_seen': 2919, 'step': 1200, 'algorithm': 'quickselect'}
I0827 16:53:47.901188 134493687799808 run.py:730] (val) algo quicksort step 1200: {'pred': 0.8330078125, 'score': 0.8330078125, 'examples_seen': 1834, 'step': 1200, 'algorithm': 'quicksort'}
I0827 16:53:48.395128 134493687799808 run.py:730] (val) algo segments_intersect step 1200: {'intersect': 0.6272114574557708, 'score': 0.6272114574557708, 'examples_seen': 30752, 'step': 1200, 'algorithm': 'segments_intersect'}
I0827 16:53:48.500334 134493687799808 run.py:730] (val) algo strongly_connected_components step 1200: {'scc_id': 0.7470703125, 'score': 0.7470703125, 'examples_seen': 1410, 'step': 1200, 'algorithm': 'strongly_connected_components'}
I0827 16:53:48.513894 134493687799808 run.py:730] (val) algo task_scheduling step 1200: {'selected': 0.9184339314845026, 'score': 0.9184339314845026, 'examples_seen': 7312, 'step': 1200, 'algorithm': 'task_scheduling'}
I0827 16:53:48.567225 134493687799808 run.py:730] (val) algo topological_sort step 1200: {'topo': 0.62109375, 'topo_head': 1.0, 'score': 0.810546875, 'examples_seen': 3342, 'step': 1200, 'algorithm': 'topological_sort'}
I0827 16:53:48.567381 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.692, current avg val score is 0.701, val scores are: mst_kruskal: 0.571, mst_prim: 0.834, naive_string_matcher: 0.639, optimal_bst: 0.818, quickselect: 0.209, quicksort: 0.833, segments_intersect: 0.627, strongly_connected_components: 0.747, task_scheduling: 0.918, topological_sort: 0.811
I0827 16:54:06.502238 134493687799808 run.py:695] Algo mst_kruskal step 1250 current loss 0.084440, current_train_items 27682.
I0827 16:54:06.516922 134493687799808 run.py:695] Algo mst_prim step 1250 current loss 0.423841, current_train_items 25390.
I0827 16:54:06.532324 134493687799808 run.py:695] Algo naive_string_matcher step 1250 current loss 1.586750, current_train_items 17170.
I0827 16:54:06.543204 134493687799808 run.py:695] Algo optimal_bst step 1250 current loss 0.000000, current_train_items 7616.
I0827 16:54:06.619713 134493687799808 run.py:695] Algo quickselect step 1250 current loss 4.446683, current_train_items 3038.
I0827 16:54:06.629519 134493687799808 run.py:695] Algo quicksort step 1250 current loss 1.194003, current_train_items 1911.
I0827 16:54:06.647363 134493687799808 run.py:695] Algo segments_intersect step 1250 current loss 0.630926, current_train_items 32032.
I0827 16:54:06.658485 134493687799808 run.py:695] Algo strongly_connected_components step 1250 current loss 0.000000, current_train_items 1465.
I0827 16:54:06.676845 134493687799808 run.py:695] Algo task_scheduling step 1250 current loss 0.000000, current_train_items 7616.
I0827 16:54:06.691897 134493687799808 run.py:695] Algo topological_sort step 1250 current loss 3.957432, current_train_items 3479.
I0827 16:54:06.809074 134493687799808 run.py:730] (val) algo mst_kruskal step 1250: {'in_mst': 0.5998770743700063, 'score': 0.5998770743700063, 'examples_seen': 27682, 'step': 1250, 'algorithm': 'mst_kruskal'}
I0827 16:54:06.830124 134493687799808 run.py:730] (val) algo mst_prim step 1250: {'pi': 0.818359375, 'score': 0.818359375, 'examples_seen': 25390, 'step': 1250, 'algorithm': 'mst_prim'}
I0827 16:54:07.580089 134493687799808 run.py:730] (val) algo naive_string_matcher step 1250: {'match': 0.639892578125, 'score': 0.639892578125, 'examples_seen': 17170, 'step': 1250, 'algorithm': 'naive_string_matcher'}
I0827 16:54:07.628181 134493687799808 run.py:730] (val) algo optimal_bst step 1250: {'root': 0.8143923010380623, 'score': 0.8143923010380623, 'examples_seen': 7616, 'step': 1250, 'algorithm': 'optimal_bst'}
I0827 16:54:11.312644 134493687799808 run.py:730] (val) algo quickselect step 1250: {'median': 0.2109375, 'score': 0.2109375, 'examples_seen': 3038, 'step': 1250, 'algorithm': 'quickselect'}
I0827 16:54:11.457730 134493687799808 run.py:730] (val) algo quicksort step 1250: {'pred': 0.916015625, 'score': 0.916015625, 'examples_seen': 1911, 'step': 1250, 'algorithm': 'quicksort'}
I0827 16:54:11.948147 134493687799808 run.py:730] (val) algo segments_intersect step 1250: {'intersect': 0.3483063328424153, 'score': 0.3483063328424153, 'examples_seen': 32032, 'step': 1250, 'algorithm': 'segments_intersect'}
I0827 16:54:12.053945 134493687799808 run.py:730] (val) algo strongly_connected_components step 1250: {'scc_id': 0.7568359375, 'score': 0.7568359375, 'examples_seen': 1465, 'step': 1250, 'algorithm': 'strongly_connected_components'}
I0827 16:54:12.067696 134493687799808 run.py:730] (val) algo task_scheduling step 1250: {'selected': 0.8648648648648649, 'score': 0.8648648648648649, 'examples_seen': 7616, 'step': 1250, 'algorithm': 'task_scheduling'}
I0827 16:54:12.121313 134493687799808 run.py:730] (val) algo topological_sort step 1250: {'topo': 0.6240234375, 'topo_head': 1.0, 'score': 0.81201171875, 'examples_seen': 3479, 'step': 1250, 'algorithm': 'topological_sort'}
I0827 16:54:12.121555 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.701, current avg val score is 0.678, val scores are: mst_kruskal: 0.600, mst_prim: 0.818, naive_string_matcher: 0.640, optimal_bst: 0.814, quickselect: 0.211, quicksort: 0.916, segments_intersect: 0.348, strongly_connected_components: 0.757, task_scheduling: 0.865, topological_sort: 0.812
I0827 16:54:29.228822 134493687799808 run.py:695] Algo mst_kruskal step 1300 current loss 0.103085, current_train_items 28801.
I0827 16:54:29.247544 134493687799808 run.py:695] Algo mst_prim step 1300 current loss 0.257953, current_train_items 26416.
I0827 16:54:29.263277 134493687799808 run.py:695] Algo naive_string_matcher step 1300 current loss 1.342856, current_train_items 17867.
I0827 16:54:29.281762 134493687799808 run.py:695] Algo optimal_bst step 1300 current loss 0.000000, current_train_items 7920.
I0827 16:54:29.365029 134493687799808 run.py:695] Algo quickselect step 1300 current loss 2.264283, current_train_items 3159.
I0827 16:54:29.383002 134493687799808 run.py:695] Algo quicksort step 1300 current loss 7.257275, current_train_items 1986.
I0827 16:54:29.405531 134493687799808 run.py:695] Algo segments_intersect step 1300 current loss 0.678093, current_train_items 33312.
I0827 16:54:29.428222 134493687799808 run.py:695] Algo strongly_connected_components step 1300 current loss 1.174073, current_train_items 1526.
I0827 16:54:29.450457 134493687799808 run.py:695] Algo task_scheduling step 1300 current loss 0.000000, current_train_items 7920.
I0827 16:54:29.469397 134493687799808 run.py:695] Algo topological_sort step 1300 current loss 1.558997, current_train_items 3618.
I0827 16:54:29.636221 134493687799808 run.py:730] (val) algo mst_kruskal step 1300: {'in_mst': 0.499131441806601, 'score': 0.499131441806601, 'examples_seen': 28801, 'step': 1300, 'algorithm': 'mst_kruskal'}
I0827 16:54:29.659552 134493687799808 run.py:730] (val) algo mst_prim step 1300: {'pi': 0.830078125, 'score': 0.830078125, 'examples_seen': 26416, 'step': 1300, 'algorithm': 'mst_prim'}
I0827 16:54:30.682195 134493687799808 run.py:730] (val) algo naive_string_matcher step 1300: {'match': 0.663818359375, 'score': 0.663818359375, 'examples_seen': 17867, 'step': 1300, 'algorithm': 'naive_string_matcher'}
I0827 16:54:30.730460 134493687799808 run.py:730] (val) algo optimal_bst step 1300: {'root': 0.8438581314878892, 'score': 0.8438581314878892, 'examples_seen': 7920, 'step': 1300, 'algorithm': 'optimal_bst'}
I0827 16:54:34.403032 134493687799808 run.py:730] (val) algo quickselect step 1300: {'median': 0.230712890625, 'score': 0.230712890625, 'examples_seen': 3159, 'step': 1300, 'algorithm': 'quickselect'}
I0827 16:54:34.548409 134493687799808 run.py:730] (val) algo quicksort step 1300: {'pred': 0.9228515625, 'score': 0.9228515625, 'examples_seen': 1986, 'step': 1300, 'algorithm': 'quicksort'}
I0827 16:54:35.039873 134493687799808 run.py:730] (val) algo segments_intersect step 1300: {'intersect': 0.3164362519201229, 'score': 0.3164362519201229, 'examples_seen': 33312, 'step': 1300, 'algorithm': 'segments_intersect'}
I0827 16:54:35.144913 134493687799808 run.py:730] (val) algo strongly_connected_components step 1300: {'scc_id': 0.732421875, 'score': 0.732421875, 'examples_seen': 1526, 'step': 1300, 'algorithm': 'strongly_connected_components'}
I0827 16:54:35.158381 134493687799808 run.py:730] (val) algo task_scheduling step 1300: {'selected': 0.9282836422240128, 'score': 0.9282836422240128, 'examples_seen': 7920, 'step': 1300, 'algorithm': 'task_scheduling'}
I0827 16:54:35.211724 134493687799808 run.py:730] (val) algo topological_sort step 1300: {'topo': 0.6025390625, 'topo_head': 0.875, 'score': 0.73876953125, 'examples_seen': 3618, 'step': 1300, 'algorithm': 'topological_sort'}
I0827 16:54:35.211902 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.701, current avg val score is 0.671, val scores are: mst_kruskal: 0.499, mst_prim: 0.830, naive_string_matcher: 0.664, optimal_bst: 0.844, quickselect: 0.231, quicksort: 0.923, segments_intersect: 0.316, strongly_connected_components: 0.732, task_scheduling: 0.928, topological_sort: 0.739
I0827 16:54:51.970217 134493687799808 run.py:695] Algo mst_kruskal step 1350 current loss 0.115805, current_train_items 29913.
I0827 16:54:51.981613 134493687799808 run.py:695] Algo mst_prim step 1350 current loss 0.679139, current_train_items 27418.
I0827 16:54:51.990382 134493687799808 run.py:695] Algo naive_string_matcher step 1350 current loss 1.451015, current_train_items 18530.
I0827 16:54:52.001779 134493687799808 run.py:695] Algo optimal_bst step 1350 current loss 0.000000, current_train_items 8224.
I0827 16:54:52.077976 134493687799808 run.py:695] Algo quickselect step 1350 current loss 1.975933, current_train_items 3286.
I0827 16:54:52.087983 134493687799808 run.py:695] Algo quicksort step 1350 current loss 9.769182, current_train_items 2062.
I0827 16:54:52.105875 134493687799808 run.py:695] Algo segments_intersect step 1350 current loss 0.704247, current_train_items 34592.
I0827 16:54:52.118056 134493687799808 run.py:695] Algo strongly_connected_components step 1350 current loss 1.636878, current_train_items 1585.
I0827 16:54:52.137039 134493687799808 run.py:695] Algo task_scheduling step 1350 current loss 0.000000, current_train_items 8224.
I0827 16:54:52.148164 134493687799808 run.py:695] Algo topological_sort step 1350 current loss 0.542156, current_train_items 3757.
I0827 16:54:52.261857 134493687799808 run.py:730] (val) algo mst_kruskal step 1350: {'in_mst': 0.4948024948024949, 'score': 0.4948024948024949, 'examples_seen': 29913, 'step': 1350, 'algorithm': 'mst_kruskal'}
I0827 16:54:52.282996 134493687799808 run.py:730] (val) algo mst_prim step 1350: {'pi': 0.81640625, 'score': 0.81640625, 'examples_seen': 27418, 'step': 1350, 'algorithm': 'mst_prim'}
I0827 16:54:53.310849 134493687799808 run.py:730] (val) algo naive_string_matcher step 1350: {'match': 0.678955078125, 'score': 0.678955078125, 'examples_seen': 18530, 'step': 1350, 'algorithm': 'naive_string_matcher'}
I0827 16:54:53.358597 134493687799808 run.py:730] (val) algo optimal_bst step 1350: {'root': 0.8574286332179931, 'score': 0.8574286332179931, 'examples_seen': 8224, 'step': 1350, 'algorithm': 'optimal_bst'}
I0827 16:54:57.068868 134493687799808 run.py:730] (val) algo quickselect step 1350: {'median': 0.19970703125, 'score': 0.19970703125, 'examples_seen': 3286, 'step': 1350, 'algorithm': 'quickselect'}
I0827 16:54:57.214310 134493687799808 run.py:730] (val) algo quicksort step 1350: {'pred': 0.927734375, 'score': 0.927734375, 'examples_seen': 2062, 'step': 1350, 'algorithm': 'quicksort'}
I0827 16:54:57.721076 134493687799808 run.py:730] (val) algo segments_intersect step 1350: {'intersect': 0.272655634357762, 'score': 0.272655634357762, 'examples_seen': 34592, 'step': 1350, 'algorithm': 'segments_intersect'}
I0827 16:54:57.826098 134493687799808 run.py:730] (val) algo strongly_connected_components step 1350: {'scc_id': 0.7421875, 'score': 0.7421875, 'examples_seen': 1585, 'step': 1350, 'algorithm': 'strongly_connected_components'}
I0827 16:54:57.839645 134493687799808 run.py:730] (val) algo task_scheduling step 1350: {'selected': 0.9190556492411467, 'score': 0.9190556492411467, 'examples_seen': 8224, 'step': 1350, 'algorithm': 'task_scheduling'}
I0827 16:54:57.894175 134493687799808 run.py:730] (val) algo topological_sort step 1350: {'topo': 0.5732421875, 'topo_head': 0.984375, 'score': 0.77880859375, 'examples_seen': 3757, 'step': 1350, 'algorithm': 'topological_sort'}
I0827 16:54:57.894331 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.701, current avg val score is 0.669, val scores are: mst_kruskal: 0.495, mst_prim: 0.816, naive_string_matcher: 0.679, optimal_bst: 0.857, quickselect: 0.200, quicksort: 0.928, segments_intersect: 0.273, strongly_connected_components: 0.742, task_scheduling: 0.919, topological_sort: 0.779
W0827 16:55:13.004273 134493687799808 samplers.py:175] Increasing hint lengh from 33 to 39
I0827 16:55:14.721527 134493687799808 run.py:695] Algo mst_kruskal step 1400 current loss 0.118599, current_train_items 31018.
I0827 16:55:14.733122 134493687799808 run.py:695] Algo mst_prim step 1400 current loss 0.340328, current_train_items 28469.
I0827 16:55:14.742083 134493687799808 run.py:695] Algo naive_string_matcher step 1400 current loss 1.728132, current_train_items 19197.
I0827 16:55:14.754672 134493687799808 run.py:695] Algo optimal_bst step 1400 current loss 0.397946, current_train_items 8544.
I0827 16:55:14.832763 134493687799808 run.py:695] Algo quickselect step 1400 current loss 2.359117, current_train_items 3406.
I0827 16:55:14.843328 134493687799808 run.py:695] Algo quicksort step 1400 current loss 11.083282, current_train_items 2137.
I0827 16:55:14.861221 134493687799808 run.py:695] Algo segments_intersect step 1400 current loss 0.686974, current_train_items 35872.
I0827 16:55:14.872468 134493687799808 run.py:695] Algo strongly_connected_components step 1400 current loss 1.781060, current_train_items 1642.
I0827 16:55:14.890228 134493687799808 run.py:695] Algo task_scheduling step 1400 current loss 0.141906, current_train_items 8544.
I0827 16:55:14.901983 134493687799808 run.py:695] Algo topological_sort step 1400 current loss 4.987713, current_train_items 3899.
I0827 16:55:15.014240 134493687799808 run.py:730] (val) algo mst_kruskal step 1400: {'in_mst': 0.45934618608549876, 'score': 0.45934618608549876, 'examples_seen': 31018, 'step': 1400, 'algorithm': 'mst_kruskal'}
I0827 16:55:15.035517 134493687799808 run.py:730] (val) algo mst_prim step 1400: {'pi': 0.818359375, 'score': 0.818359375, 'examples_seen': 28469, 'step': 1400, 'algorithm': 'mst_prim'}
I0827 16:55:15.779646 134493687799808 run.py:730] (val) algo naive_string_matcher step 1400: {'match': 0.64306640625, 'score': 0.64306640625, 'examples_seen': 19197, 'step': 1400, 'algorithm': 'naive_string_matcher'}
I0827 16:55:15.827874 134493687799808 run.py:730] (val) algo optimal_bst step 1400: {'root': 0.8583477508650519, 'score': 0.8583477508650519, 'examples_seen': 8544, 'step': 1400, 'algorithm': 'optimal_bst'}
I0827 16:55:19.513439 134493687799808 run.py:730] (val) algo quickselect step 1400: {'median': 0.1962890625, 'score': 0.1962890625, 'examples_seen': 3406, 'step': 1400, 'algorithm': 'quickselect'}
I0827 16:55:19.660619 134493687799808 run.py:730] (val) algo quicksort step 1400: {'pred': 0.89453125, 'score': 0.89453125, 'examples_seen': 2137, 'step': 1400, 'algorithm': 'quicksort'}
I0827 16:55:20.185767 134493687799808 run.py:730] (val) algo segments_intersect step 1400: {'intersect': 0.5743801652892562, 'score': 0.5743801652892562, 'examples_seen': 35872, 'step': 1400, 'algorithm': 'segments_intersect'}
I0827 16:55:20.291388 134493687799808 run.py:730] (val) algo strongly_connected_components step 1400: {'scc_id': 0.734375, 'score': 0.734375, 'examples_seen': 1642, 'step': 1400, 'algorithm': 'strongly_connected_components'}
I0827 16:55:20.304957 134493687799808 run.py:730] (val) algo task_scheduling step 1400: {'selected': 0.904923599320883, 'score': 0.904923599320883, 'examples_seen': 8544, 'step': 1400, 'algorithm': 'task_scheduling'}
I0827 16:55:20.358991 134493687799808 run.py:730] (val) algo topological_sort step 1400: {'topo': 0.6416015625, 'topo_head': 0.96875, 'score': 0.80517578125, 'examples_seen': 3899, 'step': 1400, 'algorithm': 'topological_sort'}
I0827 16:55:20.359247 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.689, val scores are: mst_kruskal: 0.459, mst_prim: 0.818, naive_string_matcher: 0.643, optimal_bst: 0.858, quickselect: 0.196, quicksort: 0.895, segments_intersect: 0.574, strongly_connected_components: 0.734, task_scheduling: 0.905, topological_sort: 0.805
W0827 16:55:27.366833 134493687799808 samplers.py:175] Increasing hint lengh from 70 to 72
I0827 16:55:37.847540 134493687799808 run.py:695] Algo mst_kruskal step 1450 current loss 0.143099, current_train_items 32110.
I0827 16:55:37.857382 134493687799808 run.py:695] Algo mst_prim step 1450 current loss 0.396185, current_train_items 29475.
I0827 16:55:37.865599 134493687799808 run.py:695] Algo naive_string_matcher step 1450 current loss 1.563195, current_train_items 19879.
I0827 16:55:37.877100 134493687799808 run.py:695] Algo optimal_bst step 1450 current loss 0.491243, current_train_items 8848.
I0827 16:55:37.954522 134493687799808 run.py:695] Algo quickselect step 1450 current loss 2.539981, current_train_items 3524.
I0827 16:55:37.964868 134493687799808 run.py:695] Algo quicksort step 1450 current loss 0.000000, current_train_items 2215.
I0827 16:55:37.982745 134493687799808 run.py:695] Algo segments_intersect step 1450 current loss 0.678263, current_train_items 37152.
I0827 16:55:37.993007 134493687799808 run.py:695] Algo strongly_connected_components step 1450 current loss 1.312648, current_train_items 1703.
I0827 16:55:38.011143 134493687799808 run.py:695] Algo task_scheduling step 1450 current loss 0.168424, current_train_items 8848.
I0827 16:55:38.022572 134493687799808 run.py:695] Algo topological_sort step 1450 current loss 1.637400, current_train_items 4038.
I0827 16:55:38.135362 134493687799808 run.py:730] (val) algo mst_kruskal step 1450: {'in_mst': 0.5069501226492232, 'score': 0.5069501226492232, 'examples_seen': 32110, 'step': 1450, 'algorithm': 'mst_kruskal'}
I0827 16:55:38.156517 134493687799808 run.py:730] (val) algo mst_prim step 1450: {'pi': 0.7958984375, 'score': 0.7958984375, 'examples_seen': 29475, 'step': 1450, 'algorithm': 'mst_prim'}
I0827 16:55:38.898179 134493687799808 run.py:730] (val) algo naive_string_matcher step 1450: {'match': 0.665283203125, 'score': 0.665283203125, 'examples_seen': 19879, 'step': 1450, 'algorithm': 'naive_string_matcher'}
I0827 16:55:38.946407 134493687799808 run.py:730] (val) algo optimal_bst step 1450: {'root': 0.8662954152249135, 'score': 0.8662954152249135, 'examples_seen': 8848, 'step': 1450, 'algorithm': 'optimal_bst'}
I0827 16:55:42.639014 134493687799808 run.py:730] (val) algo quickselect step 1450: {'median': 0.22265625, 'score': 0.22265625, 'examples_seen': 3524, 'step': 1450, 'algorithm': 'quickselect'}
I0827 16:55:42.784817 134493687799808 run.py:730] (val) algo quicksort step 1450: {'pred': 0.884765625, 'score': 0.884765625, 'examples_seen': 2215, 'step': 1450, 'algorithm': 'quicksort'}
I0827 16:55:43.281832 134493687799808 run.py:730] (val) algo segments_intersect step 1450: {'intersect': 0.44211238997968855, 'score': 0.44211238997968855, 'examples_seen': 37152, 'step': 1450, 'algorithm': 'segments_intersect'}
I0827 16:55:43.386420 134493687799808 run.py:730] (val) algo strongly_connected_components step 1450: {'scc_id': 0.796875, 'score': 0.796875, 'examples_seen': 1703, 'step': 1450, 'algorithm': 'strongly_connected_components'}
I0827 16:55:43.400184 134493687799808 run.py:730] (val) algo task_scheduling step 1450: {'selected': 0.9230769230769232, 'score': 0.9230769230769232, 'examples_seen': 8848, 'step': 1450, 'algorithm': 'task_scheduling'}
I0827 16:55:43.454657 134493687799808 run.py:730] (val) algo topological_sort step 1450: {'topo': 0.55859375, 'topo_head': 0.984375, 'score': 0.771484375, 'examples_seen': 4038, 'step': 1450, 'algorithm': 'topological_sort'}
I0827 16:55:43.454835 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.688, val scores are: mst_kruskal: 0.507, mst_prim: 0.796, naive_string_matcher: 0.665, optimal_bst: 0.866, quickselect: 0.223, quicksort: 0.885, segments_intersect: 0.442, strongly_connected_components: 0.797, task_scheduling: 0.923, topological_sort: 0.771
I0827 16:56:00.306650 134493687799808 run.py:695] Algo mst_kruskal step 1500 current loss 0.129985, current_train_items 33206.
I0827 16:56:00.317019 134493687799808 run.py:695] Algo mst_prim step 1500 current loss 0.571122, current_train_items 30511.
I0827 16:56:00.325634 134493687799808 run.py:695] Algo naive_string_matcher step 1500 current loss 1.855498, current_train_items 20565.
I0827 16:56:00.337829 134493687799808 run.py:695] Algo optimal_bst step 1500 current loss 0.403286, current_train_items 9152.
I0827 16:56:00.416187 134493687799808 run.py:695] Algo quickselect step 1500 current loss 2.270154, current_train_items 3648.
I0827 16:56:00.428322 134493687799808 run.py:695] Algo quicksort step 1500 current loss 4.033032, current_train_items 2291.
I0827 16:56:00.449816 134493687799808 run.py:695] Algo segments_intersect step 1500 current loss 0.659741, current_train_items 38432.
I0827 16:56:00.460909 134493687799808 run.py:695] Algo strongly_connected_components step 1500 current loss 1.276459, current_train_items 1759.
I0827 16:56:00.478318 134493687799808 run.py:695] Algo task_scheduling step 1500 current loss 0.129905, current_train_items 9152.
I0827 16:56:00.490905 134493687799808 run.py:695] Algo topological_sort step 1500 current loss 2.147508, current_train_items 4176.
I0827 16:56:00.612427 134493687799808 run.py:730] (val) algo mst_kruskal step 1500: {'in_mst': 0.6077348066298341, 'score': 0.6077348066298341, 'examples_seen': 33206, 'step': 1500, 'algorithm': 'mst_kruskal'}
I0827 16:56:00.633395 134493687799808 run.py:730] (val) algo mst_prim step 1500: {'pi': 0.841796875, 'score': 0.841796875, 'examples_seen': 30511, 'step': 1500, 'algorithm': 'mst_prim'}
I0827 16:56:01.377560 134493687799808 run.py:730] (val) algo naive_string_matcher step 1500: {'match': 0.680908203125, 'score': 0.680908203125, 'examples_seen': 20565, 'step': 1500, 'algorithm': 'naive_string_matcher'}
I0827 16:56:01.425652 134493687799808 run.py:730] (val) algo optimal_bst step 1500: {'root': 0.8677011245674741, 'score': 0.8677011245674741, 'examples_seen': 9152, 'step': 1500, 'algorithm': 'optimal_bst'}
I0827 16:56:05.167586 134493687799808 run.py:730] (val) algo quickselect step 1500: {'median': 0.218994140625, 'score': 0.218994140625, 'examples_seen': 3648, 'step': 1500, 'algorithm': 'quickselect'}
I0827 16:56:05.318854 134493687799808 run.py:730] (val) algo quicksort step 1500: {'pred': 0.8740234375, 'score': 0.8740234375, 'examples_seen': 2291, 'step': 1500, 'algorithm': 'quicksort'}
I0827 16:56:06.266696 134493687799808 run.py:730] (val) algo segments_intersect step 1500: {'intersect': 0.6419512195121951, 'score': 0.6419512195121951, 'examples_seen': 38432, 'step': 1500, 'algorithm': 'segments_intersect'}
I0827 16:56:06.374103 134493687799808 run.py:730] (val) algo strongly_connected_components step 1500: {'scc_id': 0.7763671875, 'score': 0.7763671875, 'examples_seen': 1759, 'step': 1500, 'algorithm': 'strongly_connected_components'}
I0827 16:56:06.396817 134493687799808 run.py:730] (val) algo task_scheduling step 1500: {'selected': 0.8994276369582993, 'score': 0.8994276369582993, 'examples_seen': 9152, 'step': 1500, 'algorithm': 'task_scheduling'}
I0827 16:56:06.451089 134493687799808 run.py:730] (val) algo topological_sort step 1500: {'topo': 0.6083984375, 'topo_head': 1.0, 'score': 0.80419921875, 'examples_seen': 4176, 'step': 1500, 'algorithm': 'topological_sort'}
I0827 16:56:06.451272 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.688, current avg val score is 0.721, val scores are: mst_kruskal: 0.608, mst_prim: 0.842, naive_string_matcher: 0.681, optimal_bst: 0.868, quickselect: 0.219, quicksort: 0.874, segments_intersect: 0.642, strongly_connected_components: 0.776, task_scheduling: 0.899, topological_sort: 0.804
I0827 16:56:23.622687 134493687799808 run.py:695] Algo mst_kruskal step 1550 current loss 0.119117, current_train_items 34271.
I0827 16:56:23.632745 134493687799808 run.py:695] Algo mst_prim step 1550 current loss 0.297469, current_train_items 31534.
I0827 16:56:23.640909 134493687799808 run.py:695] Algo naive_string_matcher step 1550 current loss 1.846034, current_train_items 21259.
I0827 16:56:23.653004 134493687799808 run.py:695] Algo optimal_bst step 1550 current loss 0.411163, current_train_items 9456.
I0827 16:56:23.730252 134493687799808 run.py:695] Algo quickselect step 1550 current loss 1.745408, current_train_items 3771.
I0827 16:56:23.740978 134493687799808 run.py:695] Algo quicksort step 1550 current loss 38.127220, current_train_items 2365.
I0827 16:56:23.758969 134493687799808 run.py:695] Algo segments_intersect step 1550 current loss 0.659994, current_train_items 39712.
I0827 16:56:23.769837 134493687799808 run.py:695] Algo strongly_connected_components step 1550 current loss 0.068268, current_train_items 1818.
I0827 16:56:23.787792 134493687799808 run.py:695] Algo task_scheduling step 1550 current loss 0.180799, current_train_items 9456.
I0827 16:56:23.799611 134493687799808 run.py:695] Algo topological_sort step 1550 current loss 1.839955, current_train_items 4314.
I0827 16:56:23.915327 134493687799808 run.py:730] (val) algo mst_kruskal step 1550: {'in_mst': 0.6118251928020566, 'score': 0.6118251928020566, 'examples_seen': 34271, 'step': 1550, 'algorithm': 'mst_kruskal'}
I0827 16:56:23.936500 134493687799808 run.py:730] (val) algo mst_prim step 1550: {'pi': 0.845703125, 'score': 0.845703125, 'examples_seen': 31534, 'step': 1550, 'algorithm': 'mst_prim'}
I0827 16:56:24.681333 134493687799808 run.py:730] (val) algo naive_string_matcher step 1550: {'match': 0.657958984375, 'score': 0.657958984375, 'examples_seen': 21259, 'step': 1550, 'algorithm': 'naive_string_matcher'}
I0827 16:56:24.729848 134493687799808 run.py:730] (val) algo optimal_bst step 1550: {'root': 0.8745674740484429, 'score': 0.8745674740484429, 'examples_seen': 9456, 'step': 1550, 'algorithm': 'optimal_bst'}
I0827 16:56:28.419525 134493687799808 run.py:730] (val) algo quickselect step 1550: {'median': 0.20751953125, 'score': 0.20751953125, 'examples_seen': 3771, 'step': 1550, 'algorithm': 'quickselect'}
I0827 16:56:28.566802 134493687799808 run.py:730] (val) algo quicksort step 1550: {'pred': 0.861328125, 'score': 0.861328125, 'examples_seen': 2365, 'step': 1550, 'algorithm': 'quicksort'}
I0827 16:56:29.437587 134493687799808 run.py:730] (val) algo segments_intersect step 1550: {'intersect': 0.5648195221148958, 'score': 0.5648195221148958, 'examples_seen': 39712, 'step': 1550, 'algorithm': 'segments_intersect'}
I0827 16:56:29.544889 134493687799808 run.py:730] (val) algo strongly_connected_components step 1550: {'scc_id': 0.70703125, 'score': 0.70703125, 'examples_seen': 1818, 'step': 1550, 'algorithm': 'strongly_connected_components'}
I0827 16:56:29.572992 134493687799808 run.py:730] (val) algo task_scheduling step 1550: {'selected': 0.9159183673469389, 'score': 0.9159183673469389, 'examples_seen': 9456, 'step': 1550, 'algorithm': 'task_scheduling'}
I0827 16:56:29.626976 134493687799808 run.py:730] (val) algo topological_sort step 1550: {'topo': 0.6162109375, 'topo_head': 0.953125, 'score': 0.78466796875, 'examples_seen': 4314, 'step': 1550, 'algorithm': 'topological_sort'}
I0827 16:56:29.627189 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.721, current avg val score is 0.703, val scores are: mst_kruskal: 0.612, mst_prim: 0.846, naive_string_matcher: 0.658, optimal_bst: 0.875, quickselect: 0.208, quicksort: 0.861, segments_intersect: 0.565, strongly_connected_components: 0.707, task_scheduling: 0.916, topological_sort: 0.785
I0827 16:56:47.332962 134493687799808 run.py:695] Algo mst_kruskal step 1600 current loss 0.102211, current_train_items 35368.
I0827 16:56:47.343054 134493687799808 run.py:695] Algo mst_prim step 1600 current loss 0.429987, current_train_items 32537.
I0827 16:56:47.351616 134493687799808 run.py:695] Algo naive_string_matcher step 1600 current loss 1.470858, current_train_items 21945.
I0827 16:56:47.363605 134493687799808 run.py:695] Algo optimal_bst step 1600 current loss 0.416733, current_train_items 9760.
I0827 16:56:47.442078 134493687799808 run.py:695] Algo quickselect step 1600 current loss 2.339241, current_train_items 3890.
I0827 16:56:47.453030 134493687799808 run.py:695] Algo quicksort step 1600 current loss 11.337735, current_train_items 2441.
I0827 16:56:47.470875 134493687799808 run.py:695] Algo segments_intersect step 1600 current loss 0.725435, current_train_items 40992.
I0827 16:56:47.482238 134493687799808 run.py:695] Algo strongly_connected_components step 1600 current loss 0.953304, current_train_items 1879.
I0827 16:56:47.500974 134493687799808 run.py:695] Algo task_scheduling step 1600 current loss 0.150028, current_train_items 9760.
I0827 16:56:47.513388 134493687799808 run.py:695] Algo topological_sort step 1600 current loss 1.555741, current_train_items 4453.
I0827 16:56:47.628698 134493687799808 run.py:730] (val) algo mst_kruskal step 1600: {'in_mst': 0.6596858638743456, 'score': 0.6596858638743456, 'examples_seen': 35368, 'step': 1600, 'algorithm': 'mst_kruskal'}
I0827 16:56:47.649693 134493687799808 run.py:730] (val) algo mst_prim step 1600: {'pi': 0.84375, 'score': 0.84375, 'examples_seen': 32537, 'step': 1600, 'algorithm': 'mst_prim'}
I0827 16:56:48.390535 134493687799808 run.py:730] (val) algo naive_string_matcher step 1600: {'match': 0.654541015625, 'score': 0.654541015625, 'examples_seen': 21945, 'step': 1600, 'algorithm': 'naive_string_matcher'}
I0827 16:56:48.439076 134493687799808 run.py:730] (val) algo optimal_bst step 1600: {'root': 0.8469939446366782, 'score': 0.8469939446366782, 'examples_seen': 9760, 'step': 1600, 'algorithm': 'optimal_bst'}
I0827 16:56:52.122674 134493687799808 run.py:730] (val) algo quickselect step 1600: {'median': 0.185546875, 'score': 0.185546875, 'examples_seen': 3890, 'step': 1600, 'algorithm': 'quickselect'}
I0827 16:56:52.267683 134493687799808 run.py:730] (val) algo quicksort step 1600: {'pred': 0.9150390625, 'score': 0.9150390625, 'examples_seen': 2441, 'step': 1600, 'algorithm': 'quicksort'}
I0827 16:56:53.007987 134493687799808 run.py:730] (val) algo segments_intersect step 1600: {'intersect': 0.6601590744757774, 'score': 0.6601590744757774, 'examples_seen': 40992, 'step': 1600, 'algorithm': 'segments_intersect'}
I0827 16:56:53.116599 134493687799808 run.py:730] (val) algo strongly_connected_components step 1600: {'scc_id': 0.7626953125, 'score': 0.7626953125, 'examples_seen': 1879, 'step': 1600, 'algorithm': 'strongly_connected_components'}
I0827 16:56:53.137885 134493687799808 run.py:730] (val) algo task_scheduling step 1600: {'selected': 0.9228295819935691, 'score': 0.9228295819935691, 'examples_seen': 9760, 'step': 1600, 'algorithm': 'task_scheduling'}
I0827 16:56:53.192942 134493687799808 run.py:730] (val) algo topological_sort step 1600: {'topo': 0.63671875, 'topo_head': 1.0, 'score': 0.818359375, 'examples_seen': 4453, 'step': 1600, 'algorithm': 'topological_sort'}
I0827 16:56:53.193150 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.721, current avg val score is 0.727, val scores are: mst_kruskal: 0.660, mst_prim: 0.844, naive_string_matcher: 0.655, optimal_bst: 0.847, quickselect: 0.186, quicksort: 0.915, segments_intersect: 0.660, strongly_connected_components: 0.763, task_scheduling: 0.923, topological_sort: 0.818
I0827 16:57:10.422507 134493687799808 run.py:695] Algo mst_kruskal step 1650 current loss 0.171022, current_train_items 36406.
I0827 16:57:10.433901 134493687799808 run.py:695] Algo mst_prim step 1650 current loss 0.599397, current_train_items 33564.
I0827 16:57:10.443259 134493687799808 run.py:695] Algo naive_string_matcher step 1650 current loss 1.586262, current_train_items 22602.
I0827 16:57:10.455426 134493687799808 run.py:695] Algo optimal_bst step 1650 current loss 0.420758, current_train_items 10064.
I0827 16:57:10.533982 134493687799808 run.py:695] Algo quickselect step 1650 current loss 1.175435, current_train_items 4007.
I0827 16:57:10.546353 134493687799808 run.py:695] Algo quicksort step 1650 current loss 13.204691, current_train_items 2514.
I0827 16:57:10.562282 134493687799808 run.py:695] Algo segments_intersect step 1650 current loss 0.668466, current_train_items 42272.
I0827 16:57:10.573442 134493687799808 run.py:695] Algo strongly_connected_components step 1650 current loss 1.311102, current_train_items 1935.
I0827 16:57:10.592120 134493687799808 run.py:695] Algo task_scheduling step 1650 current loss 0.166397, current_train_items 10064.
I0827 16:57:10.603785 134493687799808 run.py:695] Algo topological_sort step 1650 current loss 1.271384, current_train_items 4593.
I0827 16:57:10.716531 134493687799808 run.py:730] (val) algo mst_kruskal step 1650: {'in_mst': 0.6106133700895934, 'score': 0.6106133700895934, 'examples_seen': 36406, 'step': 1650, 'algorithm': 'mst_kruskal'}
I0827 16:57:10.737953 134493687799808 run.py:730] (val) algo mst_prim step 1650: {'pi': 0.826171875, 'score': 0.826171875, 'examples_seen': 33564, 'step': 1650, 'algorithm': 'mst_prim'}
I0827 16:57:11.482036 134493687799808 run.py:730] (val) algo naive_string_matcher step 1650: {'match': 0.65576171875, 'score': 0.65576171875, 'examples_seen': 22602, 'step': 1650, 'algorithm': 'naive_string_matcher'}
I0827 16:57:11.530336 134493687799808 run.py:730] (val) algo optimal_bst step 1650: {'root': 0.8556444636678201, 'score': 0.8556444636678201, 'examples_seen': 10064, 'step': 1650, 'algorithm': 'optimal_bst'}
I0827 16:57:15.209379 134493687799808 run.py:730] (val) algo quickselect step 1650: {'median': 0.18798828125, 'score': 0.18798828125, 'examples_seen': 4007, 'step': 1650, 'algorithm': 'quickselect'}
I0827 16:57:15.354365 134493687799808 run.py:730] (val) algo quicksort step 1650: {'pred': 0.8544921875, 'score': 0.8544921875, 'examples_seen': 2514, 'step': 1650, 'algorithm': 'quicksort'}
I0827 16:57:15.861713 134493687799808 run.py:730] (val) algo segments_intersect step 1650: {'intersect': 0.5119515885022693, 'score': 0.5119515885022693, 'examples_seen': 42272, 'step': 1650, 'algorithm': 'segments_intersect'}
I0827 16:57:15.967119 134493687799808 run.py:730] (val) algo strongly_connected_components step 1650: {'scc_id': 0.759765625, 'score': 0.759765625, 'examples_seen': 1935, 'step': 1650, 'algorithm': 'strongly_connected_components'}
I0827 16:57:15.980944 134493687799808 run.py:730] (val) algo task_scheduling step 1650: {'selected': 0.8946925021061499, 'score': 0.8946925021061499, 'examples_seen': 10064, 'step': 1650, 'algorithm': 'task_scheduling'}
I0827 16:57:16.035021 134493687799808 run.py:730] (val) algo topological_sort step 1650: {'topo': 0.6650390625, 'topo_head': 1.0, 'score': 0.83251953125, 'examples_seen': 4593, 'step': 1650, 'algorithm': 'topological_sort'}
I0827 16:57:16.035203 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.727, current avg val score is 0.699, val scores are: mst_kruskal: 0.611, mst_prim: 0.826, naive_string_matcher: 0.656, optimal_bst: 0.856, quickselect: 0.188, quicksort: 0.854, segments_intersect: 0.512, strongly_connected_components: 0.760, task_scheduling: 0.895, topological_sort: 0.833
I0827 16:57:33.582386 134493687799808 run.py:695] Algo mst_kruskal step 1700 current loss 0.109454, current_train_items 37481.
I0827 16:57:33.592819 134493687799808 run.py:695] Algo mst_prim step 1700 current loss 0.674870, current_train_items 34570.
I0827 16:57:33.601721 134493687799808 run.py:695] Algo naive_string_matcher step 1700 current loss 1.921034, current_train_items 23293.
I0827 16:57:33.613592 134493687799808 run.py:695] Algo optimal_bst step 1700 current loss 0.450354, current_train_items 10368.
I0827 16:57:33.691858 134493687799808 run.py:695] Algo quickselect step 1700 current loss 0.691397, current_train_items 4126.
I0827 16:57:33.702386 134493687799808 run.py:695] Algo quicksort step 1700 current loss 15.748587, current_train_items 2592.
I0827 16:57:33.720856 134493687799808 run.py:695] Algo segments_intersect step 1700 current loss 0.669621, current_train_items 43552.
I0827 16:57:33.731895 134493687799808 run.py:695] Algo strongly_connected_components step 1700 current loss 0.000000, current_train_items 1992.
I0827 16:57:33.749875 134493687799808 run.py:695] Algo task_scheduling step 1700 current loss 0.107244, current_train_items 10368.
I0827 16:57:33.761766 134493687799808 run.py:695] Algo topological_sort step 1700 current loss 1.090690, current_train_items 4731.
I0827 16:57:33.877182 134493687799808 run.py:730] (val) algo mst_kruskal step 1700: {'in_mst': 0.7431770468859342, 'score': 0.7431770468859342, 'examples_seen': 37481, 'step': 1700, 'algorithm': 'mst_kruskal'}
I0827 16:57:33.898531 134493687799808 run.py:730] (val) algo mst_prim step 1700: {'pi': 0.8134765625, 'score': 0.8134765625, 'examples_seen': 34570, 'step': 1700, 'algorithm': 'mst_prim'}
I0827 16:57:34.650521 134493687799808 run.py:730] (val) algo naive_string_matcher step 1700: {'match': 0.6806640625, 'score': 0.6806640625, 'examples_seen': 23293, 'step': 1700, 'algorithm': 'naive_string_matcher'}
I0827 16:57:34.698909 134493687799808 run.py:730] (val) algo optimal_bst step 1700: {'root': 0.8548334775086506, 'score': 0.8548334775086506, 'examples_seen': 10368, 'step': 1700, 'algorithm': 'optimal_bst'}
I0827 16:57:38.387121 134493687799808 run.py:730] (val) algo quickselect step 1700: {'median': 0.2041015625, 'score': 0.2041015625, 'examples_seen': 4126, 'step': 1700, 'algorithm': 'quickselect'}
I0827 16:57:38.534076 134493687799808 run.py:730] (val) algo quicksort step 1700: {'pred': 0.86328125, 'score': 0.86328125, 'examples_seen': 2592, 'step': 1700, 'algorithm': 'quicksort'}
I0827 16:57:39.028741 134493687799808 run.py:730] (val) algo segments_intersect step 1700: {'intersect': 0.592479674796748, 'score': 0.592479674796748, 'examples_seen': 43552, 'step': 1700, 'algorithm': 'segments_intersect'}
I0827 16:57:39.133967 134493687799808 run.py:730] (val) algo strongly_connected_components step 1700: {'scc_id': 0.751953125, 'score': 0.751953125, 'examples_seen': 1992, 'step': 1700, 'algorithm': 'strongly_connected_components'}
I0827 16:57:39.148097 134493687799808 run.py:730] (val) algo task_scheduling step 1700: {'selected': 0.9038619556285948, 'score': 0.9038619556285948, 'examples_seen': 10368, 'step': 1700, 'algorithm': 'task_scheduling'}
I0827 16:57:39.201823 134493687799808 run.py:730] (val) algo topological_sort step 1700: {'topo': 0.619140625, 'topo_head': 1.0, 'score': 0.8095703125, 'examples_seen': 4731, 'step': 1700, 'algorithm': 'topological_sort'}
I0827 16:57:39.202016 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.727, current avg val score is 0.722, val scores are: mst_kruskal: 0.743, mst_prim: 0.813, naive_string_matcher: 0.681, optimal_bst: 0.855, quickselect: 0.204, quicksort: 0.863, segments_intersect: 0.592, strongly_connected_components: 0.752, task_scheduling: 0.904, topological_sort: 0.810
W0827 16:57:43.782596 134493687799808 samplers.py:175] Increasing hint lengh from 131 to 145
I0827 16:57:56.620346 134493687799808 run.py:695] Algo mst_kruskal step 1750 current loss 0.129110, current_train_items 38591.
I0827 16:57:56.630892 134493687799808 run.py:695] Algo mst_prim step 1750 current loss 0.406145, current_train_items 35556.
I0827 16:57:56.639864 134493687799808 run.py:695] Algo naive_string_matcher step 1750 current loss 1.554908, current_train_items 23970.
I0827 16:57:56.652108 134493687799808 run.py:695] Algo optimal_bst step 1750 current loss 0.860235, current_train_items 10672.
I0827 16:57:56.730347 134493687799808 run.py:695] Algo quickselect step 1750 current loss 2.701869, current_train_items 4241.
I0827 16:57:56.740895 134493687799808 run.py:695] Algo quicksort step 1750 current loss 7.467248, current_train_items 2671.
I0827 16:57:56.759110 134493687799808 run.py:695] Algo segments_intersect step 1750 current loss 0.664994, current_train_items 44832.
I0827 16:57:56.768980 134493687799808 run.py:695] Algo strongly_connected_components step 1750 current loss 2.558674, current_train_items 2052.
I0827 16:57:56.787233 134493687799808 run.py:695] Algo task_scheduling step 1750 current loss 2.576025, current_train_items 10672.
I0827 16:57:56.799937 134493687799808 run.py:695] Algo topological_sort step 1750 current loss 1.720103, current_train_items 4873.
I0827 16:57:56.920831 134493687799808 run.py:730] (val) algo mst_kruskal step 1750: {'in_mst': 0.65206316861946, 'score': 0.65206316861946, 'examples_seen': 38591, 'step': 1750, 'algorithm': 'mst_kruskal'}
I0827 16:57:56.941747 134493687799808 run.py:730] (val) algo mst_prim step 1750: {'pi': 0.8369140625, 'score': 0.8369140625, 'examples_seen': 35556, 'step': 1750, 'algorithm': 'mst_prim'}
I0827 16:57:57.685614 134493687799808 run.py:730] (val) algo naive_string_matcher step 1750: {'match': 0.694580078125, 'score': 0.694580078125, 'examples_seen': 23970, 'step': 1750, 'algorithm': 'naive_string_matcher'}
I0827 16:57:57.733904 134493687799808 run.py:730] (val) algo optimal_bst step 1750: {'root': 0.8589424740484429, 'score': 0.8589424740484429, 'examples_seen': 10672, 'step': 1750, 'algorithm': 'optimal_bst'}
I0827 16:58:01.943822 134493687799808 run.py:730] (val) algo quickselect step 1750: {'median': 0.2138671875, 'score': 0.2138671875, 'examples_seen': 4241, 'step': 1750, 'algorithm': 'quickselect'}
I0827 16:58:02.089106 134493687799808 run.py:730] (val) algo quicksort step 1750: {'pred': 0.919921875, 'score': 0.919921875, 'examples_seen': 2671, 'step': 1750, 'algorithm': 'quicksort'}
I0827 16:58:02.585207 134493687799808 run.py:730] (val) algo segments_intersect step 1750: {'intersect': 0.6396588486140725, 'score': 0.6396588486140725, 'examples_seen': 44832, 'step': 1750, 'algorithm': 'segments_intersect'}
I0827 16:58:02.690638 134493687799808 run.py:730] (val) algo strongly_connected_components step 1750: {'scc_id': 0.7236328125, 'score': 0.7236328125, 'examples_seen': 2052, 'step': 1750, 'algorithm': 'strongly_connected_components'}
I0827 16:58:02.704597 134493687799808 run.py:730] (val) algo task_scheduling step 1750: {'selected': 0.9299674267100977, 'score': 0.9299674267100977, 'examples_seen': 10672, 'step': 1750, 'algorithm': 'task_scheduling'}
I0827 16:58:02.758879 134493687799808 run.py:730] (val) algo topological_sort step 1750: {'topo': 0.6064453125, 'topo_head': 0.96875, 'score': 0.78759765625, 'examples_seen': 4873, 'step': 1750, 'algorithm': 'topological_sort'}
I0827 16:58:02.759059 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.726, val scores are: mst_kruskal: 0.652, mst_prim: 0.837, naive_string_matcher: 0.695, optimal_bst: 0.859, quickselect: 0.214, quicksort: 0.920, segments_intersect: 0.640, strongly_connected_components: 0.724, task_scheduling: 0.930, topological_sort: 0.788
I0827 16:58:20.441333 134493687799808 run.py:695] Algo mst_kruskal step 1800 current loss 0.075092, current_train_items 39715.
I0827 16:58:20.451840 134493687799808 run.py:695] Algo mst_prim step 1800 current loss 0.321739, current_train_items 36577.
I0827 16:58:20.460759 134493687799808 run.py:695] Algo naive_string_matcher step 1800 current loss 1.306857, current_train_items 24667.
I0827 16:58:20.472518 134493687799808 run.py:695] Algo optimal_bst step 1800 current loss 0.000000, current_train_items 10976.
I0827 16:58:20.550431 134493687799808 run.py:695] Algo quickselect step 1800 current loss 2.031988, current_train_items 4360.
I0827 16:58:20.560812 134493687799808 run.py:695] Algo quicksort step 1800 current loss 7.656351, current_train_items 2743.
I0827 16:58:20.578518 134493687799808 run.py:695] Algo segments_intersect step 1800 current loss 0.664790, current_train_items 46112.
I0827 16:58:20.589229 134493687799808 run.py:695] Algo strongly_connected_components step 1800 current loss 0.000000, current_train_items 2110.
I0827 16:58:20.607795 134493687799808 run.py:695] Algo task_scheduling step 1800 current loss 0.000000, current_train_items 10976.
I0827 16:58:20.619512 134493687799808 run.py:695] Algo topological_sort step 1800 current loss 1.135459, current_train_items 5012.
I0827 16:58:20.736120 134493687799808 run.py:730] (val) algo mst_kruskal step 1800: {'in_mst': 0.6512226512226512, 'score': 0.6512226512226512, 'examples_seen': 39715, 'step': 1800, 'algorithm': 'mst_kruskal'}
I0827 16:58:20.760241 134493687799808 run.py:730] (val) algo mst_prim step 1800: {'pi': 0.84375, 'score': 0.84375, 'examples_seen': 36577, 'step': 1800, 'algorithm': 'mst_prim'}
I0827 16:58:21.510495 134493687799808 run.py:730] (val) algo naive_string_matcher step 1800: {'match': 0.67578125, 'score': 0.67578125, 'examples_seen': 24667, 'step': 1800, 'algorithm': 'naive_string_matcher'}
I0827 16:58:21.558926 134493687799808 run.py:730] (val) algo optimal_bst step 1800: {'root': 0.8613213667820069, 'score': 0.8613213667820069, 'examples_seen': 10976, 'step': 1800, 'algorithm': 'optimal_bst'}
I0827 16:58:25.253793 134493687799808 run.py:730] (val) algo quickselect step 1800: {'median': 0.201171875, 'score': 0.201171875, 'examples_seen': 4360, 'step': 1800, 'algorithm': 'quickselect'}
I0827 16:58:25.399779 134493687799808 run.py:730] (val) algo quicksort step 1800: {'pred': 0.890625, 'score': 0.890625, 'examples_seen': 2743, 'step': 1800, 'algorithm': 'quicksort'}
I0827 16:58:25.895428 134493687799808 run.py:730] (val) algo segments_intersect step 1800: {'intersect': 0.5383233532934132, 'score': 0.5383233532934132, 'examples_seen': 46112, 'step': 1800, 'algorithm': 'segments_intersect'}
I0827 16:58:26.001311 134493687799808 run.py:730] (val) algo strongly_connected_components step 1800: {'scc_id': 0.736328125, 'score': 0.736328125, 'examples_seen': 2110, 'step': 1800, 'algorithm': 'strongly_connected_components'}
I0827 16:58:26.015066 134493687799808 run.py:730] (val) algo task_scheduling step 1800: {'selected': 0.8475770925110132, 'score': 0.8475770925110132, 'examples_seen': 10976, 'step': 1800, 'algorithm': 'task_scheduling'}
I0827 16:58:26.069584 134493687799808 run.py:730] (val) algo topological_sort step 1800: {'topo': 0.5927734375, 'topo_head': 1.0, 'score': 0.79638671875, 'examples_seen': 5012, 'step': 1800, 'algorithm': 'topological_sort'}
I0827 16:58:26.069768 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.726, current avg val score is 0.704, val scores are: mst_kruskal: 0.651, mst_prim: 0.844, naive_string_matcher: 0.676, optimal_bst: 0.861, quickselect: 0.201, quicksort: 0.891, segments_intersect: 0.538, strongly_connected_components: 0.736, task_scheduling: 0.848, topological_sort: 0.796
I0827 16:58:43.448833 134493687799808 run.py:695] Algo mst_kruskal step 1850 current loss 0.157249, current_train_items 40810.
I0827 16:58:43.458740 134493687799808 run.py:695] Algo mst_prim step 1850 current loss 0.526250, current_train_items 37609.
I0827 16:58:43.467195 134493687799808 run.py:695] Algo naive_string_matcher step 1850 current loss 1.086070, current_train_items 25325.
I0827 16:58:43.478892 134493687799808 run.py:695] Algo optimal_bst step 1850 current loss 0.000000, current_train_items 11280.
I0827 16:58:43.558600 134493687799808 run.py:695] Algo quickselect step 1850 current loss 2.137778, current_train_items 4481.
I0827 16:58:43.569402 134493687799808 run.py:695] Algo quicksort step 1850 current loss 8.053478, current_train_items 2818.
I0827 16:58:43.587144 134493687799808 run.py:695] Algo segments_intersect step 1850 current loss 0.645735, current_train_items 47392.
I0827 16:58:43.598665 134493687799808 run.py:695] Algo strongly_connected_components step 1850 current loss 0.473507, current_train_items 2170.
I0827 16:58:43.616402 134493687799808 run.py:695] Algo task_scheduling step 1850 current loss 0.000000, current_train_items 11280.
I0827 16:58:43.628550 134493687799808 run.py:695] Algo topological_sort step 1850 current loss 2.634349, current_train_items 5148.
I0827 16:58:43.745946 134493687799808 run.py:730] (val) algo mst_kruskal step 1850: {'in_mst': 0.7204843592330978, 'score': 0.7204843592330978, 'examples_seen': 40810, 'step': 1850, 'algorithm': 'mst_kruskal'}
I0827 16:58:43.767169 134493687799808 run.py:730] (val) algo mst_prim step 1850: {'pi': 0.8701171875, 'score': 0.8701171875, 'examples_seen': 37609, 'step': 1850, 'algorithm': 'mst_prim'}
I0827 16:58:44.516916 134493687799808 run.py:730] (val) algo naive_string_matcher step 1850: {'match': 0.669921875, 'score': 0.669921875, 'examples_seen': 25325, 'step': 1850, 'algorithm': 'naive_string_matcher'}
I0827 16:58:44.565035 134493687799808 run.py:730] (val) algo optimal_bst step 1850: {'root': 0.8640246539792388, 'score': 0.8640246539792388, 'examples_seen': 11280, 'step': 1850, 'algorithm': 'optimal_bst'}
I0827 16:58:48.250280 134493687799808 run.py:730] (val) algo quickselect step 1850: {'median': 0.223388671875, 'score': 0.223388671875, 'examples_seen': 4481, 'step': 1850, 'algorithm': 'quickselect'}
I0827 16:58:48.396113 134493687799808 run.py:730] (val) algo quicksort step 1850: {'pred': 0.91015625, 'score': 0.91015625, 'examples_seen': 2818, 'step': 1850, 'algorithm': 'quicksort'}
I0827 16:58:48.914803 134493687799808 run.py:730] (val) algo segments_intersect step 1850: {'intersect': 0.6661715558856295, 'score': 0.6661715558856295, 'examples_seen': 47392, 'step': 1850, 'algorithm': 'segments_intersect'}
I0827 16:58:49.019768 134493687799808 run.py:730] (val) algo strongly_connected_components step 1850: {'scc_id': 0.7685546875, 'score': 0.7685546875, 'examples_seen': 2170, 'step': 1850, 'algorithm': 'strongly_connected_components'}
I0827 16:58:49.033289 134493687799808 run.py:730] (val) algo task_scheduling step 1850: {'selected': 0.9259259259259258, 'score': 0.9259259259259258, 'examples_seen': 11280, 'step': 1850, 'algorithm': 'task_scheduling'}
I0827 16:58:49.087952 134493687799808 run.py:730] (val) algo topological_sort step 1850: {'topo': 0.7001953125, 'topo_head': 1.0, 'score': 0.85009765625, 'examples_seen': 5148, 'step': 1850, 'algorithm': 'topological_sort'}
I0827 16:58:49.088135 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.726, current avg val score is 0.747, val scores are: mst_kruskal: 0.720, mst_prim: 0.870, naive_string_matcher: 0.670, optimal_bst: 0.864, quickselect: 0.223, quicksort: 0.910, segments_intersect: 0.666, strongly_connected_components: 0.769, task_scheduling: 0.926, topological_sort: 0.850
I0827 16:59:06.619070 134493687799808 run.py:695] Algo mst_kruskal step 1900 current loss 0.102238, current_train_items 41932.
I0827 16:59:06.629700 134493687799808 run.py:695] Algo mst_prim step 1900 current loss 0.501884, current_train_items 38596.
I0827 16:59:06.638534 134493687799808 run.py:695] Algo naive_string_matcher step 1900 current loss 1.503716, current_train_items 25989.
I0827 16:59:06.650764 134493687799808 run.py:695] Algo optimal_bst step 1900 current loss 0.000000, current_train_items 11584.
I0827 16:59:06.728648 134493687799808 run.py:695] Algo quickselect step 1900 current loss 2.534586, current_train_items 4599.
I0827 16:59:06.739986 134493687799808 run.py:695] Algo quicksort step 1900 current loss 4.319623, current_train_items 2894.
I0827 16:59:06.757572 134493687799808 run.py:695] Algo segments_intersect step 1900 current loss 0.661102, current_train_items 48672.
I0827 16:59:06.768428 134493687799808 run.py:695] Algo strongly_connected_components step 1900 current loss 1.518762, current_train_items 2229.
I0827 16:59:06.786751 134493687799808 run.py:695] Algo task_scheduling step 1900 current loss 0.000000, current_train_items 11584.
I0827 16:59:06.799146 134493687799808 run.py:695] Algo topological_sort step 1900 current loss 2.096663, current_train_items 5286.
I0827 16:59:06.910938 134493687799808 run.py:730] (val) algo mst_kruskal step 1900: {'in_mst': 0.8116646415552856, 'score': 0.8116646415552856, 'examples_seen': 41932, 'step': 1900, 'algorithm': 'mst_kruskal'}
I0827 16:59:06.931865 134493687799808 run.py:730] (val) algo mst_prim step 1900: {'pi': 0.828125, 'score': 0.828125, 'examples_seen': 38596, 'step': 1900, 'algorithm': 'mst_prim'}
I0827 16:59:07.676144 134493687799808 run.py:730] (val) algo naive_string_matcher step 1900: {'match': 0.645751953125, 'score': 0.645751953125, 'examples_seen': 25989, 'step': 1900, 'algorithm': 'naive_string_matcher'}
I0827 16:59:07.723985 134493687799808 run.py:730] (val) algo optimal_bst step 1900: {'root': 0.8687283737024222, 'score': 0.8687283737024222, 'examples_seen': 11584, 'step': 1900, 'algorithm': 'optimal_bst'}
I0827 16:59:11.409552 134493687799808 run.py:730] (val) algo quickselect step 1900: {'median': 0.20068359375, 'score': 0.20068359375, 'examples_seen': 4599, 'step': 1900, 'algorithm': 'quickselect'}
I0827 16:59:11.556639 134493687799808 run.py:730] (val) algo quicksort step 1900: {'pred': 0.89453125, 'score': 0.89453125, 'examples_seen': 2894, 'step': 1900, 'algorithm': 'quicksort'}
I0827 16:59:12.051011 134493687799808 run.py:730] (val) algo segments_intersect step 1900: {'intersect': 0.6012396694214875, 'score': 0.6012396694214875, 'examples_seen': 48672, 'step': 1900, 'algorithm': 'segments_intersect'}
I0827 16:59:12.156870 134493687799808 run.py:730] (val) algo strongly_connected_components step 1900: {'scc_id': 0.7021484375, 'score': 0.7021484375, 'examples_seen': 2229, 'step': 1900, 'algorithm': 'strongly_connected_components'}
I0827 16:59:12.170776 134493687799808 run.py:730] (val) algo task_scheduling step 1900: {'selected': 0.8442844284428442, 'score': 0.8442844284428442, 'examples_seen': 11584, 'step': 1900, 'algorithm': 'task_scheduling'}
I0827 16:59:12.224223 134493687799808 run.py:730] (val) algo topological_sort step 1900: {'topo': 0.5732421875, 'topo_head': 1.0, 'score': 0.78662109375, 'examples_seen': 5286, 'step': 1900, 'algorithm': 'topological_sort'}
I0827 16:59:12.224394 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.718, val scores are: mst_kruskal: 0.812, mst_prim: 0.828, naive_string_matcher: 0.646, optimal_bst: 0.869, quickselect: 0.201, quicksort: 0.895, segments_intersect: 0.601, strongly_connected_components: 0.702, task_scheduling: 0.844, topological_sort: 0.787
I0827 16:59:30.166155 134493687799808 run.py:695] Algo mst_kruskal step 1950 current loss 0.095402, current_train_items 43027.
I0827 16:59:30.176006 134493687799808 run.py:695] Algo mst_prim step 1950 current loss 0.334591, current_train_items 39623.
I0827 16:59:30.184544 134493687799808 run.py:695] Algo naive_string_matcher step 1950 current loss 1.227633, current_train_items 26679.
I0827 16:59:30.197071 134493687799808 run.py:695] Algo optimal_bst step 1950 current loss 0.000000, current_train_items 11888.
I0827 16:59:30.275178 134493687799808 run.py:695] Algo quickselect step 1950 current loss 1.519347, current_train_items 4728.
I0827 16:59:30.285209 134493687799808 run.py:695] Algo quicksort step 1950 current loss 4.236381, current_train_items 2972.
I0827 16:59:30.303232 134493687799808 run.py:695] Algo segments_intersect step 1950 current loss 0.707978, current_train_items 49952.
I0827 16:59:30.315540 134493687799808 run.py:695] Algo strongly_connected_components step 1950 current loss 1.598807, current_train_items 2286.
I0827 16:59:30.335015 134493687799808 run.py:695] Algo task_scheduling step 1950 current loss 0.000000, current_train_items 11888.
I0827 16:59:30.346324 134493687799808 run.py:695] Algo topological_sort step 1950 current loss 1.616104, current_train_items 5429.
I0827 16:59:30.461745 134493687799808 run.py:730] (val) algo mst_kruskal step 1950: {'in_mst': 0.8227027027027027, 'score': 0.8227027027027027, 'examples_seen': 43027, 'step': 1950, 'algorithm': 'mst_kruskal'}
I0827 16:59:30.482700 134493687799808 run.py:730] (val) algo mst_prim step 1950: {'pi': 0.7978515625, 'score': 0.7978515625, 'examples_seen': 39623, 'step': 1950, 'algorithm': 'mst_prim'}
I0827 16:59:31.223108 134493687799808 run.py:730] (val) algo naive_string_matcher step 1950: {'match': 0.686279296875, 'score': 0.686279296875, 'examples_seen': 26679, 'step': 1950, 'algorithm': 'naive_string_matcher'}
I0827 16:59:31.271354 134493687799808 run.py:730] (val) algo optimal_bst step 1950: {'root': 0.8608888408304498, 'score': 0.8608888408304498, 'examples_seen': 11888, 'step': 1950, 'algorithm': 'optimal_bst'}
I0827 16:59:34.957955 134493687799808 run.py:730] (val) algo quickselect step 1950: {'median': 0.2099609375, 'score': 0.2099609375, 'examples_seen': 4728, 'step': 1950, 'algorithm': 'quickselect'}
I0827 16:59:35.102355 134493687799808 run.py:730] (val) algo quicksort step 1950: {'pred': 0.8916015625, 'score': 0.8916015625, 'examples_seen': 2972, 'step': 1950, 'algorithm': 'quicksort'}
I0827 16:59:35.602517 134493687799808 run.py:730] (val) algo segments_intersect step 1950: {'intersect': 0.622570058066145, 'score': 0.622570058066145, 'examples_seen': 49952, 'step': 1950, 'algorithm': 'segments_intersect'}
I0827 16:59:35.708290 134493687799808 run.py:730] (val) algo strongly_connected_components step 1950: {'scc_id': 0.7265625, 'score': 0.7265625, 'examples_seen': 2286, 'step': 1950, 'algorithm': 'strongly_connected_components'}
I0827 16:59:35.722193 134493687799808 run.py:730] (val) algo task_scheduling step 1950: {'selected': 0.9360655737704917, 'score': 0.9360655737704917, 'examples_seen': 11888, 'step': 1950, 'algorithm': 'task_scheduling'}
I0827 16:59:35.776590 134493687799808 run.py:730] (val) algo topological_sort step 1950: {'topo': 0.6796875, 'topo_head': 1.0, 'score': 0.83984375, 'examples_seen': 5429, 'step': 1950, 'algorithm': 'topological_sort'}
I0827 16:59:35.776766 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.739, val scores are: mst_kruskal: 0.823, mst_prim: 0.798, naive_string_matcher: 0.686, optimal_bst: 0.861, quickselect: 0.210, quicksort: 0.892, segments_intersect: 0.623, strongly_connected_components: 0.727, task_scheduling: 0.936, topological_sort: 0.840
I0827 16:59:52.730247 134493687799808 run.py:695] Algo mst_kruskal step 2000 current loss 0.083928, current_train_items 44135.
I0827 16:59:52.748349 134493687799808 run.py:695] Algo mst_prim step 2000 current loss 0.407453, current_train_items 40640.
I0827 16:59:52.763824 134493687799808 run.py:695] Algo naive_string_matcher step 2000 current loss 2.114919, current_train_items 27377.
I0827 16:59:52.781849 134493687799808 run.py:695] Algo optimal_bst step 2000 current loss 0.000000, current_train_items 12192.
I0827 16:59:52.868897 134493687799808 run.py:695] Algo quickselect step 2000 current loss 2.466492, current_train_items 4848.
I0827 16:59:52.886110 134493687799808 run.py:695] Algo quicksort step 2000 current loss 0.000000, current_train_items 3047.
I0827 16:59:52.908321 134493687799808 run.py:695] Algo segments_intersect step 2000 current loss 0.713012, current_train_items 51232.
I0827 16:59:52.928708 134493687799808 run.py:695] Algo strongly_connected_components step 2000 current loss 1.456133, current_train_items 2345.
I0827 16:59:52.946422 134493687799808 run.py:695] Algo task_scheduling step 2000 current loss 0.000000, current_train_items 12192.
I0827 16:59:52.966817 134493687799808 run.py:695] Algo topological_sort step 2000 current loss 2.824167, current_train_items 5568.
I0827 16:59:53.127195 134493687799808 run.py:730] (val) algo mst_kruskal step 2000: {'in_mst': 0.7855787476280834, 'score': 0.7855787476280834, 'examples_seen': 44135, 'step': 2000, 'algorithm': 'mst_kruskal'}
I0827 16:59:53.157829 134493687799808 run.py:730] (val) algo mst_prim step 2000: {'pi': 0.90234375, 'score': 0.90234375, 'examples_seen': 40640, 'step': 2000, 'algorithm': 'mst_prim'}
I0827 16:59:54.228701 134493687799808 run.py:730] (val) algo naive_string_matcher step 2000: {'match': 0.70751953125, 'score': 0.70751953125, 'examples_seen': 27377, 'step': 2000, 'algorithm': 'naive_string_matcher'}
I0827 16:59:54.276250 134493687799808 run.py:730] (val) algo optimal_bst step 2000: {'root': 0.8776492214532872, 'score': 0.8776492214532872, 'examples_seen': 12192, 'step': 2000, 'algorithm': 'optimal_bst'}
I0827 16:59:57.968755 134493687799808 run.py:730] (val) algo quickselect step 2000: {'median': 0.208740234375, 'score': 0.208740234375, 'examples_seen': 4848, 'step': 2000, 'algorithm': 'quickselect'}
I0827 16:59:58.114702 134493687799808 run.py:730] (val) algo quicksort step 2000: {'pred': 0.931640625, 'score': 0.931640625, 'examples_seen': 3047, 'step': 2000, 'algorithm': 'quicksort'}
I0827 16:59:58.642189 134493687799808 run.py:730] (val) algo segments_intersect step 2000: {'intersect': 0.27970297029702973, 'score': 0.27970297029702973, 'examples_seen': 51232, 'step': 2000, 'algorithm': 'segments_intersect'}
I0827 16:59:58.747818 134493687799808 run.py:730] (val) algo strongly_connected_components step 2000: {'scc_id': 0.7607421875, 'score': 0.7607421875, 'examples_seen': 2345, 'step': 2000, 'algorithm': 'strongly_connected_components'}
I0827 16:59:58.761826 134493687799808 run.py:730] (val) algo task_scheduling step 2000: {'selected': 0.9270186335403727, 'score': 0.9270186335403727, 'examples_seen': 12192, 'step': 2000, 'algorithm': 'task_scheduling'}
I0827 16:59:58.815923 134493687799808 run.py:730] (val) algo topological_sort step 2000: {'topo': 0.650390625, 'topo_head': 1.0, 'score': 0.8251953125, 'examples_seen': 5568, 'step': 2000, 'algorithm': 'topological_sort'}
I0827 16:59:58.816091 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.721, val scores are: mst_kruskal: 0.786, mst_prim: 0.902, naive_string_matcher: 0.708, optimal_bst: 0.878, quickselect: 0.209, quicksort: 0.932, segments_intersect: 0.280, strongly_connected_components: 0.761, task_scheduling: 0.927, topological_sort: 0.825
I0827 17:00:15.815674 134493687799808 run.py:695] Algo mst_kruskal step 2050 current loss 0.084928, current_train_items 45270.
I0827 17:00:15.826449 134493687799808 run.py:695] Algo mst_prim step 2050 current loss 0.606173, current_train_items 41644.
I0827 17:00:15.835045 134493687799808 run.py:695] Algo naive_string_matcher step 2050 current loss 1.421942, current_train_items 28037.
I0827 17:00:15.847043 134493687799808 run.py:695] Algo optimal_bst step 2050 current loss 0.000000, current_train_items 12496.
I0827 17:00:15.925370 134493687799808 run.py:695] Algo quickselect step 2050 current loss 2.506249, current_train_items 4973.
I0827 17:00:15.936007 134493687799808 run.py:695] Algo quicksort step 2050 current loss 2.536443, current_train_items 3124.
I0827 17:00:15.953824 134493687799808 run.py:695] Algo segments_intersect step 2050 current loss 0.733707, current_train_items 52512.
I0827 17:00:15.964745 134493687799808 run.py:695] Algo strongly_connected_components step 2050 current loss 0.768099, current_train_items 2402.
I0827 17:00:15.982330 134493687799808 run.py:695] Algo task_scheduling step 2050 current loss 0.000000, current_train_items 12496.
I0827 17:00:15.994571 134493687799808 run.py:695] Algo topological_sort step 2050 current loss 0.775162, current_train_items 5706.
I0827 17:00:16.105139 134493687799808 run.py:730] (val) algo mst_kruskal step 2050: {'in_mst': 0.8031413612565445, 'score': 0.8031413612565445, 'examples_seen': 45270, 'step': 2050, 'algorithm': 'mst_kruskal'}
I0827 17:00:16.127944 134493687799808 run.py:730] (val) algo mst_prim step 2050: {'pi': 0.791015625, 'score': 0.791015625, 'examples_seen': 41644, 'step': 2050, 'algorithm': 'mst_prim'}
I0827 17:00:17.171081 134493687799808 run.py:730] (val) algo naive_string_matcher step 2050: {'match': 0.72802734375, 'score': 0.72802734375, 'examples_seen': 28037, 'step': 2050, 'algorithm': 'naive_string_matcher'}
I0827 17:00:17.220423 134493687799808 run.py:730] (val) algo optimal_bst step 2050: {'root': 0.8712153979238755, 'score': 0.8712153979238755, 'examples_seen': 12496, 'step': 2050, 'algorithm': 'optimal_bst'}
I0827 17:00:20.914407 134493687799808 run.py:730] (val) algo quickselect step 2050: {'median': 0.2216796875, 'score': 0.2216796875, 'examples_seen': 4973, 'step': 2050, 'algorithm': 'quickselect'}
I0827 17:00:21.059581 134493687799808 run.py:730] (val) algo quicksort step 2050: {'pred': 0.9150390625, 'score': 0.9150390625, 'examples_seen': 3124, 'step': 2050, 'algorithm': 'quicksort'}
I0827 17:00:21.560262 134493687799808 run.py:730] (val) algo segments_intersect step 2050: {'intersect': 0.6646666666666666, 'score': 0.6646666666666666, 'examples_seen': 52512, 'step': 2050, 'algorithm': 'segments_intersect'}
I0827 17:00:21.664908 134493687799808 run.py:730] (val) algo strongly_connected_components step 2050: {'scc_id': 0.7451171875, 'score': 0.7451171875, 'examples_seen': 2402, 'step': 2050, 'algorithm': 'strongly_connected_components'}
I0827 17:00:21.678377 134493687799808 run.py:730] (val) algo task_scheduling step 2050: {'selected': 0.9079054604726976, 'score': 0.9079054604726976, 'examples_seen': 12496, 'step': 2050, 'algorithm': 'task_scheduling'}
I0827 17:00:21.732820 134493687799808 run.py:730] (val) algo topological_sort step 2050: {'topo': 0.6396484375, 'topo_head': 1.0, 'score': 0.81982421875, 'examples_seen': 5706, 'step': 2050, 'algorithm': 'topological_sort'}
I0827 17:00:21.733026 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.747, val scores are: mst_kruskal: 0.803, mst_prim: 0.791, naive_string_matcher: 0.728, optimal_bst: 0.871, quickselect: 0.222, quicksort: 0.915, segments_intersect: 0.665, strongly_connected_components: 0.745, task_scheduling: 0.908, topological_sort: 0.820
I0827 17:00:39.295456 134493687799808 run.py:695] Algo mst_kruskal step 2100 current loss 0.099730, current_train_items 46355.
I0827 17:00:39.305834 134493687799808 run.py:695] Algo mst_prim step 2100 current loss 0.496516, current_train_items 42644.
I0827 17:00:39.314748 134493687799808 run.py:695] Algo naive_string_matcher step 2100 current loss 2.070317, current_train_items 28727.
I0827 17:00:39.326707 134493687799808 run.py:695] Algo optimal_bst step 2100 current loss 0.000000, current_train_items 12800.
I0827 17:00:39.404198 134493687799808 run.py:695] Algo quickselect step 2100 current loss 3.075605, current_train_items 5096.
I0827 17:00:39.415087 134493687799808 run.py:695] Algo quicksort step 2100 current loss 1.442758, current_train_items 3198.
I0827 17:00:39.432657 134493687799808 run.py:695] Algo segments_intersect step 2100 current loss 0.621412, current_train_items 53792.
I0827 17:00:39.443541 134493687799808 run.py:695] Algo strongly_connected_components step 2100 current loss 0.404445, current_train_items 2462.
I0827 17:00:39.461593 134493687799808 run.py:695] Algo task_scheduling step 2100 current loss 0.000000, current_train_items 12800.
I0827 17:00:39.473929 134493687799808 run.py:695] Algo topological_sort step 2100 current loss 1.498700, current_train_items 5849.
I0827 17:00:39.593907 134493687799808 run.py:730] (val) algo mst_kruskal step 2100: {'in_mst': 0.8057553956834533, 'score': 0.8057553956834533, 'examples_seen': 46355, 'step': 2100, 'algorithm': 'mst_kruskal'}
I0827 17:00:39.615673 134493687799808 run.py:730] (val) algo mst_prim step 2100: {'pi': 0.83203125, 'score': 0.83203125, 'examples_seen': 42644, 'step': 2100, 'algorithm': 'mst_prim'}
I0827 17:00:40.496253 134493687799808 run.py:730] (val) algo naive_string_matcher step 2100: {'match': 0.69140625, 'score': 0.69140625, 'examples_seen': 28727, 'step': 2100, 'algorithm': 'naive_string_matcher'}
I0827 17:00:40.546856 134493687799808 run.py:730] (val) algo optimal_bst step 2100: {'root': 0.8656466262975778, 'score': 0.8656466262975778, 'examples_seen': 12800, 'step': 2100, 'algorithm': 'optimal_bst'}
I0827 17:00:44.231878 134493687799808 run.py:730] (val) algo quickselect step 2100: {'median': 0.22412109375, 'score': 0.22412109375, 'examples_seen': 5096, 'step': 2100, 'algorithm': 'quickselect'}
I0827 17:00:44.377926 134493687799808 run.py:730] (val) algo quicksort step 2100: {'pred': 0.9443359375, 'score': 0.9443359375, 'examples_seen': 3198, 'step': 2100, 'algorithm': 'quicksort'}
I0827 17:00:44.882005 134493687799808 run.py:730] (val) algo segments_intersect step 2100: {'intersect': 0.46804451510333867, 'score': 0.46804451510333867, 'examples_seen': 53792, 'step': 2100, 'algorithm': 'segments_intersect'}
I0827 17:00:44.987369 134493687799808 run.py:730] (val) algo strongly_connected_components step 2100: {'scc_id': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 2462, 'step': 2100, 'algorithm': 'strongly_connected_components'}
I0827 17:00:45.001006 134493687799808 run.py:730] (val) algo task_scheduling step 2100: {'selected': 0.936267071320182, 'score': 0.936267071320182, 'examples_seen': 12800, 'step': 2100, 'algorithm': 'task_scheduling'}
I0827 17:00:45.055556 134493687799808 run.py:730] (val) algo topological_sort step 2100: {'topo': 0.6904296875, 'topo_head': 1.0, 'score': 0.84521484375, 'examples_seen': 5849, 'step': 2100, 'algorithm': 'topological_sort'}
I0827 17:00:45.055798 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.739, val scores are: mst_kruskal: 0.806, mst_prim: 0.832, naive_string_matcher: 0.691, optimal_bst: 0.866, quickselect: 0.224, quicksort: 0.944, segments_intersect: 0.468, strongly_connected_components: 0.772, task_scheduling: 0.936, topological_sort: 0.845
I0827 17:01:01.668530 134493687799808 run.py:695] Algo mst_kruskal step 2150 current loss 0.099345, current_train_items 47452.
I0827 17:01:01.679266 134493687799808 run.py:695] Algo mst_prim step 2150 current loss 0.529942, current_train_items 43687.
I0827 17:01:01.687909 134493687799808 run.py:695] Algo naive_string_matcher step 2150 current loss 1.540667, current_train_items 29427.
I0827 17:01:01.699838 134493687799808 run.py:695] Algo optimal_bst step 2150 current loss 0.000000, current_train_items 13104.
I0827 17:01:01.778148 134493687799808 run.py:695] Algo quickselect step 2150 current loss 2.122260, current_train_items 5218.
I0827 17:01:01.789370 134493687799808 run.py:695] Algo quicksort step 2150 current loss 0.000000, current_train_items 3272.
I0827 17:01:01.806404 134493687799808 run.py:695] Algo segments_intersect step 2150 current loss 0.633158, current_train_items 55072.
I0827 17:01:01.818595 134493687799808 run.py:695] Algo strongly_connected_components step 2150 current loss 0.754758, current_train_items 2521.
I0827 17:01:01.836691 134493687799808 run.py:695] Algo task_scheduling step 2150 current loss 0.000000, current_train_items 13104.
I0827 17:01:01.848980 134493687799808 run.py:695] Algo topological_sort step 2150 current loss 1.279139, current_train_items 5984.
I0827 17:01:01.965878 134493687799808 run.py:730] (val) algo mst_kruskal step 2150: {'in_mst': 0.7372262773722627, 'score': 0.7372262773722627, 'examples_seen': 47452, 'step': 2150, 'algorithm': 'mst_kruskal'}
I0827 17:01:01.987232 134493687799808 run.py:730] (val) algo mst_prim step 2150: {'pi': 0.8603515625, 'score': 0.8603515625, 'examples_seen': 43687, 'step': 2150, 'algorithm': 'mst_prim'}
I0827 17:01:02.744243 134493687799808 run.py:730] (val) algo naive_string_matcher step 2150: {'match': 0.6884765625, 'score': 0.6884765625, 'examples_seen': 29427, 'step': 2150, 'algorithm': 'naive_string_matcher'}
I0827 17:01:02.791978 134493687799808 run.py:730] (val) algo optimal_bst step 2150: {'root': 0.8563473183391004, 'score': 0.8563473183391004, 'examples_seen': 13104, 'step': 2150, 'algorithm': 'optimal_bst'}
I0827 17:01:06.474012 134493687799808 run.py:730] (val) algo quickselect step 2150: {'median': 0.21728515625, 'score': 0.21728515625, 'examples_seen': 5218, 'step': 2150, 'algorithm': 'quickselect'}
I0827 17:01:06.618499 134493687799808 run.py:730] (val) algo quicksort step 2150: {'pred': 0.8486328125, 'score': 0.8486328125, 'examples_seen': 3272, 'step': 2150, 'algorithm': 'quicksort'}
I0827 17:01:07.125155 134493687799808 run.py:730] (val) algo segments_intersect step 2150: {'intersect': 0.6278229448961157, 'score': 0.6278229448961157, 'examples_seen': 55072, 'step': 2150, 'algorithm': 'segments_intersect'}
I0827 17:01:07.230177 134493687799808 run.py:730] (val) algo strongly_connected_components step 2150: {'scc_id': 0.6669921875, 'score': 0.6669921875, 'examples_seen': 2521, 'step': 2150, 'algorithm': 'strongly_connected_components'}
I0827 17:01:07.243668 134493687799808 run.py:730] (val) algo task_scheduling step 2150: {'selected': 0.8675555555555556, 'score': 0.8675555555555556, 'examples_seen': 13104, 'step': 2150, 'algorithm': 'task_scheduling'}
I0827 17:01:07.297985 134493687799808 run.py:730] (val) algo topological_sort step 2150: {'topo': 0.6513671875, 'topo_head': 1.0, 'score': 0.82568359375, 'examples_seen': 5984, 'step': 2150, 'algorithm': 'topological_sort'}
I0827 17:01:07.298160 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.720, val scores are: mst_kruskal: 0.737, mst_prim: 0.860, naive_string_matcher: 0.688, optimal_bst: 0.856, quickselect: 0.217, quicksort: 0.849, segments_intersect: 0.628, strongly_connected_components: 0.667, task_scheduling: 0.868, topological_sort: 0.826
I0827 17:01:24.296981 134493687799808 run.py:695] Algo mst_kruskal step 2200 current loss 0.063185, current_train_items 48578.
I0827 17:01:24.306986 134493687799808 run.py:695] Algo mst_prim step 2200 current loss 0.478434, current_train_items 44708.
I0827 17:01:24.315665 134493687799808 run.py:695] Algo naive_string_matcher step 2200 current loss 1.484571, current_train_items 30104.
I0827 17:01:24.327819 134493687799808 run.py:695] Algo optimal_bst step 2200 current loss 0.000000, current_train_items 13408.
I0827 17:01:24.405550 134493687799808 run.py:695] Algo quickselect step 2200 current loss 2.223866, current_train_items 5337.
I0827 17:01:24.416219 134493687799808 run.py:695] Algo quicksort step 2200 current loss 18.643734, current_train_items 3351.
I0827 17:01:24.434179 134493687799808 run.py:695] Algo segments_intersect step 2200 current loss 0.673687, current_train_items 56352.
I0827 17:01:24.444723 134493687799808 run.py:695] Algo strongly_connected_components step 2200 current loss 0.000000, current_train_items 2579.
I0827 17:01:24.463160 134493687799808 run.py:695] Algo task_scheduling step 2200 current loss 0.000000, current_train_items 13408.
I0827 17:01:24.475977 134493687799808 run.py:695] Algo topological_sort step 2200 current loss 2.245406, current_train_items 6123.
I0827 17:01:24.595865 134493687799808 run.py:730] (val) algo mst_kruskal step 2200: {'in_mst': 0.8737864077669902, 'score': 0.8737864077669902, 'examples_seen': 48578, 'step': 2200, 'algorithm': 'mst_kruskal'}
I0827 17:01:24.616907 134493687799808 run.py:730] (val) algo mst_prim step 2200: {'pi': 0.8154296875, 'score': 0.8154296875, 'examples_seen': 44708, 'step': 2200, 'algorithm': 'mst_prim'}
I0827 17:01:25.364119 134493687799808 run.py:730] (val) algo naive_string_matcher step 2200: {'match': 0.70263671875, 'score': 0.70263671875, 'examples_seen': 30104, 'step': 2200, 'algorithm': 'naive_string_matcher'}
I0827 17:01:25.411857 134493687799808 run.py:730] (val) algo optimal_bst step 2200: {'root': 0.8669442041522492, 'score': 0.8669442041522492, 'examples_seen': 13408, 'step': 2200, 'algorithm': 'optimal_bst'}
I0827 17:01:29.141368 134493687799808 run.py:730] (val) algo quickselect step 2200: {'median': 0.18505859375, 'score': 0.18505859375, 'examples_seen': 5337, 'step': 2200, 'algorithm': 'quickselect'}
I0827 17:01:29.291795 134493687799808 run.py:730] (val) algo quicksort step 2200: {'pred': 0.9326171875, 'score': 0.9326171875, 'examples_seen': 3351, 'step': 2200, 'algorithm': 'quicksort'}
I0827 17:01:30.162798 134493687799808 run.py:730] (val) algo segments_intersect step 2200: {'intersect': 0.5235055136390018, 'score': 0.5235055136390018, 'examples_seen': 56352, 'step': 2200, 'algorithm': 'segments_intersect'}
I0827 17:01:30.268019 134493687799808 run.py:730] (val) algo strongly_connected_components step 2200: {'scc_id': 0.783203125, 'score': 0.783203125, 'examples_seen': 2579, 'step': 2200, 'algorithm': 'strongly_connected_components'}
I0827 17:01:30.281797 134493687799808 run.py:730] (val) algo task_scheduling step 2200: {'selected': 0.9285153181461115, 'score': 0.9285153181461115, 'examples_seen': 13408, 'step': 2200, 'algorithm': 'task_scheduling'}
I0827 17:01:30.336160 134493687799808 run.py:730] (val) algo topological_sort step 2200: {'topo': 0.6552734375, 'topo_head': 1.0, 'score': 0.82763671875, 'examples_seen': 6123, 'step': 2200, 'algorithm': 'topological_sort'}
I0827 17:01:30.336314 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.744, val scores are: mst_kruskal: 0.874, mst_prim: 0.815, naive_string_matcher: 0.703, optimal_bst: 0.867, quickselect: 0.185, quicksort: 0.933, segments_intersect: 0.524, strongly_connected_components: 0.783, task_scheduling: 0.929, topological_sort: 0.828
I0827 17:01:47.156363 134493687799808 run.py:695] Algo mst_kruskal step 2250 current loss 0.107844, current_train_items 49689.
I0827 17:01:47.167263 134493687799808 run.py:695] Algo mst_prim step 2250 current loss 0.409075, current_train_items 45726.
I0827 17:01:47.176740 134493687799808 run.py:695] Algo naive_string_matcher step 2250 current loss 1.722133, current_train_items 30804.
I0827 17:01:47.189324 134493687799808 run.py:695] Algo optimal_bst step 2250 current loss 0.000000, current_train_items 13712.
I0827 17:01:47.268303 134493687799808 run.py:695] Algo quickselect step 2250 current loss 1.774746, current_train_items 5457.
I0827 17:01:47.280309 134493687799808 run.py:695] Algo quicksort step 2250 current loss 0.000000, current_train_items 3424.
I0827 17:01:47.297417 134493687799808 run.py:695] Algo segments_intersect step 2250 current loss 0.668226, current_train_items 57632.
I0827 17:01:47.308097 134493687799808 run.py:695] Algo strongly_connected_components step 2250 current loss 0.000000, current_train_items 2636.
I0827 17:01:47.325768 134493687799808 run.py:695] Algo task_scheduling step 2250 current loss 0.000000, current_train_items 13712.
I0827 17:01:47.337847 134493687799808 run.py:695] Algo topological_sort step 2250 current loss 3.357635, current_train_items 6262.
I0827 17:01:47.453067 134493687799808 run.py:730] (val) algo mst_kruskal step 2250: {'in_mst': 0.8222748815165878, 'score': 0.8222748815165878, 'examples_seen': 49689, 'step': 2250, 'algorithm': 'mst_kruskal'}
I0827 17:01:47.474254 134493687799808 run.py:730] (val) algo mst_prim step 2250: {'pi': 0.8193359375, 'score': 0.8193359375, 'examples_seen': 45726, 'step': 2250, 'algorithm': 'mst_prim'}
I0827 17:01:48.222611 134493687799808 run.py:730] (val) algo naive_string_matcher step 2250: {'match': 0.73486328125, 'score': 0.73486328125, 'examples_seen': 30804, 'step': 2250, 'algorithm': 'naive_string_matcher'}
I0827 17:01:48.270228 134493687799808 run.py:730] (val) algo optimal_bst step 2250: {'root': 0.8515895328719724, 'score': 0.8515895328719724, 'examples_seen': 13712, 'step': 2250, 'algorithm': 'optimal_bst'}
I0827 17:01:51.960440 134493687799808 run.py:730] (val) algo quickselect step 2250: {'median': 0.19677734375, 'score': 0.19677734375, 'examples_seen': 5457, 'step': 2250, 'algorithm': 'quickselect'}
I0827 17:01:52.105834 134493687799808 run.py:730] (val) algo quicksort step 2250: {'pred': 0.794921875, 'score': 0.794921875, 'examples_seen': 3424, 'step': 2250, 'algorithm': 'quicksort'}
I0827 17:01:53.020009 134493687799808 run.py:730] (val) algo segments_intersect step 2250: {'intersect': 0.5237075558274702, 'score': 0.5237075558274702, 'examples_seen': 57632, 'step': 2250, 'algorithm': 'segments_intersect'}
I0827 17:01:53.127504 134493687799808 run.py:730] (val) algo strongly_connected_components step 2250: {'scc_id': 0.69921875, 'score': 0.69921875, 'examples_seen': 2636, 'step': 2250, 'algorithm': 'strongly_connected_components'}
I0827 17:01:53.147018 134493687799808 run.py:730] (val) algo task_scheduling step 2250: {'selected': 0.9407176287051483, 'score': 0.9407176287051483, 'examples_seen': 13712, 'step': 2250, 'algorithm': 'task_scheduling'}
I0827 17:01:53.201617 134493687799808 run.py:730] (val) algo topological_sort step 2250: {'topo': 0.69140625, 'topo_head': 1.0, 'score': 0.845703125, 'examples_seen': 6262, 'step': 2250, 'algorithm': 'topological_sort'}
I0827 17:01:53.201826 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.723, val scores are: mst_kruskal: 0.822, mst_prim: 0.819, naive_string_matcher: 0.735, optimal_bst: 0.852, quickselect: 0.197, quicksort: 0.795, segments_intersect: 0.524, strongly_connected_components: 0.699, task_scheduling: 0.941, topological_sort: 0.846
I0827 17:02:10.545109 134493687799808 run.py:695] Algo mst_kruskal step 2300 current loss 0.139895, current_train_items 50835.
I0827 17:02:10.555408 134493687799808 run.py:695] Algo mst_prim step 2300 current loss 0.202771, current_train_items 46756.
I0827 17:02:10.563952 134493687799808 run.py:695] Algo naive_string_matcher step 2300 current loss 1.658771, current_train_items 31483.
I0827 17:02:10.576014 134493687799808 run.py:695] Algo optimal_bst step 2300 current loss 0.000000, current_train_items 14016.
I0827 17:02:10.653324 134493687799808 run.py:695] Algo quickselect step 2300 current loss 2.064553, current_train_items 5570.
I0827 17:02:10.663612 134493687799808 run.py:695] Algo quicksort step 2300 current loss 1.943804, current_train_items 3501.
I0827 17:02:10.681866 134493687799808 run.py:695] Algo segments_intersect step 2300 current loss 0.675682, current_train_items 58912.
I0827 17:02:10.693318 134493687799808 run.py:695] Algo strongly_connected_components step 2300 current loss 0.000000, current_train_items 2695.
I0827 17:02:10.711376 134493687799808 run.py:695] Algo task_scheduling step 2300 current loss 0.000000, current_train_items 14016.
I0827 17:02:10.723185 134493687799808 run.py:695] Algo topological_sort step 2300 current loss 2.491369, current_train_items 6404.
I0827 17:02:10.835165 134493687799808 run.py:730] (val) algo mst_kruskal step 2300: {'in_mst': 0.7593423019431988, 'score': 0.7593423019431988, 'examples_seen': 50835, 'step': 2300, 'algorithm': 'mst_kruskal'}
I0827 17:02:10.856410 134493687799808 run.py:730] (val) algo mst_prim step 2300: {'pi': 0.861328125, 'score': 0.861328125, 'examples_seen': 46756, 'step': 2300, 'algorithm': 'mst_prim'}
I0827 17:02:11.598422 134493687799808 run.py:730] (val) algo naive_string_matcher step 2300: {'match': 0.669677734375, 'score': 0.669677734375, 'examples_seen': 31483, 'step': 2300, 'algorithm': 'naive_string_matcher'}
I0827 17:02:11.646424 134493687799808 run.py:730] (val) algo optimal_bst step 2300: {'root': 0.8798659169550173, 'score': 0.8798659169550173, 'examples_seen': 14016, 'step': 2300, 'algorithm': 'optimal_bst'}
I0827 17:02:15.328387 134493687799808 run.py:730] (val) algo quickselect step 2300: {'median': 0.2099609375, 'score': 0.2099609375, 'examples_seen': 5570, 'step': 2300, 'algorithm': 'quickselect'}
I0827 17:02:15.473223 134493687799808 run.py:730] (val) algo quicksort step 2300: {'pred': 0.923828125, 'score': 0.923828125, 'examples_seen': 3501, 'step': 2300, 'algorithm': 'quicksort'}
I0827 17:02:15.959520 134493687799808 run.py:730] (val) algo segments_intersect step 2300: {'intersect': 0.41860465116279066, 'score': 0.41860465116279066, 'examples_seen': 58912, 'step': 2300, 'algorithm': 'segments_intersect'}
I0827 17:02:16.067019 134493687799808 run.py:730] (val) algo strongly_connected_components step 2300: {'scc_id': 0.7861328125, 'score': 0.7861328125, 'examples_seen': 2695, 'step': 2300, 'algorithm': 'strongly_connected_components'}
I0827 17:02:16.089878 134493687799808 run.py:730] (val) algo task_scheduling step 2300: {'selected': 0.9017632241813602, 'score': 0.9017632241813602, 'examples_seen': 14016, 'step': 2300, 'algorithm': 'task_scheduling'}
I0827 17:02:16.144212 134493687799808 run.py:730] (val) algo topological_sort step 2300: {'topo': 0.6708984375, 'topo_head': 1.0, 'score': 0.83544921875, 'examples_seen': 6404, 'step': 2300, 'algorithm': 'topological_sort'}
I0827 17:02:16.144508 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.725, val scores are: mst_kruskal: 0.759, mst_prim: 0.861, naive_string_matcher: 0.670, optimal_bst: 0.880, quickselect: 0.210, quicksort: 0.924, segments_intersect: 0.419, strongly_connected_components: 0.786, task_scheduling: 0.902, topological_sort: 0.835
I0827 17:02:33.431519 134493687799808 run.py:695] Algo mst_kruskal step 2350 current loss 0.117690, current_train_items 51905.
I0827 17:02:33.442448 134493687799808 run.py:695] Algo mst_prim step 2350 current loss 0.573710, current_train_items 47757.
I0827 17:02:33.451167 134493687799808 run.py:695] Algo naive_string_matcher step 2350 current loss 1.332822, current_train_items 32170.
I0827 17:02:33.463756 134493687799808 run.py:695] Algo optimal_bst step 2350 current loss 0.000000, current_train_items 14320.
I0827 17:02:33.541226 134493687799808 run.py:695] Algo quickselect step 2350 current loss 2.054124, current_train_items 5688.
I0827 17:02:33.551759 134493687799808 run.py:695] Algo quicksort step 2350 current loss 4.780659, current_train_items 3578.
I0827 17:02:33.569644 134493687799808 run.py:695] Algo segments_intersect step 2350 current loss 0.689373, current_train_items 60192.
I0827 17:02:33.580096 134493687799808 run.py:695] Algo strongly_connected_components step 2350 current loss 1.758020, current_train_items 2756.
I0827 17:02:33.598768 134493687799808 run.py:695] Algo task_scheduling step 2350 current loss 0.000000, current_train_items 14320.
I0827 17:02:33.610895 134493687799808 run.py:695] Algo topological_sort step 2350 current loss 2.493920, current_train_items 6542.
I0827 17:02:33.727370 134493687799808 run.py:730] (val) algo mst_kruskal step 2350: {'in_mst': 0.7523413111342352, 'score': 0.7523413111342352, 'examples_seen': 51905, 'step': 2350, 'algorithm': 'mst_kruskal'}
I0827 17:02:33.748793 134493687799808 run.py:730] (val) algo mst_prim step 2350: {'pi': 0.8349609375, 'score': 0.8349609375, 'examples_seen': 47757, 'step': 2350, 'algorithm': 'mst_prim'}
I0827 17:02:34.498274 134493687799808 run.py:730] (val) algo naive_string_matcher step 2350: {'match': 0.6640625, 'score': 0.6640625, 'examples_seen': 32170, 'step': 2350, 'algorithm': 'naive_string_matcher'}
I0827 17:02:34.546342 134493687799808 run.py:730] (val) algo optimal_bst step 2350: {'root': 0.8719182525951558, 'score': 0.8719182525951558, 'examples_seen': 14320, 'step': 2350, 'algorithm': 'optimal_bst'}
I0827 17:02:38.232302 134493687799808 run.py:730] (val) algo quickselect step 2350: {'median': 0.217529296875, 'score': 0.217529296875, 'examples_seen': 5688, 'step': 2350, 'algorithm': 'quickselect'}
I0827 17:02:38.378387 134493687799808 run.py:730] (val) algo quicksort step 2350: {'pred': 0.8876953125, 'score': 0.8876953125, 'examples_seen': 3578, 'step': 2350, 'algorithm': 'quicksort'}
I0827 17:02:38.872524 134493687799808 run.py:730] (val) algo segments_intersect step 2350: {'intersect': 0.6809954751131223, 'score': 0.6809954751131223, 'examples_seen': 60192, 'step': 2350, 'algorithm': 'segments_intersect'}
I0827 17:02:38.978465 134493687799808 run.py:730] (val) algo strongly_connected_components step 2350: {'scc_id': 0.740234375, 'score': 0.740234375, 'examples_seen': 2756, 'step': 2350, 'algorithm': 'strongly_connected_components'}
I0827 17:02:38.991961 134493687799808 run.py:730] (val) algo task_scheduling step 2350: {'selected': 0.9267139479905437, 'score': 0.9267139479905437, 'examples_seen': 14320, 'step': 2350, 'algorithm': 'task_scheduling'}
I0827 17:02:39.045761 134493687799808 run.py:730] (val) algo topological_sort step 2350: {'topo': 0.59375, 'topo_head': 0.96875, 'score': 0.78125, 'examples_seen': 6542, 'step': 2350, 'algorithm': 'topological_sort'}
I0827 17:02:39.045922 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.736, val scores are: mst_kruskal: 0.752, mst_prim: 0.835, naive_string_matcher: 0.664, optimal_bst: 0.872, quickselect: 0.218, quicksort: 0.888, segments_intersect: 0.681, strongly_connected_components: 0.740, task_scheduling: 0.927, topological_sort: 0.781
I0827 17:02:56.462482 134493687799808 run.py:695] Algo mst_kruskal step 2400 current loss 0.130089, current_train_items 53013.
I0827 17:02:56.472837 134493687799808 run.py:695] Algo mst_prim step 2400 current loss 0.699095, current_train_items 48797.
I0827 17:02:56.481152 134493687799808 run.py:695] Algo naive_string_matcher step 2400 current loss 1.329148, current_train_items 32889.
I0827 17:02:56.493772 134493687799808 run.py:695] Algo optimal_bst step 2400 current loss 0.000000, current_train_items 14624.
I0827 17:02:56.571093 134493687799808 run.py:695] Algo quickselect step 2400 current loss 0.000000, current_train_items 5805.
I0827 17:02:56.581902 134493687799808 run.py:695] Algo quicksort step 2400 current loss 3.113554, current_train_items 3651.
I0827 17:02:56.599776 134493687799808 run.py:695] Algo segments_intersect step 2400 current loss 0.653959, current_train_items 61472.
I0827 17:02:56.610629 134493687799808 run.py:695] Algo strongly_connected_components step 2400 current loss 1.054906, current_train_items 2814.
I0827 17:02:56.629139 134493687799808 run.py:695] Algo task_scheduling step 2400 current loss 0.000000, current_train_items 14624.
I0827 17:02:56.641196 134493687799808 run.py:695] Algo topological_sort step 2400 current loss 2.179088, current_train_items 6682.
I0827 17:02:56.758752 134493687799808 run.py:730] (val) algo mst_kruskal step 2400: {'in_mst': 0.8139700641482538, 'score': 0.8139700641482538, 'examples_seen': 53013, 'step': 2400, 'algorithm': 'mst_kruskal'}
I0827 17:02:56.779979 134493687799808 run.py:730] (val) algo mst_prim step 2400: {'pi': 0.8603515625, 'score': 0.8603515625, 'examples_seen': 48797, 'step': 2400, 'algorithm': 'mst_prim'}
I0827 17:02:57.529190 134493687799808 run.py:730] (val) algo naive_string_matcher step 2400: {'match': 0.72314453125, 'score': 0.72314453125, 'examples_seen': 32889, 'step': 2400, 'algorithm': 'naive_string_matcher'}
I0827 17:02:57.577616 134493687799808 run.py:730] (val) algo optimal_bst step 2400: {'root': 0.8806769031141869, 'score': 0.8806769031141869, 'examples_seen': 14624, 'step': 2400, 'algorithm': 'optimal_bst'}
I0827 17:03:01.266913 134493687799808 run.py:730] (val) algo quickselect step 2400: {'median': 0.197998046875, 'score': 0.197998046875, 'examples_seen': 5805, 'step': 2400, 'algorithm': 'quickselect'}
I0827 17:03:01.412133 134493687799808 run.py:730] (val) algo quicksort step 2400: {'pred': 0.9013671875, 'score': 0.9013671875, 'examples_seen': 3651, 'step': 2400, 'algorithm': 'quicksort'}
I0827 17:03:01.908218 134493687799808 run.py:730] (val) algo segments_intersect step 2400: {'intersect': 0.526564344746163, 'score': 0.526564344746163, 'examples_seen': 61472, 'step': 2400, 'algorithm': 'segments_intersect'}
I0827 17:03:02.013899 134493687799808 run.py:730] (val) algo strongly_connected_components step 2400: {'scc_id': 0.75, 'score': 0.75, 'examples_seen': 2814, 'step': 2400, 'algorithm': 'strongly_connected_components'}
I0827 17:03:02.027780 134493687799808 run.py:730] (val) algo task_scheduling step 2400: {'selected': 0.928462709284627, 'score': 0.928462709284627, 'examples_seen': 14624, 'step': 2400, 'algorithm': 'task_scheduling'}
I0827 17:03:02.081186 134493687799808 run.py:730] (val) algo topological_sort step 2400: {'topo': 0.603515625, 'topo_head': 1.0, 'score': 0.8017578125, 'examples_seen': 6682, 'step': 2400, 'algorithm': 'topological_sort'}
I0827 17:03:02.081341 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.747, current avg val score is 0.738, val scores are: mst_kruskal: 0.814, mst_prim: 0.860, naive_string_matcher: 0.723, optimal_bst: 0.881, quickselect: 0.198, quicksort: 0.901, segments_intersect: 0.527, strongly_connected_components: 0.750, task_scheduling: 0.928, topological_sort: 0.802
W0827 17:03:03.202395 134493687799808 samplers.py:175] Increasing hint lengh from 27 to 28
I0827 17:03:20.059835 134493687799808 run.py:695] Algo mst_kruskal step 2450 current loss 0.113080, current_train_items 54100.
I0827 17:03:20.070582 134493687799808 run.py:695] Algo mst_prim step 2450 current loss 0.669504, current_train_items 49819.
I0827 17:03:20.079337 134493687799808 run.py:695] Algo naive_string_matcher step 2450 current loss 1.453872, current_train_items 33562.
I0827 17:03:20.091010 134493687799808 run.py:695] Algo optimal_bst step 2450 current loss 0.328800, current_train_items 14944.
I0827 17:03:20.168585 134493687799808 run.py:695] Algo quickselect step 2450 current loss 2.327498, current_train_items 5924.
I0827 17:03:20.178730 134493687799808 run.py:695] Algo quicksort step 2450 current loss 4.530576, current_train_items 3727.
I0827 17:03:20.196779 134493687799808 run.py:695] Algo segments_intersect step 2450 current loss 0.667307, current_train_items 62752.
I0827 17:03:20.207292 134493687799808 run.py:695] Algo strongly_connected_components step 2450 current loss 1.332922, current_train_items 2872.
I0827 17:03:20.225193 134493687799808 run.py:695] Algo task_scheduling step 2450 current loss 0.151851, current_train_items 14944.
I0827 17:03:20.238406 134493687799808 run.py:695] Algo topological_sort step 2450 current loss 0.727734, current_train_items 6822.
I0827 17:03:20.361737 134493687799808 run.py:730] (val) algo mst_kruskal step 2450: {'in_mst': 0.7866108786610878, 'score': 0.7866108786610878, 'examples_seen': 54100, 'step': 2450, 'algorithm': 'mst_kruskal'}
I0827 17:03:20.382606 134493687799808 run.py:730] (val) algo mst_prim step 2450: {'pi': 0.83203125, 'score': 0.83203125, 'examples_seen': 49819, 'step': 2450, 'algorithm': 'mst_prim'}
I0827 17:03:21.127444 134493687799808 run.py:730] (val) algo naive_string_matcher step 2450: {'match': 0.701171875, 'score': 0.701171875, 'examples_seen': 33562, 'step': 2450, 'algorithm': 'naive_string_matcher'}
I0827 17:03:21.175219 134493687799808 run.py:730] (val) algo optimal_bst step 2450: {'root': 0.8740268166089965, 'score': 0.8740268166089965, 'examples_seen': 14944, 'step': 2450, 'algorithm': 'optimal_bst'}
I0827 17:03:24.867927 134493687799808 run.py:730] (val) algo quickselect step 2450: {'median': 0.2080078125, 'score': 0.2080078125, 'examples_seen': 5924, 'step': 2450, 'algorithm': 'quickselect'}
I0827 17:03:25.013114 134493687799808 run.py:730] (val) algo quicksort step 2450: {'pred': 0.8857421875, 'score': 0.8857421875, 'examples_seen': 3727, 'step': 2450, 'algorithm': 'quicksort'}
I0827 17:03:25.514660 134493687799808 run.py:730] (val) algo segments_intersect step 2450: {'intersect': 0.6033434650455927, 'score': 0.6033434650455927, 'examples_seen': 62752, 'step': 2450, 'algorithm': 'segments_intersect'}
I0827 17:03:25.620113 134493687799808 run.py:730] (val) algo strongly_connected_components step 2450: {'scc_id': 0.763671875, 'score': 0.763671875, 'examples_seen': 2872, 'step': 2450, 'algorithm': 'strongly_connected_components'}
I0827 17:03:25.633770 134493687799808 run.py:730] (val) algo task_scheduling step 2450: {'selected': 0.8970588235294118, 'score': 0.8970588235294118, 'examples_seen': 14944, 'step': 2450, 'algorithm': 'task_scheduling'}
I0827 17:03:25.687873 134493687799808 run.py:730] (val) algo topological_sort step 2450: {'topo': 0.6669921875, 'topo_head': 1.0, 'score': 0.83349609375, 'examples_seen': 6822, 'step': 2450, 'algorithm': 'topological_sort'}
I0827 17:03:25.688079 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.739, val scores are: mst_kruskal: 0.787, mst_prim: 0.832, naive_string_matcher: 0.701, optimal_bst: 0.874, quickselect: 0.208, quicksort: 0.886, segments_intersect: 0.603, strongly_connected_components: 0.764, task_scheduling: 0.897, topological_sort: 0.833
I0827 17:03:43.369961 134493687799808 run.py:695] Algo mst_kruskal step 2500 current loss 0.138955, current_train_items 55168.
I0827 17:03:43.381242 134493687799808 run.py:695] Algo mst_prim step 2500 current loss 0.467757, current_train_items 50813.
I0827 17:03:43.390358 134493687799808 run.py:695] Algo naive_string_matcher step 2500 current loss 2.023927, current_train_items 34236.
I0827 17:03:43.402982 134493687799808 run.py:695] Algo optimal_bst step 2500 current loss 0.371587, current_train_items 15248.
I0827 17:03:43.482136 134493687799808 run.py:695] Algo quickselect step 2500 current loss 4.098786, current_train_items 6055.
I0827 17:03:43.493951 134493687799808 run.py:695] Algo quicksort step 2500 current loss 0.000000, current_train_items 3803.
I0827 17:03:43.511910 134493687799808 run.py:695] Algo segments_intersect step 2500 current loss 0.678416, current_train_items 64032.
I0827 17:03:43.523633 134493687799808 run.py:695] Algo strongly_connected_components step 2500 current loss 1.055253, current_train_items 2932.
I0827 17:03:43.541613 134493687799808 run.py:695] Algo task_scheduling step 2500 current loss 0.143644, current_train_items 15248.
I0827 17:03:43.553933 134493687799808 run.py:695] Algo topological_sort step 2500 current loss 1.649557, current_train_items 6959.
I0827 17:03:43.664169 134493687799808 run.py:730] (val) algo mst_kruskal step 2500: {'in_mst': 0.7785833798103736, 'score': 0.7785833798103736, 'examples_seen': 55168, 'step': 2500, 'algorithm': 'mst_kruskal'}
I0827 17:03:43.685362 134493687799808 run.py:730] (val) algo mst_prim step 2500: {'pi': 0.8525390625, 'score': 0.8525390625, 'examples_seen': 50813, 'step': 2500, 'algorithm': 'mst_prim'}
I0827 17:03:44.430164 134493687799808 run.py:730] (val) algo naive_string_matcher step 2500: {'match': 0.6826171875, 'score': 0.6826171875, 'examples_seen': 34236, 'step': 2500, 'algorithm': 'naive_string_matcher'}
I0827 17:03:44.478507 134493687799808 run.py:730] (val) algo optimal_bst step 2500: {'root': 0.8774329584775087, 'score': 0.8774329584775087, 'examples_seen': 15248, 'step': 2500, 'algorithm': 'optimal_bst'}
I0827 17:03:48.174720 134493687799808 run.py:730] (val) algo quickselect step 2500: {'median': 0.1982421875, 'score': 0.1982421875, 'examples_seen': 6055, 'step': 2500, 'algorithm': 'quickselect'}
I0827 17:03:48.320126 134493687799808 run.py:730] (val) algo quicksort step 2500: {'pred': 0.876953125, 'score': 0.876953125, 'examples_seen': 3803, 'step': 2500, 'algorithm': 'quicksort'}
I0827 17:03:48.810936 134493687799808 run.py:730] (val) algo segments_intersect step 2500: {'intersect': 0.6655567887532372, 'score': 0.6655567887532372, 'examples_seen': 64032, 'step': 2500, 'algorithm': 'segments_intersect'}
I0827 17:03:48.916554 134493687799808 run.py:730] (val) algo strongly_connected_components step 2500: {'scc_id': 0.767578125, 'score': 0.767578125, 'examples_seen': 2932, 'step': 2500, 'algorithm': 'strongly_connected_components'}
I0827 17:03:48.930015 134493687799808 run.py:730] (val) algo task_scheduling step 2500: {'selected': 0.9143327841845139, 'score': 0.9143327841845139, 'examples_seen': 15248, 'step': 2500, 'algorithm': 'task_scheduling'}
I0827 17:03:48.983781 134493687799808 run.py:730] (val) algo topological_sort step 2500: {'topo': 0.650390625, 'topo_head': 1.0, 'score': 0.8251953125, 'examples_seen': 6959, 'step': 2500, 'algorithm': 'topological_sort'}
I0827 17:03:48.983968 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.739, current avg val score is 0.744, val scores are: mst_kruskal: 0.779, mst_prim: 0.853, naive_string_matcher: 0.683, optimal_bst: 0.877, quickselect: 0.198, quicksort: 0.877, segments_intersect: 0.666, strongly_connected_components: 0.768, task_scheduling: 0.914, topological_sort: 0.825
I0827 17:04:06.388001 134493687799808 run.py:695] Algo mst_kruskal step 2550 current loss 0.128113, current_train_items 56236.
I0827 17:04:06.397936 134493687799808 run.py:695] Algo mst_prim step 2550 current loss 0.482615, current_train_items 51836.
I0827 17:04:06.407104 134493687799808 run.py:695] Algo naive_string_matcher step 2550 current loss 1.568622, current_train_items 34904.
I0827 17:04:06.419610 134493687799808 run.py:695] Algo optimal_bst step 2550 current loss 0.312076, current_train_items 15552.
I0827 17:04:06.497320 134493687799808 run.py:695] Algo quickselect step 2550 current loss 1.817593, current_train_items 6174.
I0827 17:04:06.507746 134493687799808 run.py:695] Algo quicksort step 2550 current loss 2.957445, current_train_items 3878.
I0827 17:04:06.526069 134493687799808 run.py:695] Algo segments_intersect step 2550 current loss 0.664871, current_train_items 65312.
I0827 17:04:06.537020 134493687799808 run.py:695] Algo strongly_connected_components step 2550 current loss 0.000000, current_train_items 2989.
I0827 17:04:06.555265 134493687799808 run.py:695] Algo task_scheduling step 2550 current loss 0.127630, current_train_items 15552.
I0827 17:04:06.567404 134493687799808 run.py:695] Algo topological_sort step 2550 current loss 0.995939, current_train_items 7096.
I0827 17:04:06.686913 134493687799808 run.py:730] (val) algo mst_kruskal step 2550: {'in_mst': 0.7363737486095663, 'score': 0.7363737486095663, 'examples_seen': 56236, 'step': 2550, 'algorithm': 'mst_kruskal'}
I0827 17:04:06.708172 134493687799808 run.py:730] (val) algo mst_prim step 2550: {'pi': 0.87109375, 'score': 0.87109375, 'examples_seen': 51836, 'step': 2550, 'algorithm': 'mst_prim'}
I0827 17:04:07.455979 134493687799808 run.py:730] (val) algo naive_string_matcher step 2550: {'match': 0.71484375, 'score': 0.71484375, 'examples_seen': 34904, 'step': 2550, 'algorithm': 'naive_string_matcher'}
I0827 17:04:07.504346 134493687799808 run.py:730] (val) algo optimal_bst step 2550: {'root': 0.886461937716263, 'score': 0.886461937716263, 'examples_seen': 15552, 'step': 2550, 'algorithm': 'optimal_bst'}
I0827 17:04:11.193565 134493687799808 run.py:730] (val) algo quickselect step 2550: {'median': 0.19580078125, 'score': 0.19580078125, 'examples_seen': 6174, 'step': 2550, 'algorithm': 'quickselect'}
I0827 17:04:11.338881 134493687799808 run.py:730] (val) algo quicksort step 2550: {'pred': 0.8642578125, 'score': 0.8642578125, 'examples_seen': 3878, 'step': 2550, 'algorithm': 'quicksort'}
I0827 17:04:11.833625 134493687799808 run.py:730] (val) algo segments_intersect step 2550: {'intersect': 0.5554580040971612, 'score': 0.5554580040971612, 'examples_seen': 65312, 'step': 2550, 'algorithm': 'segments_intersect'}
I0827 17:04:11.938610 134493687799808 run.py:730] (val) algo strongly_connected_components step 2550: {'scc_id': 0.70703125, 'score': 0.70703125, 'examples_seen': 2989, 'step': 2550, 'algorithm': 'strongly_connected_components'}
I0827 17:04:11.952242 134493687799808 run.py:730] (val) algo task_scheduling step 2550: {'selected': 0.8913226621735467, 'score': 0.8913226621735467, 'examples_seen': 15552, 'step': 2550, 'algorithm': 'task_scheduling'}
I0827 17:04:12.006231 134493687799808 run.py:730] (val) algo topological_sort step 2550: {'topo': 0.7099609375, 'topo_head': 0.984375, 'score': 0.84716796875, 'examples_seen': 7096, 'step': 2550, 'algorithm': 'topological_sort'}
I0827 17:04:12.006425 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.744, current avg val score is 0.727, val scores are: mst_kruskal: 0.736, mst_prim: 0.871, naive_string_matcher: 0.715, optimal_bst: 0.886, quickselect: 0.196, quicksort: 0.864, segments_intersect: 0.555, strongly_connected_components: 0.707, task_scheduling: 0.891, topological_sort: 0.847
I0827 17:04:29.223882 134493687799808 run.py:695] Algo mst_kruskal step 2600 current loss 0.086284, current_train_items 57390.
I0827 17:04:29.245290 134493687799808 run.py:695] Algo mst_prim step 2600 current loss 0.388494, current_train_items 52855.
I0827 17:04:29.261807 134493687799808 run.py:695] Algo naive_string_matcher step 2600 current loss 1.755644, current_train_items 35603.
I0827 17:04:29.279138 134493687799808 run.py:695] Algo optimal_bst step 2600 current loss 0.337955, current_train_items 15856.
I0827 17:04:29.366375 134493687799808 run.py:695] Algo quickselect step 2600 current loss 1.769200, current_train_items 6293.
I0827 17:04:29.382600 134493687799808 run.py:695] Algo quicksort step 2600 current loss 2.302831, current_train_items 3953.
I0827 17:04:29.405545 134493687799808 run.py:695] Algo segments_intersect step 2600 current loss 0.692361, current_train_items 66592.
I0827 17:04:29.433831 134493687799808 run.py:695] Algo strongly_connected_components step 2600 current loss 0.000000, current_train_items 3045.
I0827 17:04:29.457137 134493687799808 run.py:695] Algo task_scheduling step 2600 current loss 0.138603, current_train_items 15856.
I0827 17:04:29.478290 134493687799808 run.py:695] Algo topological_sort step 2600 current loss 0.000000, current_train_items 7236.
I0827 17:04:29.639641 134493687799808 run.py:730] (val) algo mst_kruskal step 2600: {'in_mst': 0.8420434527304757, 'score': 0.8420434527304757, 'examples_seen': 57390, 'step': 2600, 'algorithm': 'mst_kruskal'}
I0827 17:04:29.666377 134493687799808 run.py:730] (val) algo mst_prim step 2600: {'pi': 0.84765625, 'score': 0.84765625, 'examples_seen': 52855, 'step': 2600, 'algorithm': 'mst_prim'}
I0827 17:04:30.436922 134493687799808 run.py:730] (val) algo naive_string_matcher step 2600: {'match': 0.717041015625, 'score': 0.717041015625, 'examples_seen': 35603, 'step': 2600, 'algorithm': 'naive_string_matcher'}
I0827 17:04:30.484580 134493687799808 run.py:730] (val) algo optimal_bst step 2600: {'root': 0.8659710207612457, 'score': 0.8659710207612457, 'examples_seen': 15856, 'step': 2600, 'algorithm': 'optimal_bst'}
I0827 17:04:34.181185 134493687799808 run.py:730] (val) algo quickselect step 2600: {'median': 0.216064453125, 'score': 0.216064453125, 'examples_seen': 6293, 'step': 2600, 'algorithm': 'quickselect'}
I0827 17:04:34.326860 134493687799808 run.py:730] (val) algo quicksort step 2600: {'pred': 0.9111328125, 'score': 0.9111328125, 'examples_seen': 3953, 'step': 2600, 'algorithm': 'quicksort'}
I0827 17:04:34.856532 134493687799808 run.py:730] (val) algo segments_intersect step 2600: {'intersect': 0.5245408009635651, 'score': 0.5245408009635651, 'examples_seen': 66592, 'step': 2600, 'algorithm': 'segments_intersect'}
I0827 17:04:34.961146 134493687799808 run.py:730] (val) algo strongly_connected_components step 2600: {'scc_id': 0.7451171875, 'score': 0.7451171875, 'examples_seen': 3045, 'step': 2600, 'algorithm': 'strongly_connected_components'}
I0827 17:04:34.974906 134493687799808 run.py:730] (val) algo task_scheduling step 2600: {'selected': 0.8951279933938894, 'score': 0.8951279933938894, 'examples_seen': 15856, 'step': 2600, 'algorithm': 'task_scheduling'}
I0827 17:04:35.028535 134493687799808 run.py:730] (val) algo topological_sort step 2600: {'topo': 0.66015625, 'topo_head': 1.0, 'score': 0.830078125, 'examples_seen': 7236, 'step': 2600, 'algorithm': 'topological_sort'}
I0827 17:04:35.028759 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.744, current avg val score is 0.739, val scores are: mst_kruskal: 0.842, mst_prim: 0.848, naive_string_matcher: 0.717, optimal_bst: 0.866, quickselect: 0.216, quicksort: 0.911, segments_intersect: 0.525, strongly_connected_components: 0.745, task_scheduling: 0.895, topological_sort: 0.830
I0827 17:04:52.582115 134493687799808 run.py:695] Algo mst_kruskal step 2650 current loss 0.069932, current_train_items 58516.
I0827 17:04:52.596997 134493687799808 run.py:695] Algo mst_prim step 2650 current loss 0.501371, current_train_items 53856.
I0827 17:04:52.613553 134493687799808 run.py:695] Algo naive_string_matcher step 2650 current loss 1.074741, current_train_items 36270.
I0827 17:04:52.630774 134493687799808 run.py:695] Algo optimal_bst step 2650 current loss 0.419525, current_train_items 16160.
I0827 17:04:52.716453 134493687799808 run.py:695] Algo quickselect step 2650 current loss 2.613493, current_train_items 6415.
I0827 17:04:52.735971 134493687799808 run.py:695] Algo quicksort step 2650 current loss 3.102019, current_train_items 4029.
I0827 17:04:52.757735 134493687799808 run.py:695] Algo segments_intersect step 2650 current loss 0.651724, current_train_items 67872.
I0827 17:04:52.777448 134493687799808 run.py:695] Algo strongly_connected_components step 2650 current loss 0.000000, current_train_items 3106.
I0827 17:04:52.800071 134493687799808 run.py:695] Algo task_scheduling step 2650 current loss 0.136864, current_train_items 16160.
I0827 17:04:52.819606 134493687799808 run.py:695] Algo topological_sort step 2650 current loss 0.944584, current_train_items 7375.
I0827 17:04:52.983604 134493687799808 run.py:730] (val) algo mst_kruskal step 2650: {'in_mst': 0.7999999999999999, 'score': 0.7999999999999999, 'examples_seen': 58516, 'step': 2650, 'algorithm': 'mst_kruskal'}
I0827 17:04:53.006203 134493687799808 run.py:730] (val) algo mst_prim step 2650: {'pi': 0.865234375, 'score': 0.865234375, 'examples_seen': 53856, 'step': 2650, 'algorithm': 'mst_prim'}
I0827 17:04:53.975500 134493687799808 run.py:730] (val) algo naive_string_matcher step 2650: {'match': 0.70849609375, 'score': 0.70849609375, 'examples_seen': 36270, 'step': 2650, 'algorithm': 'naive_string_matcher'}
I0827 17:04:54.022906 134493687799808 run.py:730] (val) algo optimal_bst step 2650: {'root': 0.8834883217993079, 'score': 0.8834883217993079, 'examples_seen': 16160, 'step': 2650, 'algorithm': 'optimal_bst'}
I0827 17:04:57.713039 134493687799808 run.py:730] (val) algo quickselect step 2650: {'median': 0.194091796875, 'score': 0.194091796875, 'examples_seen': 6415, 'step': 2650, 'algorithm': 'quickselect'}
I0827 17:04:57.858425 134493687799808 run.py:730] (val) algo quicksort step 2650: {'pred': 0.9365234375, 'score': 0.9365234375, 'examples_seen': 4029, 'step': 2650, 'algorithm': 'quicksort'}
I0827 17:04:58.334280 134493687799808 run.py:730] (val) algo segments_intersect step 2650: {'intersect': 0.3732651570489408, 'score': 0.3732651570489408, 'examples_seen': 67872, 'step': 2650, 'algorithm': 'segments_intersect'}
I0827 17:04:58.438991 134493687799808 run.py:730] (val) algo strongly_connected_components step 2650: {'scc_id': 0.7939453125, 'score': 0.7939453125, 'examples_seen': 3106, 'step': 2650, 'algorithm': 'strongly_connected_components'}
I0827 17:04:58.452533 134493687799808 run.py:730] (val) algo task_scheduling step 2650: {'selected': 0.9044481054365734, 'score': 0.9044481054365734, 'examples_seen': 16160, 'step': 2650, 'algorithm': 'task_scheduling'}
I0827 17:04:58.506534 134493687799808 run.py:730] (val) algo topological_sort step 2650: {'topo': 0.6552734375, 'topo_head': 1.0, 'score': 0.82763671875, 'examples_seen': 7375, 'step': 2650, 'algorithm': 'topological_sort'}
I0827 17:04:58.506712 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.744, current avg val score is 0.729, val scores are: mst_kruskal: 0.800, mst_prim: 0.865, naive_string_matcher: 0.708, optimal_bst: 0.883, quickselect: 0.194, quicksort: 0.937, segments_intersect: 0.373, strongly_connected_components: 0.794, task_scheduling: 0.904, topological_sort: 0.828
I0827 17:05:15.106868 134493687799808 run.py:695] Algo mst_kruskal step 2700 current loss 0.077799, current_train_items 59666.
I0827 17:05:15.118628 134493687799808 run.py:695] Algo mst_prim step 2700 current loss 0.485029, current_train_items 54881.
I0827 17:05:15.138628 134493687799808 run.py:695] Algo naive_string_matcher step 2700 current loss 1.451118, current_train_items 36945.
I0827 17:05:15.155866 134493687799808 run.py:695] Algo optimal_bst step 2700 current loss 0.343304, current_train_items 16464.
I0827 17:05:15.232647 134493687799808 run.py:695] Algo quickselect step 2700 current loss 2.186589, current_train_items 6538.
I0827 17:05:15.242789 134493687799808 run.py:695] Algo quicksort step 2700 current loss 16.292557, current_train_items 4104.
I0827 17:05:15.260612 134493687799808 run.py:695] Algo segments_intersect step 2700 current loss 0.623215, current_train_items 69152.
I0827 17:05:15.271057 134493687799808 run.py:695] Algo strongly_connected_components step 2700 current loss 1.751868, current_train_items 3164.
I0827 17:05:15.289302 134493687799808 run.py:695] Algo task_scheduling step 2700 current loss 0.143244, current_train_items 16464.
I0827 17:05:15.300986 134493687799808 run.py:695] Algo topological_sort step 2700 current loss 4.443795, current_train_items 7516.
I0827 17:05:15.416898 134493687799808 run.py:730] (val) algo mst_kruskal step 2700: {'in_mst': 0.7731322823851955, 'score': 0.7731322823851955, 'examples_seen': 59666, 'step': 2700, 'algorithm': 'mst_kruskal'}
I0827 17:05:15.437818 134493687799808 run.py:730] (val) algo mst_prim step 2700: {'pi': 0.83984375, 'score': 0.83984375, 'examples_seen': 54881, 'step': 2700, 'algorithm': 'mst_prim'}
I0827 17:05:16.419482 134493687799808 run.py:730] (val) algo naive_string_matcher step 2700: {'match': 0.74267578125, 'score': 0.74267578125, 'examples_seen': 36945, 'step': 2700, 'algorithm': 'naive_string_matcher'}
I0827 17:05:16.469163 134493687799808 run.py:730] (val) algo optimal_bst step 2700: {'root': 0.8717560553633218, 'score': 0.8717560553633218, 'examples_seen': 16464, 'step': 2700, 'algorithm': 'optimal_bst'}
I0827 17:05:20.170905 134493687799808 run.py:730] (val) algo quickselect step 2700: {'median': 0.20361328125, 'score': 0.20361328125, 'examples_seen': 6538, 'step': 2700, 'algorithm': 'quickselect'}
I0827 17:05:20.317097 134493687799808 run.py:730] (val) algo quicksort step 2700: {'pred': 0.8564453125, 'score': 0.8564453125, 'examples_seen': 4104, 'step': 2700, 'algorithm': 'quicksort'}
I0827 17:05:20.837102 134493687799808 run.py:730] (val) algo segments_intersect step 2700: {'intersect': 0.6667799490229398, 'score': 0.6667799490229398, 'examples_seen': 69152, 'step': 2700, 'algorithm': 'segments_intersect'}
I0827 17:05:20.942503 134493687799808 run.py:730] (val) algo strongly_connected_components step 2700: {'scc_id': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 3164, 'step': 2700, 'algorithm': 'strongly_connected_components'}
I0827 17:05:20.956379 134493687799808 run.py:730] (val) algo task_scheduling step 2700: {'selected': 0.9015459723352318, 'score': 0.9015459723352318, 'examples_seen': 16464, 'step': 2700, 'algorithm': 'task_scheduling'}
I0827 17:05:21.009852 134493687799808 run.py:730] (val) algo topological_sort step 2700: {'topo': 0.6171875, 'topo_head': 0.984375, 'score': 0.80078125, 'examples_seen': 7516, 'step': 2700, 'algorithm': 'topological_sort'}
I0827 17:05:21.010018 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.744, current avg val score is 0.741, val scores are: mst_kruskal: 0.773, mst_prim: 0.840, naive_string_matcher: 0.743, optimal_bst: 0.872, quickselect: 0.204, quicksort: 0.856, segments_intersect: 0.667, strongly_connected_components: 0.753, task_scheduling: 0.902, topological_sort: 0.801
W0827 17:05:22.755692 134493687799808 samplers.py:175] Increasing hint lengh from 58 to 59
I0827 17:05:37.544142 134493687799808 run.py:695] Algo mst_kruskal step 2750 current loss 0.136297, current_train_items 60690.
I0827 17:05:37.555320 134493687799808 run.py:695] Algo mst_prim step 2750 current loss 0.552017, current_train_items 55933.
I0827 17:05:37.563893 134493687799808 run.py:695] Algo naive_string_matcher step 2750 current loss 1.789742, current_train_items 37627.
I0827 17:05:37.575852 134493687799808 run.py:695] Algo optimal_bst step 2750 current loss 0.435400, current_train_items 16768.
I0827 17:05:37.654703 134493687799808 run.py:695] Algo quickselect step 2750 current loss 1.809581, current_train_items 6658.
I0827 17:05:37.665667 134493687799808 run.py:695] Algo quicksort step 2750 current loss 32.230026, current_train_items 4181.
I0827 17:05:37.683966 134493687799808 run.py:695] Algo segments_intersect step 2750 current loss 0.704643, current_train_items 70432.
I0827 17:05:37.695934 134493687799808 run.py:695] Algo strongly_connected_components step 2750 current loss 0.000000, current_train_items 3221.
I0827 17:05:37.713699 134493687799808 run.py:695] Algo task_scheduling step 2750 current loss 0.154073, current_train_items 16768.
I0827 17:05:37.725820 134493687799808 run.py:695] Algo topological_sort step 2750 current loss 1.880502, current_train_items 7655.
I0827 17:05:37.837166 134493687799808 run.py:730] (val) algo mst_kruskal step 2750: {'in_mst': 0.8220706757594544, 'score': 0.8220706757594544, 'examples_seen': 60690, 'step': 2750, 'algorithm': 'mst_kruskal'}
I0827 17:05:37.858050 134493687799808 run.py:730] (val) algo mst_prim step 2750: {'pi': 0.8505859375, 'score': 0.8505859375, 'examples_seen': 55933, 'step': 2750, 'algorithm': 'mst_prim'}
I0827 17:05:38.596375 134493687799808 run.py:730] (val) algo naive_string_matcher step 2750: {'match': 0.683837890625, 'score': 0.683837890625, 'examples_seen': 37627, 'step': 2750, 'algorithm': 'naive_string_matcher'}
I0827 17:05:38.644222 134493687799808 run.py:730] (val) algo optimal_bst step 2750: {'root': 0.8824070069204152, 'score': 0.8824070069204152, 'examples_seen': 16768, 'step': 2750, 'algorithm': 'optimal_bst'}
I0827 17:05:42.335957 134493687799808 run.py:730] (val) algo quickselect step 2750: {'median': 0.18798828125, 'score': 0.18798828125, 'examples_seen': 6658, 'step': 2750, 'algorithm': 'quickselect'}
I0827 17:05:42.480301 134493687799808 run.py:730] (val) algo quicksort step 2750: {'pred': 0.8779296875, 'score': 0.8779296875, 'examples_seen': 4181, 'step': 2750, 'algorithm': 'quicksort'}
I0827 17:05:42.990163 134493687799808 run.py:730] (val) algo segments_intersect step 2750: {'intersect': 0.19220779220779222, 'score': 0.19220779220779222, 'examples_seen': 70432, 'step': 2750, 'algorithm': 'segments_intersect'}
I0827 17:05:43.095146 134493687799808 run.py:730] (val) algo strongly_connected_components step 2750: {'scc_id': 0.7919921875, 'score': 0.7919921875, 'examples_seen': 3221, 'step': 2750, 'algorithm': 'strongly_connected_components'}
I0827 17:05:43.108778 134493687799808 run.py:730] (val) algo task_scheduling step 2750: {'selected': 0.9314641744548287, 'score': 0.9314641744548287, 'examples_seen': 16768, 'step': 2750, 'algorithm': 'task_scheduling'}
I0827 17:05:43.162710 134493687799808 run.py:730] (val) algo topological_sort step 2750: {'topo': 0.64453125, 'topo_head': 1.0, 'score': 0.822265625, 'examples_seen': 7655, 'step': 2750, 'algorithm': 'topological_sort'}
I0827 17:05:43.162884 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.704, val scores are: mst_kruskal: 0.822, mst_prim: 0.851, naive_string_matcher: 0.684, optimal_bst: 0.882, quickselect: 0.188, quicksort: 0.878, segments_intersect: 0.192, strongly_connected_components: 0.792, task_scheduling: 0.931, topological_sort: 0.822
I0827 17:06:00.334193 134493687799808 run.py:695] Algo mst_kruskal step 2800 current loss 0.093727, current_train_items 61800.
I0827 17:06:00.344364 134493687799808 run.py:695] Algo mst_prim step 2800 current loss 0.420238, current_train_items 56958.
I0827 17:06:00.353312 134493687799808 run.py:695] Algo naive_string_matcher step 2800 current loss 1.590035, current_train_items 38332.
I0827 17:06:00.365409 134493687799808 run.py:695] Algo optimal_bst step 2800 current loss 0.763677, current_train_items 17072.
I0827 17:06:00.442174 134493687799808 run.py:695] Algo quickselect step 2800 current loss 2.640182, current_train_items 6786.
I0827 17:06:00.452441 134493687799808 run.py:695] Algo quicksort step 2800 current loss 0.000000, current_train_items 4255.
I0827 17:06:00.469889 134493687799808 run.py:695] Algo segments_intersect step 2800 current loss 0.628117, current_train_items 71712.
I0827 17:06:00.480234 134493687799808 run.py:695] Algo strongly_connected_components step 2800 current loss 0.000000, current_train_items 3281.
I0827 17:06:00.497863 134493687799808 run.py:695] Algo task_scheduling step 2800 current loss 2.375266, current_train_items 17072.
I0827 17:06:00.509235 134493687799808 run.py:695] Algo topological_sort step 2800 current loss 0.879460, current_train_items 7795.
I0827 17:06:00.621210 134493687799808 run.py:730] (val) algo mst_kruskal step 2800: {'in_mst': 0.8201892744479495, 'score': 0.8201892744479495, 'examples_seen': 61800, 'step': 2800, 'algorithm': 'mst_kruskal'}
I0827 17:06:00.642455 134493687799808 run.py:730] (val) algo mst_prim step 2800: {'pi': 0.8515625, 'score': 0.8515625, 'examples_seen': 56958, 'step': 2800, 'algorithm': 'mst_prim'}
I0827 17:06:01.386116 134493687799808 run.py:730] (val) algo naive_string_matcher step 2800: {'match': 0.71875, 'score': 0.71875, 'examples_seen': 38332, 'step': 2800, 'algorithm': 'naive_string_matcher'}
I0827 17:06:01.434191 134493687799808 run.py:730] (val) algo optimal_bst step 2800: {'root': 0.8848940311418685, 'score': 0.8848940311418685, 'examples_seen': 17072, 'step': 2800, 'algorithm': 'optimal_bst'}
I0827 17:06:05.189203 134493687799808 run.py:730] (val) algo quickselect step 2800: {'median': 0.1953125, 'score': 0.1953125, 'examples_seen': 6786, 'step': 2800, 'algorithm': 'quickselect'}
I0827 17:06:05.341784 134493687799808 run.py:730] (val) algo quicksort step 2800: {'pred': 0.875, 'score': 0.875, 'examples_seen': 4255, 'step': 2800, 'algorithm': 'quicksort'}
I0827 17:06:05.892310 134493687799808 run.py:730] (val) algo segments_intersect step 2800: {'intersect': 0.6681911731077063, 'score': 0.6681911731077063, 'examples_seen': 71712, 'step': 2800, 'algorithm': 'segments_intersect'}
I0827 17:06:05.997810 134493687799808 run.py:730] (val) algo strongly_connected_components step 2800: {'scc_id': 0.7060546875, 'score': 0.7060546875, 'examples_seen': 3281, 'step': 2800, 'algorithm': 'strongly_connected_components'}
I0827 17:06:06.012247 134493687799808 run.py:730] (val) algo task_scheduling step 2800: {'selected': 0.8899917287014062, 'score': 0.8899917287014062, 'examples_seen': 17072, 'step': 2800, 'algorithm': 'task_scheduling'}
I0827 17:06:06.066374 134493687799808 run.py:730] (val) algo topological_sort step 2800: {'topo': 0.6337890625, 'topo_head': 1.0, 'score': 0.81689453125, 'examples_seen': 7795, 'step': 2800, 'algorithm': 'topological_sort'}
I0827 17:06:06.066580 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.704, current avg val score is 0.743, val scores are: mst_kruskal: 0.820, mst_prim: 0.852, naive_string_matcher: 0.719, optimal_bst: 0.885, quickselect: 0.195, quicksort: 0.875, segments_intersect: 0.668, strongly_connected_components: 0.706, task_scheduling: 0.890, topological_sort: 0.817
I0827 17:06:22.597509 134493687799808 run.py:695] Algo mst_kruskal step 2850 current loss 0.115035, current_train_items 62920.
I0827 17:06:22.608215 134493687799808 run.py:695] Algo mst_prim step 2850 current loss 0.363247, current_train_items 57996.
I0827 17:06:22.616968 134493687799808 run.py:695] Algo naive_string_matcher step 2850 current loss 1.087794, current_train_items 39020.
I0827 17:06:22.628819 134493687799808 run.py:695] Algo optimal_bst step 2850 current loss 0.000000, current_train_items 17376.
I0827 17:06:22.707990 134493687799808 run.py:695] Algo quickselect step 2850 current loss 2.469283, current_train_items 6902.
I0827 17:06:22.718043 134493687799808 run.py:695] Algo quicksort step 2850 current loss 0.000000, current_train_items 4334.
I0827 17:06:22.735695 134493687799808 run.py:695] Algo segments_intersect step 2850 current loss 0.649563, current_train_items 72992.
I0827 17:06:22.745339 134493687799808 run.py:695] Algo strongly_connected_components step 2850 current loss 1.672073, current_train_items 3339.
I0827 17:06:22.763061 134493687799808 run.py:695] Algo task_scheduling step 2850 current loss 0.000000, current_train_items 17376.
I0827 17:06:22.774955 134493687799808 run.py:695] Algo topological_sort step 2850 current loss 2.199558, current_train_items 7935.
I0827 17:06:22.889772 134493687799808 run.py:730] (val) algo mst_kruskal step 2850: {'in_mst': 0.8130999435347261, 'score': 0.8130999435347261, 'examples_seen': 62920, 'step': 2850, 'algorithm': 'mst_kruskal'}
I0827 17:06:22.910821 134493687799808 run.py:730] (val) algo mst_prim step 2850: {'pi': 0.82421875, 'score': 0.82421875, 'examples_seen': 57996, 'step': 2850, 'algorithm': 'mst_prim'}
I0827 17:06:23.653868 134493687799808 run.py:730] (val) algo naive_string_matcher step 2850: {'match': 0.7294921875, 'score': 0.7294921875, 'examples_seen': 39020, 'step': 2850, 'algorithm': 'naive_string_matcher'}
I0827 17:06:23.702199 134493687799808 run.py:730] (val) algo optimal_bst step 2850: {'root': 0.8843533737024222, 'score': 0.8843533737024222, 'examples_seen': 17376, 'step': 2850, 'algorithm': 'optimal_bst'}
I0827 17:06:27.405191 134493687799808 run.py:730] (val) algo quickselect step 2850: {'median': 0.216552734375, 'score': 0.216552734375, 'examples_seen': 6902, 'step': 2850, 'algorithm': 'quickselect'}
I0827 17:06:27.557553 134493687799808 run.py:730] (val) algo quicksort step 2850: {'pred': 0.923828125, 'score': 0.923828125, 'examples_seen': 4334, 'step': 2850, 'algorithm': 'quicksort'}
I0827 17:06:28.486525 134493687799808 run.py:730] (val) algo segments_intersect step 2850: {'intersect': 0.6436145689257723, 'score': 0.6436145689257723, 'examples_seen': 72992, 'step': 2850, 'algorithm': 'segments_intersect'}
I0827 17:06:28.594861 134493687799808 run.py:730] (val) algo strongly_connected_components step 2850: {'scc_id': 0.77734375, 'score': 0.77734375, 'examples_seen': 3339, 'step': 2850, 'algorithm': 'strongly_connected_components'}
I0827 17:06:28.614820 134493687799808 run.py:730] (val) algo task_scheduling step 2850: {'selected': 0.8641765704584041, 'score': 0.8641765704584041, 'examples_seen': 17376, 'step': 2850, 'algorithm': 'task_scheduling'}
I0827 17:06:28.670072 134493687799808 run.py:730] (val) algo topological_sort step 2850: {'topo': 0.60546875, 'topo_head': 1.0, 'score': 0.802734375, 'examples_seen': 7935, 'step': 2850, 'algorithm': 'topological_sort'}
I0827 17:06:28.670291 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.743, current avg val score is 0.748, val scores are: mst_kruskal: 0.813, mst_prim: 0.824, naive_string_matcher: 0.729, optimal_bst: 0.884, quickselect: 0.217, quicksort: 0.924, segments_intersect: 0.644, strongly_connected_components: 0.777, task_scheduling: 0.864, topological_sort: 0.803
I0827 17:06:45.778248 134493687799808 run.py:695] Algo mst_kruskal step 2900 current loss 0.108752, current_train_items 63999.
I0827 17:06:45.788513 134493687799808 run.py:695] Algo mst_prim step 2900 current loss 0.285845, current_train_items 58989.
I0827 17:06:45.797135 134493687799808 run.py:695] Algo naive_string_matcher step 2900 current loss 1.583909, current_train_items 39680.
I0827 17:06:45.809332 134493687799808 run.py:695] Algo optimal_bst step 2900 current loss 0.000000, current_train_items 17680.
I0827 17:06:45.885901 134493687799808 run.py:695] Algo quickselect step 2900 current loss 2.700737, current_train_items 7018.
I0827 17:06:45.896075 134493687799808 run.py:695] Algo quicksort step 2900 current loss 18.757233, current_train_items 4409.
I0827 17:06:45.914445 134493687799808 run.py:695] Algo segments_intersect step 2900 current loss 0.691533, current_train_items 74272.
I0827 17:06:45.925055 134493687799808 run.py:695] Algo strongly_connected_components step 2900 current loss 0.000000, current_train_items 3396.
I0827 17:06:45.943854 134493687799808 run.py:695] Algo task_scheduling step 2900 current loss 0.000000, current_train_items 17680.
I0827 17:06:45.955354 134493687799808 run.py:695] Algo topological_sort step 2900 current loss 0.000000, current_train_items 8073.
I0827 17:06:46.070055 134493687799808 run.py:730] (val) algo mst_kruskal step 2900: {'in_mst': 0.7766776677667767, 'score': 0.7766776677667767, 'examples_seen': 63999, 'step': 2900, 'algorithm': 'mst_kruskal'}
I0827 17:06:46.091489 134493687799808 run.py:730] (val) algo mst_prim step 2900: {'pi': 0.7890625, 'score': 0.7890625, 'examples_seen': 58989, 'step': 2900, 'algorithm': 'mst_prim'}
I0827 17:06:46.835797 134493687799808 run.py:730] (val) algo naive_string_matcher step 2900: {'match': 0.7392578125, 'score': 0.7392578125, 'examples_seen': 39680, 'step': 2900, 'algorithm': 'naive_string_matcher'}
I0827 17:06:46.884104 134493687799808 run.py:730] (val) algo optimal_bst step 2900: {'root': 0.8903546712802768, 'score': 0.8903546712802768, 'examples_seen': 17680, 'step': 2900, 'algorithm': 'optimal_bst'}
I0827 17:06:50.579064 134493687799808 run.py:730] (val) algo quickselect step 2900: {'median': 0.20556640625, 'score': 0.20556640625, 'examples_seen': 7018, 'step': 2900, 'algorithm': 'quickselect'}
I0827 17:06:50.724253 134493687799808 run.py:730] (val) algo quicksort step 2900: {'pred': 0.8466796875, 'score': 0.8466796875, 'examples_seen': 4409, 'step': 2900, 'algorithm': 'quicksort'}
I0827 17:06:51.226672 134493687799808 run.py:730] (val) algo segments_intersect step 2900: {'intersect': 0.35654998195597265, 'score': 0.35654998195597265, 'examples_seen': 74272, 'step': 2900, 'algorithm': 'segments_intersect'}
I0827 17:06:51.332292 134493687799808 run.py:730] (val) algo strongly_connected_components step 2900: {'scc_id': 0.74609375, 'score': 0.74609375, 'examples_seen': 3396, 'step': 2900, 'algorithm': 'strongly_connected_components'}
I0827 17:06:51.345820 134493687799808 run.py:730] (val) algo task_scheduling step 2900: {'selected': 0.8781725888324873, 'score': 0.8781725888324873, 'examples_seen': 17680, 'step': 2900, 'algorithm': 'task_scheduling'}
I0827 17:06:51.400576 134493687799808 run.py:730] (val) algo topological_sort step 2900: {'topo': 0.677734375, 'topo_head': 1.0, 'score': 0.8388671875, 'examples_seen': 8073, 'step': 2900, 'algorithm': 'topological_sort'}
I0827 17:06:51.400832 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.748, current avg val score is 0.707, val scores are: mst_kruskal: 0.777, mst_prim: 0.789, naive_string_matcher: 0.739, optimal_bst: 0.890, quickselect: 0.206, quicksort: 0.847, segments_intersect: 0.357, strongly_connected_components: 0.746, task_scheduling: 0.878, topological_sort: 0.839
I0827 17:07:09.129640 134493687799808 run.py:695] Algo mst_kruskal step 2950 current loss 0.193200, current_train_items 65116.
I0827 17:07:09.140141 134493687799808 run.py:695] Algo mst_prim step 2950 current loss 0.521167, current_train_items 59990.
I0827 17:07:09.148749 134493687799808 run.py:695] Algo naive_string_matcher step 2950 current loss 0.966765, current_train_items 40361.
I0827 17:07:09.161187 134493687799808 run.py:695] Algo optimal_bst step 2950 current loss 0.000000, current_train_items 17984.
I0827 17:07:09.238635 134493687799808 run.py:695] Algo quickselect step 2950 current loss 2.869525, current_train_items 7142.
I0827 17:07:09.249153 134493687799808 run.py:695] Algo quicksort step 2950 current loss 3.066411, current_train_items 4487.
I0827 17:07:09.267171 134493687799808 run.py:695] Algo segments_intersect step 2950 current loss 0.647754, current_train_items 75552.
I0827 17:07:09.277783 134493687799808 run.py:695] Algo strongly_connected_components step 2950 current loss 0.273129, current_train_items 3458.
I0827 17:07:09.296177 134493687799808 run.py:695] Algo task_scheduling step 2950 current loss 0.000000, current_train_items 17984.
I0827 17:07:09.308243 134493687799808 run.py:695] Algo topological_sort step 2950 current loss 3.118968, current_train_items 8215.
I0827 17:07:09.426900 134493687799808 run.py:730] (val) algo mst_kruskal step 2950: {'in_mst': 0.789, 'score': 0.789, 'examples_seen': 65116, 'step': 2950, 'algorithm': 'mst_kruskal'}
I0827 17:07:09.448298 134493687799808 run.py:730] (val) algo mst_prim step 2950: {'pi': 0.8671875, 'score': 0.8671875, 'examples_seen': 59990, 'step': 2950, 'algorithm': 'mst_prim'}
I0827 17:07:10.193758 134493687799808 run.py:730] (val) algo naive_string_matcher step 2950: {'match': 0.74365234375, 'score': 0.74365234375, 'examples_seen': 40361, 'step': 2950, 'algorithm': 'naive_string_matcher'}
I0827 17:07:10.241992 134493687799808 run.py:730] (val) algo optimal_bst step 2950: {'root': 0.8991133217993079, 'score': 0.8991133217993079, 'examples_seen': 17984, 'step': 2950, 'algorithm': 'optimal_bst'}
I0827 17:07:13.927981 134493687799808 run.py:730] (val) algo quickselect step 2950: {'median': 0.143798828125, 'score': 0.143798828125, 'examples_seen': 7142, 'step': 2950, 'algorithm': 'quickselect'}
I0827 17:07:14.072959 134493687799808 run.py:730] (val) algo quicksort step 2950: {'pred': 0.9296875, 'score': 0.9296875, 'examples_seen': 4487, 'step': 2950, 'algorithm': 'quicksort'}
I0827 17:07:14.572824 134493687799808 run.py:730] (val) algo segments_intersect step 2950: {'intersect': 0.37229437229437234, 'score': 0.37229437229437234, 'examples_seen': 75552, 'step': 2950, 'algorithm': 'segments_intersect'}
I0827 17:07:14.677401 134493687799808 run.py:730] (val) algo strongly_connected_components step 2950: {'scc_id': 0.767578125, 'score': 0.767578125, 'examples_seen': 3458, 'step': 2950, 'algorithm': 'strongly_connected_components'}
I0827 17:07:14.690867 134493687799808 run.py:730] (val) algo task_scheduling step 2950: {'selected': 0.8907148726376335, 'score': 0.8907148726376335, 'examples_seen': 17984, 'step': 2950, 'algorithm': 'task_scheduling'}
I0827 17:07:14.744935 134493687799808 run.py:730] (val) algo topological_sort step 2950: {'topo': 0.6865234375, 'topo_head': 1.0, 'score': 0.84326171875, 'examples_seen': 8215, 'step': 2950, 'algorithm': 'topological_sort'}
I0827 17:07:14.745109 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.748, current avg val score is 0.725, val scores are: mst_kruskal: 0.789, mst_prim: 0.867, naive_string_matcher: 0.744, optimal_bst: 0.899, quickselect: 0.144, quicksort: 0.930, segments_intersect: 0.372, strongly_connected_components: 0.768, task_scheduling: 0.891, topological_sort: 0.843
I0827 17:07:32.712149 134493687799808 run.py:695] Algo mst_kruskal step 3000 current loss 0.118335, current_train_items 66210.
I0827 17:07:32.723330 134493687799808 run.py:695] Algo mst_prim step 3000 current loss 0.722041, current_train_items 61016.
I0827 17:07:32.732668 134493687799808 run.py:695] Algo naive_string_matcher step 3000 current loss 1.271194, current_train_items 41069.
I0827 17:07:32.745194 134493687799808 run.py:695] Algo optimal_bst step 3000 current loss 0.000000, current_train_items 18288.
I0827 17:07:32.822043 134493687799808 run.py:695] Algo quickselect step 3000 current loss 2.537127, current_train_items 7262.
I0827 17:07:32.833261 134493687799808 run.py:695] Algo quicksort step 3000 current loss 0.000000, current_train_items 4563.
I0827 17:07:32.850957 134493687799808 run.py:695] Algo segments_intersect step 3000 current loss 0.714472, current_train_items 76832.
I0827 17:07:32.862673 134493687799808 run.py:695] Algo strongly_connected_components step 3000 current loss 1.459833, current_train_items 3513.
I0827 17:07:32.880414 134493687799808 run.py:695] Algo task_scheduling step 3000 current loss 0.000000, current_train_items 18288.
I0827 17:07:32.892426 134493687799808 run.py:695] Algo topological_sort step 3000 current loss 1.536726, current_train_items 8352.
I0827 17:07:33.013986 134493687799808 run.py:730] (val) algo mst_kruskal step 3000: {'in_mst': 0.7569397427217331, 'score': 0.7569397427217331, 'examples_seen': 66210, 'step': 3000, 'algorithm': 'mst_kruskal'}
I0827 17:07:33.035653 134493687799808 run.py:730] (val) algo mst_prim step 3000: {'pi': 0.8564453125, 'score': 0.8564453125, 'examples_seen': 61016, 'step': 3000, 'algorithm': 'mst_prim'}
I0827 17:07:33.781702 134493687799808 run.py:730] (val) algo naive_string_matcher step 3000: {'match': 0.75439453125, 'score': 0.75439453125, 'examples_seen': 41069, 'step': 3000, 'algorithm': 'naive_string_matcher'}
I0827 17:07:33.829759 134493687799808 run.py:730] (val) algo optimal_bst step 3000: {'root': 0.893598615916955, 'score': 0.893598615916955, 'examples_seen': 18288, 'step': 3000, 'algorithm': 'optimal_bst'}
I0827 17:07:37.514726 134493687799808 run.py:730] (val) algo quickselect step 3000: {'median': 0.209716796875, 'score': 0.209716796875, 'examples_seen': 7262, 'step': 3000, 'algorithm': 'quickselect'}
I0827 17:07:37.660090 134493687799808 run.py:730] (val) algo quicksort step 3000: {'pred': 0.8037109375, 'score': 0.8037109375, 'examples_seen': 4563, 'step': 3000, 'algorithm': 'quicksort'}
I0827 17:07:38.161830 134493687799808 run.py:730] (val) algo segments_intersect step 3000: {'intersect': 0.5963254593175854, 'score': 0.5963254593175854, 'examples_seen': 76832, 'step': 3000, 'algorithm': 'segments_intersect'}
I0827 17:07:38.267379 134493687799808 run.py:730] (val) algo strongly_connected_components step 3000: {'scc_id': 0.7822265625, 'score': 0.7822265625, 'examples_seen': 3513, 'step': 3000, 'algorithm': 'strongly_connected_components'}
I0827 17:07:38.283276 134493687799808 run.py:730] (val) algo task_scheduling step 3000: {'selected': 0.8789161727349704, 'score': 0.8789161727349704, 'examples_seen': 18288, 'step': 3000, 'algorithm': 'task_scheduling'}
I0827 17:07:38.338496 134493687799808 run.py:730] (val) algo topological_sort step 3000: {'topo': 0.6513671875, 'topo_head': 1.0, 'score': 0.82568359375, 'examples_seen': 8352, 'step': 3000, 'algorithm': 'topological_sort'}
I0827 17:07:38.338707 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.748, current avg val score is 0.736, val scores are: mst_kruskal: 0.757, mst_prim: 0.856, naive_string_matcher: 0.754, optimal_bst: 0.894, quickselect: 0.210, quicksort: 0.804, segments_intersect: 0.596, strongly_connected_components: 0.782, task_scheduling: 0.879, topological_sort: 0.826
I0827 17:07:56.012333 134493687799808 run.py:695] Algo mst_kruskal step 3050 current loss 0.072069, current_train_items 67298.
I0827 17:07:56.022149 134493687799808 run.py:695] Algo mst_prim step 3050 current loss 0.404571, current_train_items 62025.
I0827 17:07:56.030729 134493687799808 run.py:695] Algo naive_string_matcher step 3050 current loss 1.429685, current_train_items 41767.
I0827 17:07:56.042590 134493687799808 run.py:695] Algo optimal_bst step 3050 current loss 0.000000, current_train_items 18592.
I0827 17:07:56.120120 134493687799808 run.py:695] Algo quickselect step 3050 current loss 2.625240, current_train_items 7380.
I0827 17:07:56.131524 134493687799808 run.py:695] Algo quicksort step 3050 current loss 7.132957, current_train_items 4639.
I0827 17:07:56.148221 134493687799808 run.py:695] Algo segments_intersect step 3050 current loss 0.678138, current_train_items 78112.
I0827 17:07:56.158577 134493687799808 run.py:695] Algo strongly_connected_components step 3050 current loss 0.000000, current_train_items 3574.
I0827 17:07:56.184343 134493687799808 run.py:695] Algo task_scheduling step 3050 current loss 0.000000, current_train_items 18592.
I0827 17:07:56.195857 134493687799808 run.py:695] Algo topological_sort step 3050 current loss 0.000000, current_train_items 8490.
I0827 17:07:56.308700 134493687799808 run.py:730] (val) algo mst_kruskal step 3050: {'in_mst': 0.8240687679083094, 'score': 0.8240687679083094, 'examples_seen': 67298, 'step': 3050, 'algorithm': 'mst_kruskal'}
I0827 17:07:56.330055 134493687799808 run.py:730] (val) algo mst_prim step 3050: {'pi': 0.8349609375, 'score': 0.8349609375, 'examples_seen': 62025, 'step': 3050, 'algorithm': 'mst_prim'}
I0827 17:07:57.073075 134493687799808 run.py:730] (val) algo naive_string_matcher step 3050: {'match': 0.726806640625, 'score': 0.726806640625, 'examples_seen': 41767, 'step': 3050, 'algorithm': 'naive_string_matcher'}
I0827 17:07:57.121177 134493687799808 run.py:730] (val) algo optimal_bst step 3050: {'root': 0.8943014705882353, 'score': 0.8943014705882353, 'examples_seen': 18592, 'step': 3050, 'algorithm': 'optimal_bst'}
I0827 17:08:00.813375 134493687799808 run.py:730] (val) algo quickselect step 3050: {'median': 0.20166015625, 'score': 0.20166015625, 'examples_seen': 7380, 'step': 3050, 'algorithm': 'quickselect'}
I0827 17:08:00.959215 134493687799808 run.py:730] (val) algo quicksort step 3050: {'pred': 0.89453125, 'score': 0.89453125, 'examples_seen': 4639, 'step': 3050, 'algorithm': 'quicksort'}
I0827 17:08:01.465859 134493687799808 run.py:730] (val) algo segments_intersect step 3050: {'intersect': 0.6744437243465112, 'score': 0.6744437243465112, 'examples_seen': 78112, 'step': 3050, 'algorithm': 'segments_intersect'}
I0827 17:08:01.571271 134493687799808 run.py:730] (val) algo strongly_connected_components step 3050: {'scc_id': 0.7451171875, 'score': 0.7451171875, 'examples_seen': 3574, 'step': 3050, 'algorithm': 'strongly_connected_components'}
I0827 17:08:01.584777 134493687799808 run.py:730] (val) algo task_scheduling step 3050: {'selected': 0.8828980623420387, 'score': 0.8828980623420387, 'examples_seen': 18592, 'step': 3050, 'algorithm': 'task_scheduling'}
I0827 17:08:01.638746 134493687799808 run.py:730] (val) algo topological_sort step 3050: {'topo': 0.6533203125, 'topo_head': 1.0, 'score': 0.82666015625, 'examples_seen': 8490, 'step': 3050, 'algorithm': 'topological_sort'}
I0827 17:08:01.638928 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.748, current avg val score is 0.751, val scores are: mst_kruskal: 0.824, mst_prim: 0.835, naive_string_matcher: 0.727, optimal_bst: 0.894, quickselect: 0.202, quicksort: 0.895, segments_intersect: 0.674, strongly_connected_components: 0.745, task_scheduling: 0.883, topological_sort: 0.827
W0827 17:08:13.790939 134493687799808 samplers.py:175] Increasing hint lengh from 72 to 81
I0827 17:08:19.235432 134493687799808 run.py:695] Algo mst_kruskal step 3100 current loss 0.124018, current_train_items 68424.
I0827 17:08:19.245274 134493687799808 run.py:695] Algo mst_prim step 3100 current loss 0.441934, current_train_items 63048.
I0827 17:08:19.254462 134493687799808 run.py:695] Algo naive_string_matcher step 3100 current loss 1.189547, current_train_items 42457.
I0827 17:08:19.265903 134493687799808 run.py:695] Algo optimal_bst step 3100 current loss 0.000000, current_train_items 18896.
I0827 17:08:19.342383 134493687799808 run.py:695] Algo quickselect step 3100 current loss 2.011153, current_train_items 7503.
I0827 17:08:19.352658 134493687799808 run.py:695] Algo quicksort step 3100 current loss 14.575716, current_train_items 4715.
I0827 17:08:19.370266 134493687799808 run.py:695] Algo segments_intersect step 3100 current loss 0.658999, current_train_items 79392.
I0827 17:08:19.381241 134493687799808 run.py:695] Algo strongly_connected_components step 3100 current loss 0.793145, current_train_items 3633.
I0827 17:08:19.400002 134493687799808 run.py:695] Algo task_scheduling step 3100 current loss 0.000000, current_train_items 18896.
I0827 17:08:19.411921 134493687799808 run.py:695] Algo topological_sort step 3100 current loss 5.076110, current_train_items 8632.
I0827 17:08:19.529829 134493687799808 run.py:730] (val) algo mst_kruskal step 3100: {'in_mst': 0.7684210526315789, 'score': 0.7684210526315789, 'examples_seen': 68424, 'step': 3100, 'algorithm': 'mst_kruskal'}
I0827 17:08:19.551401 134493687799808 run.py:730] (val) algo mst_prim step 3100: {'pi': 0.837890625, 'score': 0.837890625, 'examples_seen': 63048, 'step': 3100, 'algorithm': 'mst_prim'}
I0827 17:08:20.296794 134493687799808 run.py:730] (val) algo naive_string_matcher step 3100: {'match': 0.736083984375, 'score': 0.736083984375, 'examples_seen': 42457, 'step': 3100, 'algorithm': 'naive_string_matcher'}
I0827 17:08:20.345294 134493687799808 run.py:730] (val) algo optimal_bst step 3100: {'root': 0.8957612456747405, 'score': 0.8957612456747405, 'examples_seen': 18896, 'step': 3100, 'algorithm': 'optimal_bst'}
I0827 17:08:24.027182 134493687799808 run.py:730] (val) algo quickselect step 3100: {'median': 0.1962890625, 'score': 0.1962890625, 'examples_seen': 7503, 'step': 3100, 'algorithm': 'quickselect'}
I0827 17:08:24.171957 134493687799808 run.py:730] (val) algo quicksort step 3100: {'pred': 0.91015625, 'score': 0.91015625, 'examples_seen': 4715, 'step': 3100, 'algorithm': 'quicksort'}
I0827 17:08:24.664896 134493687799808 run.py:730] (val) algo segments_intersect step 3100: {'intersect': 0.4899006091696056, 'score': 0.4899006091696056, 'examples_seen': 79392, 'step': 3100, 'algorithm': 'segments_intersect'}
I0827 17:08:24.769991 134493687799808 run.py:730] (val) algo strongly_connected_components step 3100: {'scc_id': 0.7177734375, 'score': 0.7177734375, 'examples_seen': 3633, 'step': 3100, 'algorithm': 'strongly_connected_components'}
I0827 17:08:24.783671 134493687799808 run.py:730] (val) algo task_scheduling step 3100: {'selected': 0.926984126984127, 'score': 0.926984126984127, 'examples_seen': 18896, 'step': 3100, 'algorithm': 'task_scheduling'}
I0827 17:08:24.837819 134493687799808 run.py:730] (val) algo topological_sort step 3100: {'topo': 0.6357421875, 'topo_head': 1.0, 'score': 0.81787109375, 'examples_seen': 8632, 'step': 3100, 'algorithm': 'topological_sort'}
I0827 17:08:24.837976 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.730, val scores are: mst_kruskal: 0.768, mst_prim: 0.838, naive_string_matcher: 0.736, optimal_bst: 0.896, quickselect: 0.196, quicksort: 0.910, segments_intersect: 0.490, strongly_connected_components: 0.718, task_scheduling: 0.927, topological_sort: 0.818
I0827 17:08:42.613287 134493687799808 run.py:695] Algo mst_kruskal step 3150 current loss 0.104738, current_train_items 69499.
I0827 17:08:42.623280 134493687799808 run.py:695] Algo mst_prim step 3150 current loss 0.314241, current_train_items 64086.
I0827 17:08:42.632019 134493687799808 run.py:695] Algo naive_string_matcher step 3150 current loss 1.106254, current_train_items 43112.
I0827 17:08:42.644416 134493687799808 run.py:695] Algo optimal_bst step 3150 current loss 0.000000, current_train_items 19200.
I0827 17:08:42.723651 134493687799808 run.py:695] Algo quickselect step 3150 current loss 0.000000, current_train_items 7621.
I0827 17:08:42.734527 134493687799808 run.py:695] Algo quicksort step 3150 current loss 8.581706, current_train_items 4791.
I0827 17:08:42.752403 134493687799808 run.py:695] Algo segments_intersect step 3150 current loss 0.684807, current_train_items 80672.
I0827 17:08:42.763499 134493687799808 run.py:695] Algo strongly_connected_components step 3150 current loss 0.000000, current_train_items 3688.
I0827 17:08:42.781128 134493687799808 run.py:695] Algo task_scheduling step 3150 current loss 0.000000, current_train_items 19200.
I0827 17:08:42.793617 134493687799808 run.py:695] Algo topological_sort step 3150 current loss 5.419850, current_train_items 8770.
I0827 17:08:42.902916 134493687799808 run.py:730] (val) algo mst_kruskal step 3150: {'in_mst': 0.7366255144032922, 'score': 0.7366255144032922, 'examples_seen': 69499, 'step': 3150, 'algorithm': 'mst_kruskal'}
I0827 17:08:42.923749 134493687799808 run.py:730] (val) algo mst_prim step 3150: {'pi': 0.7841796875, 'score': 0.7841796875, 'examples_seen': 64086, 'step': 3150, 'algorithm': 'mst_prim'}
I0827 17:08:43.670284 134493687799808 run.py:730] (val) algo naive_string_matcher step 3150: {'match': 0.72412109375, 'score': 0.72412109375, 'examples_seen': 43112, 'step': 3150, 'algorithm': 'naive_string_matcher'}
I0827 17:08:43.718105 134493687799808 run.py:730] (val) algo optimal_bst step 3150: {'root': 0.8622945501730104, 'score': 0.8622945501730104, 'examples_seen': 19200, 'step': 3150, 'algorithm': 'optimal_bst'}
I0827 17:08:47.397273 134493687799808 run.py:730] (val) algo quickselect step 3150: {'median': 0.189697265625, 'score': 0.189697265625, 'examples_seen': 7621, 'step': 3150, 'algorithm': 'quickselect'}
I0827 17:08:47.543186 134493687799808 run.py:730] (val) algo quicksort step 3150: {'pred': 0.916015625, 'score': 0.916015625, 'examples_seen': 4791, 'step': 3150, 'algorithm': 'quicksort'}
I0827 17:08:48.054079 134493687799808 run.py:730] (val) algo segments_intersect step 3150: {'intersect': 0.6509859824186267, 'score': 0.6509859824186267, 'examples_seen': 80672, 'step': 3150, 'algorithm': 'segments_intersect'}
I0827 17:08:48.159446 134493687799808 run.py:730] (val) algo strongly_connected_components step 3150: {'scc_id': 0.7578125, 'score': 0.7578125, 'examples_seen': 3688, 'step': 3150, 'algorithm': 'strongly_connected_components'}
I0827 17:08:48.174203 134493687799808 run.py:730] (val) algo task_scheduling step 3150: {'selected': 0.919407894736842, 'score': 0.919407894736842, 'examples_seen': 19200, 'step': 3150, 'algorithm': 'task_scheduling'}
I0827 17:08:48.229009 134493687799808 run.py:730] (val) algo topological_sort step 3150: {'topo': 0.630859375, 'topo_head': 1.0, 'score': 0.8154296875, 'examples_seen': 8770, 'step': 3150, 'algorithm': 'topological_sort'}
I0827 17:08:48.229350 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.730, current avg val score is 0.736, val scores are: mst_kruskal: 0.737, mst_prim: 0.784, naive_string_matcher: 0.724, optimal_bst: 0.862, quickselect: 0.190, quicksort: 0.916, segments_intersect: 0.651, strongly_connected_components: 0.758, task_scheduling: 0.919, topological_sort: 0.815
I0827 17:09:05.652999 134493687799808 run.py:695] Algo mst_kruskal step 3200 current loss 0.123477, current_train_items 70614.
I0827 17:09:05.662549 134493687799808 run.py:695] Algo mst_prim step 3200 current loss 0.743830, current_train_items 65117.
I0827 17:09:05.671337 134493687799808 run.py:695] Algo naive_string_matcher step 3200 current loss 1.315727, current_train_items 43796.
I0827 17:09:05.683925 134493687799808 run.py:695] Algo optimal_bst step 3200 current loss 0.000000, current_train_items 19504.
I0827 17:09:05.762490 134493687799808 run.py:695] Algo quickselect step 3200 current loss 3.068830, current_train_items 7737.
I0827 17:09:05.773162 134493687799808 run.py:695] Algo quicksort step 3200 current loss 0.000000, current_train_items 4862.
I0827 17:09:05.790969 134493687799808 run.py:695] Algo segments_intersect step 3200 current loss 0.694981, current_train_items 81952.
I0827 17:09:05.802209 134493687799808 run.py:695] Algo strongly_connected_components step 3200 current loss 0.000000, current_train_items 3749.
I0827 17:09:05.820302 134493687799808 run.py:695] Algo task_scheduling step 3200 current loss 0.000000, current_train_items 19504.
I0827 17:09:05.835593 134493687799808 run.py:695] Algo topological_sort step 3200 current loss 3.345368, current_train_items 8911.
I0827 17:09:05.954933 134493687799808 run.py:730] (val) algo mst_kruskal step 3200: {'in_mst': 0.836231884057971, 'score': 0.836231884057971, 'examples_seen': 70614, 'step': 3200, 'algorithm': 'mst_kruskal'}
I0827 17:09:05.975890 134493687799808 run.py:730] (val) algo mst_prim step 3200: {'pi': 0.8134765625, 'score': 0.8134765625, 'examples_seen': 65117, 'step': 3200, 'algorithm': 'mst_prim'}
I0827 17:09:06.717477 134493687799808 run.py:730] (val) algo naive_string_matcher step 3200: {'match': 0.75146484375, 'score': 0.75146484375, 'examples_seen': 43796, 'step': 3200, 'algorithm': 'naive_string_matcher'}
I0827 17:09:06.765679 134493687799808 run.py:730] (val) algo optimal_bst step 3200: {'root': 0.8769463667820069, 'score': 0.8769463667820069, 'examples_seen': 19504, 'step': 3200, 'algorithm': 'optimal_bst'}
I0827 17:09:10.448339 134493687799808 run.py:730] (val) algo quickselect step 3200: {'median': 0.20947265625, 'score': 0.20947265625, 'examples_seen': 7737, 'step': 3200, 'algorithm': 'quickselect'}
I0827 17:09:10.594386 134493687799808 run.py:730] (val) algo quicksort step 3200: {'pred': 0.92578125, 'score': 0.92578125, 'examples_seen': 4862, 'step': 3200, 'algorithm': 'quicksort'}
I0827 17:09:11.104974 134493687799808 run.py:730] (val) algo segments_intersect step 3200: {'intersect': 0.571584699453552, 'score': 0.571584699453552, 'examples_seen': 81952, 'step': 3200, 'algorithm': 'segments_intersect'}
I0827 17:09:11.211127 134493687799808 run.py:730] (val) algo strongly_connected_components step 3200: {'scc_id': 0.7158203125, 'score': 0.7158203125, 'examples_seen': 3749, 'step': 3200, 'algorithm': 'strongly_connected_components'}
I0827 17:09:11.224754 134493687799808 run.py:730] (val) algo task_scheduling step 3200: {'selected': 0.9052287581699348, 'score': 0.9052287581699348, 'examples_seen': 19504, 'step': 3200, 'algorithm': 'task_scheduling'}
I0827 17:09:11.278988 134493687799808 run.py:730] (val) algo topological_sort step 3200: {'topo': 0.638671875, 'topo_head': 0.984375, 'score': 0.8115234375, 'examples_seen': 8911, 'step': 3200, 'algorithm': 'topological_sort'}
I0827 17:09:11.279158 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.736, current avg val score is 0.742, val scores are: mst_kruskal: 0.836, mst_prim: 0.813, naive_string_matcher: 0.751, optimal_bst: 0.877, quickselect: 0.209, quicksort: 0.926, segments_intersect: 0.572, strongly_connected_components: 0.716, task_scheduling: 0.905, topological_sort: 0.812
I0827 17:09:28.679975 134493687799808 run.py:695] Algo mst_kruskal step 3250 current loss 0.078010, current_train_items 71712.
I0827 17:09:28.701274 134493687799808 run.py:695] Algo mst_prim step 3250 current loss 0.541176, current_train_items 66122.
I0827 17:09:28.721207 134493687799808 run.py:695] Algo naive_string_matcher step 3250 current loss 1.426674, current_train_items 44503.
I0827 17:09:28.742304 134493687799808 run.py:695] Algo optimal_bst step 3250 current loss 0.000000, current_train_items 19808.
I0827 17:09:28.828241 134493687799808 run.py:695] Algo quickselect step 3250 current loss 1.607178, current_train_items 7858.
I0827 17:09:28.849243 134493687799808 run.py:695] Algo quicksort step 3250 current loss 3.618499, current_train_items 4940.
I0827 17:09:28.864083 134493687799808 run.py:695] Algo segments_intersect step 3250 current loss 0.660976, current_train_items 83232.
I0827 17:09:28.875291 134493687799808 run.py:695] Algo strongly_connected_components step 3250 current loss 0.748302, current_train_items 3809.
I0827 17:09:28.892377 134493687799808 run.py:695] Algo task_scheduling step 3250 current loss 0.000000, current_train_items 19808.
I0827 17:09:28.903771 134493687799808 run.py:695] Algo topological_sort step 3250 current loss 2.158789, current_train_items 9051.
I0827 17:09:29.023554 134493687799808 run.py:730] (val) algo mst_kruskal step 3250: {'in_mst': 0.823342175066313, 'score': 0.823342175066313, 'examples_seen': 71712, 'step': 3250, 'algorithm': 'mst_kruskal'}
I0827 17:09:29.044529 134493687799808 run.py:730] (val) algo mst_prim step 3250: {'pi': 0.8720703125, 'score': 0.8720703125, 'examples_seen': 66122, 'step': 3250, 'algorithm': 'mst_prim'}
I0827 17:09:29.799399 134493687799808 run.py:730] (val) algo naive_string_matcher step 3250: {'match': 0.743408203125, 'score': 0.743408203125, 'examples_seen': 44503, 'step': 3250, 'algorithm': 'naive_string_matcher'}
I0827 17:09:29.847442 134493687799808 run.py:730] (val) algo optimal_bst step 3250: {'root': 0.857753027681661, 'score': 0.857753027681661, 'examples_seen': 19808, 'step': 3250, 'algorithm': 'optimal_bst'}
I0827 17:09:33.531122 134493687799808 run.py:730] (val) algo quickselect step 3250: {'median': 0.206298828125, 'score': 0.206298828125, 'examples_seen': 7858, 'step': 3250, 'algorithm': 'quickselect'}
I0827 17:09:33.676545 134493687799808 run.py:730] (val) algo quicksort step 3250: {'pred': 0.765625, 'score': 0.765625, 'examples_seen': 4940, 'step': 3250, 'algorithm': 'quicksort'}
I0827 17:09:34.194927 134493687799808 run.py:730] (val) algo segments_intersect step 3250: {'intersect': 0.6647652479157525, 'score': 0.6647652479157525, 'examples_seen': 83232, 'step': 3250, 'algorithm': 'segments_intersect'}
I0827 17:09:34.300080 134493687799808 run.py:730] (val) algo strongly_connected_components step 3250: {'scc_id': 0.767578125, 'score': 0.767578125, 'examples_seen': 3809, 'step': 3250, 'algorithm': 'strongly_connected_components'}
I0827 17:09:34.313382 134493687799808 run.py:730] (val) algo task_scheduling step 3250: {'selected': 0.9253486464315012, 'score': 0.9253486464315012, 'examples_seen': 19808, 'step': 3250, 'algorithm': 'task_scheduling'}
I0827 17:09:34.367508 134493687799808 run.py:730] (val) algo topological_sort step 3250: {'topo': 0.5986328125, 'topo_head': 1.0, 'score': 0.79931640625, 'examples_seen': 9051, 'step': 3250, 'algorithm': 'topological_sort'}
I0827 17:09:34.367725 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.742, current avg val score is 0.743, val scores are: mst_kruskal: 0.823, mst_prim: 0.872, naive_string_matcher: 0.743, optimal_bst: 0.858, quickselect: 0.206, quicksort: 0.766, segments_intersect: 0.665, strongly_connected_components: 0.768, task_scheduling: 0.925, topological_sort: 0.799
W0827 17:09:38.116000 134493687799808 samplers.py:175] Increasing hint lengh from 126 to 129
I0827 17:09:52.459468 134493687799808 run.py:695] Algo mst_kruskal step 3300 current loss 0.149719, current_train_items 72802.
I0827 17:09:52.480518 134493687799808 run.py:695] Algo mst_prim step 3300 current loss 0.451318, current_train_items 67119.
I0827 17:09:52.499416 134493687799808 run.py:695] Algo naive_string_matcher step 3300 current loss 1.377192, current_train_items 45192.
I0827 17:09:52.519873 134493687799808 run.py:695] Algo optimal_bst step 3300 current loss 0.000000, current_train_items 20112.
I0827 17:09:52.603450 134493687799808 run.py:695] Algo quickselect step 3300 current loss 1.711405, current_train_items 7985.
I0827 17:09:52.624704 134493687799808 run.py:695] Algo quicksort step 3300 current loss 2.842266, current_train_items 5016.
I0827 17:09:52.648411 134493687799808 run.py:695] Algo segments_intersect step 3300 current loss 0.644553, current_train_items 84512.
I0827 17:09:52.670775 134493687799808 run.py:695] Algo strongly_connected_components step 3300 current loss 2.361257, current_train_items 3865.
I0827 17:09:52.692897 134493687799808 run.py:695] Algo task_scheduling step 3300 current loss 0.000000, current_train_items 20112.
I0827 17:09:52.715925 134493687799808 run.py:695] Algo topological_sort step 3300 current loss 1.991965, current_train_items 9192.
I0827 17:09:52.866131 134493687799808 run.py:730] (val) algo mst_kruskal step 3300: {'in_mst': 0.8114035087719298, 'score': 0.8114035087719298, 'examples_seen': 72802, 'step': 3300, 'algorithm': 'mst_kruskal'}
I0827 17:09:52.887054 134493687799808 run.py:730] (val) algo mst_prim step 3300: {'pi': 0.84375, 'score': 0.84375, 'examples_seen': 67119, 'step': 3300, 'algorithm': 'mst_prim'}
I0827 17:09:53.645163 134493687799808 run.py:730] (val) algo naive_string_matcher step 3300: {'match': 0.748046875, 'score': 0.748046875, 'examples_seen': 45192, 'step': 3300, 'algorithm': 'naive_string_matcher'}
I0827 17:09:53.692767 134493687799808 run.py:730] (val) algo optimal_bst step 3300: {'root': 0.864132785467128, 'score': 0.864132785467128, 'examples_seen': 20112, 'step': 3300, 'algorithm': 'optimal_bst'}
I0827 17:09:57.365795 134493687799808 run.py:730] (val) algo quickselect step 3300: {'median': 0.223388671875, 'score': 0.223388671875, 'examples_seen': 7985, 'step': 3300, 'algorithm': 'quickselect'}
I0827 17:09:57.510278 134493687799808 run.py:730] (val) algo quicksort step 3300: {'pred': 0.916015625, 'score': 0.916015625, 'examples_seen': 5016, 'step': 3300, 'algorithm': 'quicksort'}
I0827 17:09:58.031410 134493687799808 run.py:730] (val) algo segments_intersect step 3300: {'intersect': 0.6953680568902556, 'score': 0.6953680568902556, 'examples_seen': 84512, 'step': 3300, 'algorithm': 'segments_intersect'}
I0827 17:09:58.136888 134493687799808 run.py:730] (val) algo strongly_connected_components step 3300: {'scc_id': 0.7646484375, 'score': 0.7646484375, 'examples_seen': 3865, 'step': 3300, 'algorithm': 'strongly_connected_components'}
I0827 17:09:58.150086 134493687799808 run.py:730] (val) algo task_scheduling step 3300: {'selected': 0.9448698315467075, 'score': 0.9448698315467075, 'examples_seen': 20112, 'step': 3300, 'algorithm': 'task_scheduling'}
I0827 17:09:58.203244 134493687799808 run.py:730] (val) algo topological_sort step 3300: {'topo': 0.6318359375, 'topo_head': 1.0, 'score': 0.81591796875, 'examples_seen': 9192, 'step': 3300, 'algorithm': 'topological_sort'}
I0827 17:09:58.203431 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.763, val scores are: mst_kruskal: 0.811, mst_prim: 0.844, naive_string_matcher: 0.748, optimal_bst: 0.864, quickselect: 0.223, quicksort: 0.916, segments_intersect: 0.695, strongly_connected_components: 0.765, task_scheduling: 0.945, topological_sort: 0.816
I0827 17:10:15.231646 134493687799808 run.py:695] Algo mst_kruskal step 3350 current loss 0.075389, current_train_items 73892.
I0827 17:10:15.251440 134493687799808 run.py:695] Algo mst_prim step 3350 current loss 0.408899, current_train_items 68144.
I0827 17:10:15.268139 134493687799808 run.py:695] Algo naive_string_matcher step 3350 current loss 1.551991, current_train_items 45856.
I0827 17:10:15.287868 134493687799808 run.py:695] Algo optimal_bst step 3350 current loss 0.000000, current_train_items 20416.
I0827 17:10:15.382147 134493687799808 run.py:695] Algo quickselect step 3350 current loss 2.048190, current_train_items 8105.
I0827 17:10:15.401086 134493687799808 run.py:695] Algo quicksort step 3350 current loss 2.156621, current_train_items 5091.
I0827 17:10:15.428385 134493687799808 run.py:695] Algo segments_intersect step 3350 current loss 0.667826, current_train_items 85792.
I0827 17:10:15.452739 134493687799808 run.py:695] Algo strongly_connected_components step 3350 current loss 1.725022, current_train_items 3924.
I0827 17:10:15.475165 134493687799808 run.py:695] Algo task_scheduling step 3350 current loss 0.000000, current_train_items 20416.
I0827 17:10:15.496125 134493687799808 run.py:695] Algo topological_sort step 3350 current loss 1.384881, current_train_items 9329.
I0827 17:10:15.667232 134493687799808 run.py:730] (val) algo mst_kruskal step 3350: {'in_mst': 0.7843137254901961, 'score': 0.7843137254901961, 'examples_seen': 73892, 'step': 3350, 'algorithm': 'mst_kruskal'}
I0827 17:10:15.690058 134493687799808 run.py:730] (val) algo mst_prim step 3350: {'pi': 0.8564453125, 'score': 0.8564453125, 'examples_seen': 68144, 'step': 3350, 'algorithm': 'mst_prim'}
I0827 17:10:16.829498 134493687799808 run.py:730] (val) algo naive_string_matcher step 3350: {'match': 0.712646484375, 'score': 0.712646484375, 'examples_seen': 45856, 'step': 3350, 'algorithm': 'naive_string_matcher'}
I0827 17:10:16.877018 134493687799808 run.py:730] (val) algo optimal_bst step 3350: {'root': 0.8847858996539792, 'score': 0.8847858996539792, 'examples_seen': 20416, 'step': 3350, 'algorithm': 'optimal_bst'}
I0827 17:10:20.543789 134493687799808 run.py:730] (val) algo quickselect step 3350: {'median': 0.20751953125, 'score': 0.20751953125, 'examples_seen': 8105, 'step': 3350, 'algorithm': 'quickselect'}
I0827 17:10:20.690875 134493687799808 run.py:730] (val) algo quicksort step 3350: {'pred': 0.916015625, 'score': 0.916015625, 'examples_seen': 5091, 'step': 3350, 'algorithm': 'quicksort'}
I0827 17:10:21.178646 134493687799808 run.py:730] (val) algo segments_intersect step 3350: {'intersect': 0.6112244897959184, 'score': 0.6112244897959184, 'examples_seen': 85792, 'step': 3350, 'algorithm': 'segments_intersect'}
I0827 17:10:21.283266 134493687799808 run.py:730] (val) algo strongly_connected_components step 3350: {'scc_id': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 3924, 'step': 3350, 'algorithm': 'strongly_connected_components'}
I0827 17:10:21.296656 134493687799808 run.py:730] (val) algo task_scheduling step 3350: {'selected': 0.9197431781701445, 'score': 0.9197431781701445, 'examples_seen': 20416, 'step': 3350, 'algorithm': 'task_scheduling'}
I0827 17:10:21.350743 134493687799808 run.py:730] (val) algo topological_sort step 3350: {'topo': 0.6787109375, 'topo_head': 0.96875, 'score': 0.82373046875, 'examples_seen': 9329, 'step': 3350, 'algorithm': 'topological_sort'}
I0827 17:10:21.350924 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.749, val scores are: mst_kruskal: 0.784, mst_prim: 0.856, naive_string_matcher: 0.713, optimal_bst: 0.885, quickselect: 0.208, quicksort: 0.916, segments_intersect: 0.611, strongly_connected_components: 0.772, task_scheduling: 0.920, topological_sort: 0.824
W0827 17:10:26.568404 134493687799808 samplers.py:175] Increasing hint lengh from 28 to 29
I0827 17:10:38.239354 134493687799808 run.py:695] Algo mst_kruskal step 3400 current loss 0.099767, current_train_items 75058.
I0827 17:10:38.255698 134493687799808 run.py:695] Algo mst_prim step 3400 current loss 0.641447, current_train_items 69192.
I0827 17:10:38.265190 134493687799808 run.py:695] Algo naive_string_matcher step 3400 current loss 0.994986, current_train_items 46541.
I0827 17:10:38.277275 134493687799808 run.py:695] Algo optimal_bst step 3400 current loss 0.000000, current_train_items 20720.
I0827 17:10:38.354959 134493687799808 run.py:695] Algo quickselect step 3400 current loss 2.129582, current_train_items 8223.
I0827 17:10:38.364962 134493687799808 run.py:695] Algo quicksort step 3400 current loss 0.888745, current_train_items 5167.
I0827 17:10:38.382387 134493687799808 run.py:695] Algo segments_intersect step 3400 current loss 0.681449, current_train_items 87072.
I0827 17:10:38.393396 134493687799808 run.py:695] Algo strongly_connected_components step 3400 current loss 0.828425, current_train_items 3984.
I0827 17:10:38.412008 134493687799808 run.py:695] Algo task_scheduling step 3400 current loss 0.000000, current_train_items 20720.
I0827 17:10:38.423511 134493687799808 run.py:695] Algo topological_sort step 3400 current loss 0.629674, current_train_items 9469.
I0827 17:10:38.534013 134493687799808 run.py:730] (val) algo mst_kruskal step 3400: {'in_mst': 0.7963433214829863, 'score': 0.7963433214829863, 'examples_seen': 75058, 'step': 3400, 'algorithm': 'mst_kruskal'}
I0827 17:10:38.555586 134493687799808 run.py:730] (val) algo mst_prim step 3400: {'pi': 0.814453125, 'score': 0.814453125, 'examples_seen': 69192, 'step': 3400, 'algorithm': 'mst_prim'}
I0827 17:10:39.579009 134493687799808 run.py:730] (val) algo naive_string_matcher step 3400: {'match': 0.73193359375, 'score': 0.73193359375, 'examples_seen': 46541, 'step': 3400, 'algorithm': 'naive_string_matcher'}
I0827 17:10:39.629860 134493687799808 run.py:730] (val) algo optimal_bst step 3400: {'root': 0.8748918685121108, 'score': 0.8748918685121108, 'examples_seen': 20720, 'step': 3400, 'algorithm': 'optimal_bst'}
I0827 17:10:43.312772 134493687799808 run.py:730] (val) algo quickselect step 3400: {'median': 0.17236328125, 'score': 0.17236328125, 'examples_seen': 8223, 'step': 3400, 'algorithm': 'quickselect'}
I0827 17:10:43.458435 134493687799808 run.py:730] (val) algo quicksort step 3400: {'pred': 0.9345703125, 'score': 0.9345703125, 'examples_seen': 5167, 'step': 3400, 'algorithm': 'quicksort'}
I0827 17:10:43.978087 134493687799808 run.py:730] (val) algo segments_intersect step 3400: {'intersect': 0.6867095168981961, 'score': 0.6867095168981961, 'examples_seen': 87072, 'step': 3400, 'algorithm': 'segments_intersect'}
I0827 17:10:44.084068 134493687799808 run.py:730] (val) algo strongly_connected_components step 3400: {'scc_id': 0.72265625, 'score': 0.72265625, 'examples_seen': 3984, 'step': 3400, 'algorithm': 'strongly_connected_components'}
I0827 17:10:44.097431 134493687799808 run.py:730] (val) algo task_scheduling step 3400: {'selected': 0.9355828220858896, 'score': 0.9355828220858896, 'examples_seen': 20720, 'step': 3400, 'algorithm': 'task_scheduling'}
I0827 17:10:44.151800 134493687799808 run.py:730] (val) algo topological_sort step 3400: {'topo': 0.5791015625, 'topo_head': 0.984375, 'score': 0.78173828125, 'examples_seen': 9469, 'step': 3400, 'algorithm': 'topological_sort'}
I0827 17:10:44.151973 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.745, val scores are: mst_kruskal: 0.796, mst_prim: 0.814, naive_string_matcher: 0.732, optimal_bst: 0.875, quickselect: 0.172, quicksort: 0.935, segments_intersect: 0.687, strongly_connected_components: 0.723, task_scheduling: 0.936, topological_sort: 0.782
W0827 17:10:51.922892 134493687799808 samplers.py:175] Increasing hint lengh from 129 to 134
I0827 17:11:01.068844 134493687799808 run.py:695] Algo mst_kruskal step 3450 current loss 0.073986, current_train_items 76136.
I0827 17:11:01.085551 134493687799808 run.py:695] Algo mst_prim step 3450 current loss 0.416483, current_train_items 70248.
I0827 17:11:01.094266 134493687799808 run.py:695] Algo naive_string_matcher step 3450 current loss 1.263308, current_train_items 47244.
I0827 17:11:01.106212 134493687799808 run.py:695] Algo optimal_bst step 3450 current loss 0.000000, current_train_items 21024.
I0827 17:11:01.184601 134493687799808 run.py:695] Algo quickselect step 3450 current loss 2.711017, current_train_items 8343.
I0827 17:11:01.195582 134493687799808 run.py:695] Algo quicksort step 3450 current loss 5.567975, current_train_items 5243.
I0827 17:11:01.213269 134493687799808 run.py:695] Algo segments_intersect step 3450 current loss 0.672994, current_train_items 88352.
I0827 17:11:01.224089 134493687799808 run.py:695] Algo strongly_connected_components step 3450 current loss 0.003305, current_train_items 4038.
I0827 17:11:01.242283 134493687799808 run.py:695] Algo task_scheduling step 3450 current loss 0.000000, current_train_items 21024.
I0827 17:11:01.254483 134493687799808 run.py:695] Algo topological_sort step 3450 current loss 1.394063, current_train_items 9608.
I0827 17:11:01.370798 134493687799808 run.py:730] (val) algo mst_kruskal step 3450: {'in_mst': 0.8190954773869348, 'score': 0.8190954773869348, 'examples_seen': 76136, 'step': 3450, 'algorithm': 'mst_kruskal'}
I0827 17:11:01.392221 134493687799808 run.py:730] (val) algo mst_prim step 3450: {'pi': 0.8525390625, 'score': 0.8525390625, 'examples_seen': 70248, 'step': 3450, 'algorithm': 'mst_prim'}
I0827 17:11:02.156550 134493687799808 run.py:730] (val) algo naive_string_matcher step 3450: {'match': 0.75830078125, 'score': 0.75830078125, 'examples_seen': 47244, 'step': 3450, 'algorithm': 'naive_string_matcher'}
I0827 17:11:02.204217 134493687799808 run.py:730] (val) algo optimal_bst step 3450: {'root': 0.8816500865051903, 'score': 0.8816500865051903, 'examples_seen': 21024, 'step': 3450, 'algorithm': 'optimal_bst'}
I0827 17:11:05.909773 134493687799808 run.py:730] (val) algo quickselect step 3450: {'median': 0.22705078125, 'score': 0.22705078125, 'examples_seen': 8343, 'step': 3450, 'algorithm': 'quickselect'}
I0827 17:11:06.054126 134493687799808 run.py:730] (val) algo quicksort step 3450: {'pred': 0.9423828125, 'score': 0.9423828125, 'examples_seen': 5243, 'step': 3450, 'algorithm': 'quicksort'}
I0827 17:11:06.563728 134493687799808 run.py:730] (val) algo segments_intersect step 3450: {'intersect': 0.6264698523892919, 'score': 0.6264698523892919, 'examples_seen': 88352, 'step': 3450, 'algorithm': 'segments_intersect'}
I0827 17:11:06.669152 134493687799808 run.py:730] (val) algo strongly_connected_components step 3450: {'scc_id': 0.77734375, 'score': 0.77734375, 'examples_seen': 4038, 'step': 3450, 'algorithm': 'strongly_connected_components'}
I0827 17:11:06.682767 134493687799808 run.py:730] (val) algo task_scheduling step 3450: {'selected': 0.9158415841584159, 'score': 0.9158415841584159, 'examples_seen': 21024, 'step': 3450, 'algorithm': 'task_scheduling'}
I0827 17:11:06.736932 134493687799808 run.py:730] (val) algo topological_sort step 3450: {'topo': 0.68359375, 'topo_head': 0.984375, 'score': 0.833984375, 'examples_seen': 9608, 'step': 3450, 'algorithm': 'topological_sort'}
I0827 17:11:06.737098 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.763, val scores are: mst_kruskal: 0.819, mst_prim: 0.853, naive_string_matcher: 0.758, optimal_bst: 0.882, quickselect: 0.227, quicksort: 0.942, segments_intersect: 0.626, strongly_connected_components: 0.777, task_scheduling: 0.916, topological_sort: 0.834
I0827 17:11:24.163340 134493687799808 run.py:695] Algo mst_kruskal step 3500 current loss 0.130030, current_train_items 77205.
I0827 17:11:24.173038 134493687799808 run.py:695] Algo mst_prim step 3500 current loss 0.569042, current_train_items 71242.
I0827 17:11:24.181029 134493687799808 run.py:695] Algo naive_string_matcher step 3500 current loss 2.063213, current_train_items 47923.
I0827 17:11:24.192791 134493687799808 run.py:695] Algo optimal_bst step 3500 current loss 0.311201, current_train_items 21344.
I0827 17:11:24.270297 134493687799808 run.py:695] Algo quickselect step 3500 current loss 1.916034, current_train_items 8462.
I0827 17:11:24.280892 134493687799808 run.py:695] Algo quicksort step 3500 current loss 4.380558, current_train_items 5318.
I0827 17:11:24.297651 134493687799808 run.py:695] Algo segments_intersect step 3500 current loss 0.643281, current_train_items 89632.
I0827 17:11:24.308224 134493687799808 run.py:695] Algo strongly_connected_components step 3500 current loss 1.142204, current_train_items 4100.
I0827 17:11:24.326565 134493687799808 run.py:695] Algo task_scheduling step 3500 current loss 0.138196, current_train_items 21344.
I0827 17:11:24.338690 134493687799808 run.py:695] Algo topological_sort step 3500 current loss 1.322670, current_train_items 9748.
I0827 17:11:24.454797 134493687799808 run.py:730] (val) algo mst_kruskal step 3500: {'in_mst': 0.7960042060988434, 'score': 0.7960042060988434, 'examples_seen': 77205, 'step': 3500, 'algorithm': 'mst_kruskal'}
I0827 17:11:24.475705 134493687799808 run.py:730] (val) algo mst_prim step 3500: {'pi': 0.8427734375, 'score': 0.8427734375, 'examples_seen': 71242, 'step': 3500, 'algorithm': 'mst_prim'}
I0827 17:11:25.219803 134493687799808 run.py:730] (val) algo naive_string_matcher step 3500: {'match': 0.7607421875, 'score': 0.7607421875, 'examples_seen': 47923, 'step': 3500, 'algorithm': 'naive_string_matcher'}
I0827 17:11:25.267763 134493687799808 run.py:730] (val) algo optimal_bst step 3500: {'root': 0.8935445501730104, 'score': 0.8935445501730104, 'examples_seen': 21344, 'step': 3500, 'algorithm': 'optimal_bst'}
I0827 17:11:28.958921 134493687799808 run.py:730] (val) algo quickselect step 3500: {'median': 0.2177734375, 'score': 0.2177734375, 'examples_seen': 8462, 'step': 3500, 'algorithm': 'quickselect'}
I0827 17:11:29.103700 134493687799808 run.py:730] (val) algo quicksort step 3500: {'pred': 0.865234375, 'score': 0.865234375, 'examples_seen': 5318, 'step': 3500, 'algorithm': 'quicksort'}
I0827 17:11:29.620650 134493687799808 run.py:730] (val) algo segments_intersect step 3500: {'intersect': 0.6847496206373294, 'score': 0.6847496206373294, 'examples_seen': 89632, 'step': 3500, 'algorithm': 'segments_intersect'}
I0827 17:11:29.726335 134493687799808 run.py:730] (val) algo strongly_connected_components step 3500: {'scc_id': 0.783203125, 'score': 0.783203125, 'examples_seen': 4100, 'step': 3500, 'algorithm': 'strongly_connected_components'}
I0827 17:11:29.739962 134493687799808 run.py:730] (val) algo task_scheduling step 3500: {'selected': 0.9263657957244654, 'score': 0.9263657957244654, 'examples_seen': 21344, 'step': 3500, 'algorithm': 'task_scheduling'}
I0827 17:11:29.793534 134493687799808 run.py:730] (val) algo topological_sort step 3500: {'topo': 0.673828125, 'topo_head': 1.0, 'score': 0.8369140625, 'examples_seen': 9748, 'step': 3500, 'algorithm': 'topological_sort'}
I0827 17:11:29.793724 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.761, val scores are: mst_kruskal: 0.796, mst_prim: 0.843, naive_string_matcher: 0.761, optimal_bst: 0.894, quickselect: 0.218, quicksort: 0.865, segments_intersect: 0.685, strongly_connected_components: 0.783, task_scheduling: 0.926, topological_sort: 0.837
I0827 17:11:46.924292 134493687799808 run.py:695] Algo mst_kruskal step 3550 current loss 0.129980, current_train_items 78331.
I0827 17:11:46.935084 134493687799808 run.py:695] Algo mst_prim step 3550 current loss 0.360890, current_train_items 72298.
I0827 17:11:46.943997 134493687799808 run.py:695] Algo naive_string_matcher step 3550 current loss 1.682593, current_train_items 48604.
I0827 17:11:46.956193 134493687799808 run.py:695] Algo optimal_bst step 3550 current loss 0.283793, current_train_items 21648.
I0827 17:11:47.033793 134493687799808 run.py:695] Algo quickselect step 3550 current loss 2.232184, current_train_items 8579.
I0827 17:11:47.044255 134493687799808 run.py:695] Algo quicksort step 3550 current loss 6.815627, current_train_items 5395.
I0827 17:11:47.062386 134493687799808 run.py:695] Algo segments_intersect step 3550 current loss 0.659485, current_train_items 90912.
I0827 17:11:47.073437 134493687799808 run.py:695] Algo strongly_connected_components step 3550 current loss 0.000000, current_train_items 4157.
I0827 17:11:47.092003 134493687799808 run.py:695] Algo task_scheduling step 3550 current loss 0.130697, current_train_items 21648.
I0827 17:11:47.103667 134493687799808 run.py:695] Algo topological_sort step 3550 current loss 1.326741, current_train_items 9888.
I0827 17:11:47.222559 134493687799808 run.py:730] (val) algo mst_kruskal step 3550: {'in_mst': 0.7372942018611309, 'score': 0.7372942018611309, 'examples_seen': 78331, 'step': 3550, 'algorithm': 'mst_kruskal'}
I0827 17:11:47.243363 134493687799808 run.py:730] (val) algo mst_prim step 3550: {'pi': 0.8251953125, 'score': 0.8251953125, 'examples_seen': 72298, 'step': 3550, 'algorithm': 'mst_prim'}
I0827 17:11:47.986277 134493687799808 run.py:730] (val) algo naive_string_matcher step 3550: {'match': 0.7490234375, 'score': 0.7490234375, 'examples_seen': 48604, 'step': 3550, 'algorithm': 'naive_string_matcher'}
I0827 17:11:48.034147 134493687799808 run.py:730] (val) algo optimal_bst step 3550: {'root': 0.9021950692041523, 'score': 0.9021950692041523, 'examples_seen': 21648, 'step': 3550, 'algorithm': 'optimal_bst'}
I0827 17:11:51.736902 134493687799808 run.py:730] (val) algo quickselect step 3550: {'median': 0.193603515625, 'score': 0.193603515625, 'examples_seen': 8579, 'step': 3550, 'algorithm': 'quickselect'}
I0827 17:11:51.886729 134493687799808 run.py:730] (val) algo quicksort step 3550: {'pred': 0.7294921875, 'score': 0.7294921875, 'examples_seen': 5395, 'step': 3550, 'algorithm': 'quicksort'}
I0827 17:11:52.713554 134493687799808 run.py:730] (val) algo segments_intersect step 3550: {'intersect': 0.48794063079777367, 'score': 0.48794063079777367, 'examples_seen': 90912, 'step': 3550, 'algorithm': 'segments_intersect'}
I0827 17:11:52.819137 134493687799808 run.py:730] (val) algo strongly_connected_components step 3550: {'scc_id': 0.7685546875, 'score': 0.7685546875, 'examples_seen': 4157, 'step': 3550, 'algorithm': 'strongly_connected_components'}
I0827 17:11:52.832535 134493687799808 run.py:730] (val) algo task_scheduling step 3550: {'selected': 0.9246309246309246, 'score': 0.9246309246309246, 'examples_seen': 21648, 'step': 3550, 'algorithm': 'task_scheduling'}
I0827 17:11:52.886283 134493687799808 run.py:730] (val) algo topological_sort step 3550: {'topo': 0.6240234375, 'topo_head': 0.984375, 'score': 0.80419921875, 'examples_seen': 9888, 'step': 3550, 'algorithm': 'topological_sort'}
I0827 17:11:52.886500 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.712, val scores are: mst_kruskal: 0.737, mst_prim: 0.825, naive_string_matcher: 0.749, optimal_bst: 0.902, quickselect: 0.194, quicksort: 0.729, segments_intersect: 0.488, strongly_connected_components: 0.769, task_scheduling: 0.925, topological_sort: 0.804
I0827 17:12:09.670874 134493687799808 run.py:695] Algo mst_kruskal step 3600 current loss 0.085704, current_train_items 79454.
I0827 17:12:09.682717 134493687799808 run.py:695] Algo mst_prim step 3600 current loss 0.356989, current_train_items 73339.
I0827 17:12:09.692137 134493687799808 run.py:695] Algo naive_string_matcher step 3600 current loss 1.955865, current_train_items 49275.
I0827 17:12:09.704367 134493687799808 run.py:695] Algo optimal_bst step 3600 current loss 0.334254, current_train_items 21952.
I0827 17:12:09.782107 134493687799808 run.py:695] Algo quickselect step 3600 current loss 2.709550, current_train_items 8702.
I0827 17:12:09.792925 134493687799808 run.py:695] Algo quicksort step 3600 current loss 0.086882, current_train_items 5471.
I0827 17:12:09.810741 134493687799808 run.py:695] Algo segments_intersect step 3600 current loss 0.609820, current_train_items 92192.
I0827 17:12:09.820995 134493687799808 run.py:695] Algo strongly_connected_components step 3600 current loss 0.000000, current_train_items 4215.
I0827 17:12:09.839092 134493687799808 run.py:695] Algo task_scheduling step 3600 current loss 0.130194, current_train_items 21952.
I0827 17:12:09.851059 134493687799808 run.py:695] Algo topological_sort step 3600 current loss 3.501446, current_train_items 10027.
I0827 17:12:09.972279 134493687799808 run.py:730] (val) algo mst_kruskal step 3600: {'in_mst': 0.7904255319148936, 'score': 0.7904255319148936, 'examples_seen': 79454, 'step': 3600, 'algorithm': 'mst_kruskal'}
I0827 17:12:09.993595 134493687799808 run.py:730] (val) algo mst_prim step 3600: {'pi': 0.8671875, 'score': 0.8671875, 'examples_seen': 73339, 'step': 3600, 'algorithm': 'mst_prim'}
I0827 17:12:10.744534 134493687799808 run.py:730] (val) algo naive_string_matcher step 3600: {'match': 0.734130859375, 'score': 0.734130859375, 'examples_seen': 49275, 'step': 3600, 'algorithm': 'naive_string_matcher'}
I0827 17:12:10.792316 134493687799808 run.py:730] (val) algo optimal_bst step 3600: {'root': 0.8825692041522492, 'score': 0.8825692041522492, 'examples_seen': 21952, 'step': 3600, 'algorithm': 'optimal_bst'}
I0827 17:12:14.471870 134493687799808 run.py:730] (val) algo quickselect step 3600: {'median': 0.211181640625, 'score': 0.211181640625, 'examples_seen': 8702, 'step': 3600, 'algorithm': 'quickselect'}
I0827 17:12:14.617633 134493687799808 run.py:730] (val) algo quicksort step 3600: {'pred': 0.9384765625, 'score': 0.9384765625, 'examples_seen': 5471, 'step': 3600, 'algorithm': 'quicksort'}
I0827 17:12:15.527224 134493687799808 run.py:730] (val) algo segments_intersect step 3600: {'intersect': 0.37176644493717664, 'score': 0.37176644493717664, 'examples_seen': 92192, 'step': 3600, 'algorithm': 'segments_intersect'}
I0827 17:12:15.634260 134493687799808 run.py:730] (val) algo strongly_connected_components step 3600: {'scc_id': 0.7890625, 'score': 0.7890625, 'examples_seen': 4215, 'step': 3600, 'algorithm': 'strongly_connected_components'}
I0827 17:12:15.657082 134493687799808 run.py:730] (val) algo task_scheduling step 3600: {'selected': 0.9403453689167974, 'score': 0.9403453689167974, 'examples_seen': 21952, 'step': 3600, 'algorithm': 'task_scheduling'}
I0827 17:12:15.711570 134493687799808 run.py:730] (val) algo topological_sort step 3600: {'topo': 0.67578125, 'topo_head': 0.984375, 'score': 0.830078125, 'examples_seen': 10027, 'step': 3600, 'algorithm': 'topological_sort'}
I0827 17:12:15.711814 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.736, val scores are: mst_kruskal: 0.790, mst_prim: 0.867, naive_string_matcher: 0.734, optimal_bst: 0.883, quickselect: 0.211, quicksort: 0.938, segments_intersect: 0.372, strongly_connected_components: 0.789, task_scheduling: 0.940, topological_sort: 0.830
I0827 17:12:33.299167 134493687799808 run.py:695] Algo mst_kruskal step 3650 current loss 0.071586, current_train_items 80589.
I0827 17:12:33.310280 134493687799808 run.py:695] Algo mst_prim step 3650 current loss 0.450959, current_train_items 74366.
I0827 17:12:33.319821 134493687799808 run.py:695] Algo naive_string_matcher step 3650 current loss 1.417365, current_train_items 49967.
I0827 17:12:33.332255 134493687799808 run.py:695] Algo optimal_bst step 3650 current loss 0.309755, current_train_items 22256.
I0827 17:12:33.409952 134493687799808 run.py:695] Algo quickselect step 3650 current loss 2.181339, current_train_items 8825.
I0827 17:12:33.420611 134493687799808 run.py:695] Algo quicksort step 3650 current loss 0.000000, current_train_items 5545.
I0827 17:12:33.438520 134493687799808 run.py:695] Algo segments_intersect step 3650 current loss 0.653441, current_train_items 93472.
I0827 17:12:33.450085 134493687799808 run.py:695] Algo strongly_connected_components step 3650 current loss 0.224168, current_train_items 4274.
I0827 17:12:33.468299 134493687799808 run.py:695] Algo task_scheduling step 3650 current loss 0.174580, current_train_items 22256.
I0827 17:12:33.479884 134493687799808 run.py:695] Algo topological_sort step 3650 current loss 1.210441, current_train_items 10165.
I0827 17:12:33.603184 134493687799808 run.py:730] (val) algo mst_kruskal step 3650: {'in_mst': 0.7830245068738793, 'score': 0.7830245068738793, 'examples_seen': 80589, 'step': 3650, 'algorithm': 'mst_kruskal'}
I0827 17:12:33.624289 134493687799808 run.py:730] (val) algo mst_prim step 3650: {'pi': 0.8515625, 'score': 0.8515625, 'examples_seen': 74366, 'step': 3650, 'algorithm': 'mst_prim'}
I0827 17:12:34.371743 134493687799808 run.py:730] (val) algo naive_string_matcher step 3650: {'match': 0.733642578125, 'score': 0.733642578125, 'examples_seen': 49967, 'step': 3650, 'algorithm': 'naive_string_matcher'}
I0827 17:12:34.419620 134493687799808 run.py:730] (val) algo optimal_bst step 3650: {'root': 0.8973832179930796, 'score': 0.8973832179930796, 'examples_seen': 22256, 'step': 3650, 'algorithm': 'optimal_bst'}
I0827 17:12:38.118711 134493687799808 run.py:730] (val) algo quickselect step 3650: {'median': 0.1982421875, 'score': 0.1982421875, 'examples_seen': 8825, 'step': 3650, 'algorithm': 'quickselect'}
I0827 17:12:38.265161 134493687799808 run.py:730] (val) algo quicksort step 3650: {'pred': 0.9619140625, 'score': 0.9619140625, 'examples_seen': 5545, 'step': 3650, 'algorithm': 'quicksort'}
I0827 17:12:39.001578 134493687799808 run.py:730] (val) algo segments_intersect step 3650: {'intersect': 0.6641074856046065, 'score': 0.6641074856046065, 'examples_seen': 93472, 'step': 3650, 'algorithm': 'segments_intersect'}
I0827 17:12:39.109610 134493687799808 run.py:730] (val) algo strongly_connected_components step 3650: {'scc_id': 0.791015625, 'score': 0.791015625, 'examples_seen': 4274, 'step': 3650, 'algorithm': 'strongly_connected_components'}
I0827 17:12:39.134155 134493687799808 run.py:730] (val) algo task_scheduling step 3650: {'selected': 0.9142857142857143, 'score': 0.9142857142857143, 'examples_seen': 22256, 'step': 3650, 'algorithm': 'task_scheduling'}
I0827 17:12:39.188333 134493687799808 run.py:730] (val) algo topological_sort step 3650: {'topo': 0.6591796875, 'topo_head': 1.0, 'score': 0.82958984375, 'examples_seen': 10165, 'step': 3650, 'algorithm': 'topological_sort'}
I0827 17:12:39.188579 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.762, val scores are: mst_kruskal: 0.783, mst_prim: 0.852, naive_string_matcher: 0.734, optimal_bst: 0.897, quickselect: 0.198, quicksort: 0.962, segments_intersect: 0.664, strongly_connected_components: 0.791, task_scheduling: 0.914, topological_sort: 0.830
I0827 17:12:56.663753 134493687799808 run.py:695] Algo mst_kruskal step 3700 current loss 0.062565, current_train_items 81705.
I0827 17:12:56.674393 134493687799808 run.py:695] Algo mst_prim step 3700 current loss 0.559911, current_train_items 75387.
I0827 17:12:56.683300 134493687799808 run.py:695] Algo naive_string_matcher step 3700 current loss 1.181635, current_train_items 50668.
I0827 17:12:56.696126 134493687799808 run.py:695] Algo optimal_bst step 3700 current loss 0.292828, current_train_items 22560.
I0827 17:12:56.773797 134493687799808 run.py:695] Algo quickselect step 3700 current loss 1.345430, current_train_items 8944.
I0827 17:12:56.784569 134493687799808 run.py:695] Algo quicksort step 3700 current loss 0.000000, current_train_items 5623.
I0827 17:12:56.802334 134493687799808 run.py:695] Algo segments_intersect step 3700 current loss 0.668571, current_train_items 94752.
I0827 17:12:56.813487 134493687799808 run.py:695] Algo strongly_connected_components step 3700 current loss 1.790967, current_train_items 4332.
I0827 17:12:56.831151 134493687799808 run.py:695] Algo task_scheduling step 3700 current loss 0.163883, current_train_items 22560.
I0827 17:12:56.843092 134493687799808 run.py:695] Algo topological_sort step 3700 current loss 2.631321, current_train_items 10305.
I0827 17:12:56.962484 134493687799808 run.py:730] (val) algo mst_kruskal step 3700: {'in_mst': 0.7697594501718213, 'score': 0.7697594501718213, 'examples_seen': 81705, 'step': 3700, 'algorithm': 'mst_kruskal'}
I0827 17:12:56.983666 134493687799808 run.py:730] (val) algo mst_prim step 3700: {'pi': 0.8388671875, 'score': 0.8388671875, 'examples_seen': 75387, 'step': 3700, 'algorithm': 'mst_prim'}
I0827 17:12:57.733101 134493687799808 run.py:730] (val) algo naive_string_matcher step 3700: {'match': 0.703369140625, 'score': 0.703369140625, 'examples_seen': 50668, 'step': 3700, 'algorithm': 'naive_string_matcher'}
I0827 17:12:57.781004 134493687799808 run.py:730] (val) algo optimal_bst step 3700: {'root': 0.89657223183391, 'score': 0.89657223183391, 'examples_seen': 22560, 'step': 3700, 'algorithm': 'optimal_bst'}
I0827 17:13:01.480172 134493687799808 run.py:730] (val) algo quickselect step 3700: {'median': 0.21044921875, 'score': 0.21044921875, 'examples_seen': 8944, 'step': 3700, 'algorithm': 'quickselect'}
I0827 17:13:01.626589 134493687799808 run.py:730] (val) algo quicksort step 3700: {'pred': 0.916015625, 'score': 0.916015625, 'examples_seen': 5623, 'step': 3700, 'algorithm': 'quicksort'}
I0827 17:13:02.134885 134493687799808 run.py:730] (val) algo segments_intersect step 3700: {'intersect': 0.663623258049015, 'score': 0.663623258049015, 'examples_seen': 94752, 'step': 3700, 'algorithm': 'segments_intersect'}
I0827 17:13:02.241124 134493687799808 run.py:730] (val) algo strongly_connected_components step 3700: {'scc_id': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 4332, 'step': 3700, 'algorithm': 'strongly_connected_components'}
I0827 17:13:02.254789 134493687799808 run.py:730] (val) algo task_scheduling step 3700: {'selected': 0.9190887666928516, 'score': 0.9190887666928516, 'examples_seen': 22560, 'step': 3700, 'algorithm': 'task_scheduling'}
I0827 17:13:02.308394 134493687799808 run.py:730] (val) algo topological_sort step 3700: {'topo': 0.6357421875, 'topo_head': 1.0, 'score': 0.81787109375, 'examples_seen': 10305, 'step': 3700, 'algorithm': 'topological_sort'}
I0827 17:13:02.308616 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.749, val scores are: mst_kruskal: 0.770, mst_prim: 0.839, naive_string_matcher: 0.703, optimal_bst: 0.897, quickselect: 0.210, quicksort: 0.916, segments_intersect: 0.664, strongly_connected_components: 0.753, task_scheduling: 0.919, topological_sort: 0.818
I0827 17:13:19.851857 134493687799808 run.py:695] Algo mst_kruskal step 3750 current loss 0.057250, current_train_items 82817.
I0827 17:13:19.862125 134493687799808 run.py:695] Algo mst_prim step 3750 current loss 0.333445, current_train_items 76418.
I0827 17:13:19.870587 134493687799808 run.py:695] Algo naive_string_matcher step 3750 current loss 1.581793, current_train_items 51342.
I0827 17:13:19.882677 134493687799808 run.py:695] Algo optimal_bst step 3750 current loss 0.365908, current_train_items 22864.
I0827 17:13:19.964285 134493687799808 run.py:695] Algo quickselect step 3750 current loss 1.690535, current_train_items 9066.
I0827 17:13:19.975661 134493687799808 run.py:695] Algo quicksort step 3750 current loss 5.309742, current_train_items 5700.
I0827 17:13:19.992797 134493687799808 run.py:695] Algo segments_intersect step 3750 current loss 0.751564, current_train_items 96032.
I0827 17:13:20.003762 134493687799808 run.py:695] Algo strongly_connected_components step 3750 current loss 0.000000, current_train_items 4390.
I0827 17:13:20.021162 134493687799808 run.py:695] Algo task_scheduling step 3750 current loss 0.193932, current_train_items 22864.
I0827 17:13:20.032333 134493687799808 run.py:695] Algo topological_sort step 3750 current loss 0.633098, current_train_items 10444.
I0827 17:13:20.146770 134493687799808 run.py:730] (val) algo mst_kruskal step 3750: {'in_mst': 0.837865055387714, 'score': 0.837865055387714, 'examples_seen': 82817, 'step': 3750, 'algorithm': 'mst_kruskal'}
I0827 17:13:20.167603 134493687799808 run.py:730] (val) algo mst_prim step 3750: {'pi': 0.8486328125, 'score': 0.8486328125, 'examples_seen': 76418, 'step': 3750, 'algorithm': 'mst_prim'}
I0827 17:13:20.914831 134493687799808 run.py:730] (val) algo naive_string_matcher step 3750: {'match': 0.705078125, 'score': 0.705078125, 'examples_seen': 51342, 'step': 3750, 'algorithm': 'naive_string_matcher'}
I0827 17:13:20.962830 134493687799808 run.py:730] (val) algo optimal_bst step 3750: {'root': 0.876784169550173, 'score': 0.876784169550173, 'examples_seen': 22864, 'step': 3750, 'algorithm': 'optimal_bst'}
I0827 17:13:24.638918 134493687799808 run.py:730] (val) algo quickselect step 3750: {'median': 0.215576171875, 'score': 0.215576171875, 'examples_seen': 9066, 'step': 3750, 'algorithm': 'quickselect'}
I0827 17:13:24.784989 134493687799808 run.py:730] (val) algo quicksort step 3750: {'pred': 0.943359375, 'score': 0.943359375, 'examples_seen': 5700, 'step': 3750, 'algorithm': 'quicksort'}
I0827 17:13:25.284718 134493687799808 run.py:730] (val) algo segments_intersect step 3750: {'intersect': 0.6847433116413593, 'score': 0.6847433116413593, 'examples_seen': 96032, 'step': 3750, 'algorithm': 'segments_intersect'}
I0827 17:13:25.390419 134493687799808 run.py:730] (val) algo strongly_connected_components step 3750: {'scc_id': 0.7744140625, 'score': 0.7744140625, 'examples_seen': 4390, 'step': 3750, 'algorithm': 'strongly_connected_components'}
I0827 17:13:25.404185 134493687799808 run.py:730] (val) algo task_scheduling step 3750: {'selected': 0.8981636060100167, 'score': 0.8981636060100167, 'examples_seen': 22864, 'step': 3750, 'algorithm': 'task_scheduling'}
I0827 17:13:25.458978 134493687799808 run.py:730] (val) algo topological_sort step 3750: {'topo': 0.599609375, 'topo_head': 1.0, 'score': 0.7998046875, 'examples_seen': 10444, 'step': 3750, 'algorithm': 'topological_sort'}
I0827 17:13:25.459152 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.758, val scores are: mst_kruskal: 0.838, mst_prim: 0.849, naive_string_matcher: 0.705, optimal_bst: 0.877, quickselect: 0.216, quicksort: 0.943, segments_intersect: 0.685, strongly_connected_components: 0.774, task_scheduling: 0.898, topological_sort: 0.800
I0827 17:13:43.009845 134493687799808 run.py:695] Algo mst_kruskal step 3800 current loss 0.110878, current_train_items 83942.
I0827 17:13:43.020131 134493687799808 run.py:695] Algo mst_prim step 3800 current loss 0.300250, current_train_items 77426.
I0827 17:13:43.029145 134493687799808 run.py:695] Algo naive_string_matcher step 3800 current loss 1.516711, current_train_items 52040.
I0827 17:13:43.041338 134493687799808 run.py:695] Algo optimal_bst step 3800 current loss 0.414252, current_train_items 23168.
I0827 17:13:43.128050 134493687799808 run.py:695] Algo quickselect step 3800 current loss 1.807961, current_train_items 9185.
I0827 17:13:43.139489 134493687799808 run.py:695] Algo quicksort step 3800 current loss 1.702794, current_train_items 5774.
I0827 17:13:43.155535 134493687799808 run.py:695] Algo segments_intersect step 3800 current loss 0.640816, current_train_items 97312.
I0827 17:13:43.165641 134493687799808 run.py:695] Algo strongly_connected_components step 3800 current loss 0.000000, current_train_items 4448.
I0827 17:13:43.183243 134493687799808 run.py:695] Algo task_scheduling step 3800 current loss 0.164760, current_train_items 23168.
I0827 17:13:43.195016 134493687799808 run.py:695] Algo topological_sort step 3800 current loss 1.778535, current_train_items 10584.
I0827 17:13:43.309813 134493687799808 run.py:730] (val) algo mst_kruskal step 3800: {'in_mst': 0.8246392896781355, 'score': 0.8246392896781355, 'examples_seen': 83942, 'step': 3800, 'algorithm': 'mst_kruskal'}
I0827 17:13:43.330681 134493687799808 run.py:730] (val) algo mst_prim step 3800: {'pi': 0.8427734375, 'score': 0.8427734375, 'examples_seen': 77426, 'step': 3800, 'algorithm': 'mst_prim'}
I0827 17:13:44.080281 134493687799808 run.py:730] (val) algo naive_string_matcher step 3800: {'match': 0.72412109375, 'score': 0.72412109375, 'examples_seen': 52040, 'step': 3800, 'algorithm': 'naive_string_matcher'}
I0827 17:13:44.128067 134493687799808 run.py:730] (val) algo optimal_bst step 3800: {'root': 0.8835423875432526, 'score': 0.8835423875432526, 'examples_seen': 23168, 'step': 3800, 'algorithm': 'optimal_bst'}
I0827 17:13:47.810073 134493687799808 run.py:730] (val) algo quickselect step 3800: {'median': 0.22314453125, 'score': 0.22314453125, 'examples_seen': 9185, 'step': 3800, 'algorithm': 'quickselect'}
I0827 17:13:47.955192 134493687799808 run.py:730] (val) algo quicksort step 3800: {'pred': 0.900390625, 'score': 0.900390625, 'examples_seen': 5774, 'step': 3800, 'algorithm': 'quicksort'}
I0827 17:13:48.473810 134493687799808 run.py:730] (val) algo segments_intersect step 3800: {'intersect': 0.6831292799335961, 'score': 0.6831292799335961, 'examples_seen': 97312, 'step': 3800, 'algorithm': 'segments_intersect'}
I0827 17:13:48.578751 134493687799808 run.py:730] (val) algo strongly_connected_components step 3800: {'scc_id': 0.7705078125, 'score': 0.7705078125, 'examples_seen': 4448, 'step': 3800, 'algorithm': 'strongly_connected_components'}
I0827 17:13:48.592235 134493687799808 run.py:730] (val) algo task_scheduling step 3800: {'selected': 0.9401294498381877, 'score': 0.9401294498381877, 'examples_seen': 23168, 'step': 3800, 'algorithm': 'task_scheduling'}
I0827 17:13:48.646277 134493687799808 run.py:730] (val) algo topological_sort step 3800: {'topo': 0.6318359375, 'topo_head': 1.0, 'score': 0.81591796875, 'examples_seen': 10584, 'step': 3800, 'algorithm': 'topological_sort'}
I0827 17:13:48.646447 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.761, val scores are: mst_kruskal: 0.825, mst_prim: 0.843, naive_string_matcher: 0.724, optimal_bst: 0.884, quickselect: 0.223, quicksort: 0.900, segments_intersect: 0.683, strongly_connected_components: 0.771, task_scheduling: 0.940, topological_sort: 0.816
I0827 17:14:06.818013 134493687799808 run.py:695] Algo mst_kruskal step 3850 current loss 0.086778, current_train_items 84997.
I0827 17:14:06.828567 134493687799808 run.py:695] Algo mst_prim step 3850 current loss 0.331045, current_train_items 78453.
I0827 17:14:06.837782 134493687799808 run.py:695] Algo naive_string_matcher step 3850 current loss 1.345179, current_train_items 52720.
I0827 17:14:06.849740 134493687799808 run.py:695] Algo optimal_bst step 3850 current loss 0.757446, current_train_items 23472.
I0827 17:14:06.928049 134493687799808 run.py:695] Algo quickselect step 3850 current loss 1.417572, current_train_items 9306.
I0827 17:14:06.938343 134493687799808 run.py:695] Algo quicksort step 3850 current loss 0.000000, current_train_items 5852.
I0827 17:14:06.955776 134493687799808 run.py:695] Algo segments_intersect step 3850 current loss 0.580918, current_train_items 98592.
I0827 17:14:06.966360 134493687799808 run.py:695] Algo strongly_connected_components step 3850 current loss 0.000000, current_train_items 4505.
I0827 17:14:06.990492 134493687799808 run.py:695] Algo task_scheduling step 3850 current loss 2.287510, current_train_items 23472.
I0827 17:14:07.006210 134493687799808 run.py:695] Algo topological_sort step 3850 current loss 2.176483, current_train_items 10720.
I0827 17:14:07.121223 134493687799808 run.py:730] (val) algo mst_kruskal step 3850: {'in_mst': 0.7169069462647444, 'score': 0.7169069462647444, 'examples_seen': 84997, 'step': 3850, 'algorithm': 'mst_kruskal'}
I0827 17:14:07.142418 134493687799808 run.py:730] (val) algo mst_prim step 3850: {'pi': 0.822265625, 'score': 0.822265625, 'examples_seen': 78453, 'step': 3850, 'algorithm': 'mst_prim'}
I0827 17:14:07.885393 134493687799808 run.py:730] (val) algo naive_string_matcher step 3850: {'match': 0.756591796875, 'score': 0.756591796875, 'examples_seen': 52720, 'step': 3850, 'algorithm': 'naive_string_matcher'}
I0827 17:14:07.933389 134493687799808 run.py:730] (val) algo optimal_bst step 3850: {'root': 0.8768923010380623, 'score': 0.8768923010380623, 'examples_seen': 23472, 'step': 3850, 'algorithm': 'optimal_bst'}
I0827 17:14:11.622949 134493687799808 run.py:730] (val) algo quickselect step 3850: {'median': 0.220947265625, 'score': 0.220947265625, 'examples_seen': 9306, 'step': 3850, 'algorithm': 'quickselect'}
I0827 17:14:11.768781 134493687799808 run.py:730] (val) algo quicksort step 3850: {'pred': 0.69921875, 'score': 0.69921875, 'examples_seen': 5852, 'step': 3850, 'algorithm': 'quicksort'}
I0827 17:14:12.284665 134493687799808 run.py:730] (val) algo segments_intersect step 3850: {'intersect': 0.6759163387864981, 'score': 0.6759163387864981, 'examples_seen': 98592, 'step': 3850, 'algorithm': 'segments_intersect'}
I0827 17:14:12.389863 134493687799808 run.py:730] (val) algo strongly_connected_components step 3850: {'scc_id': 0.755859375, 'score': 0.755859375, 'examples_seen': 4505, 'step': 3850, 'algorithm': 'strongly_connected_components'}
I0827 17:14:12.403341 134493687799808 run.py:730] (val) algo task_scheduling step 3850: {'selected': 0.92776886035313, 'score': 0.92776886035313, 'examples_seen': 23472, 'step': 3850, 'algorithm': 'task_scheduling'}
I0827 17:14:12.458122 134493687799808 run.py:730] (val) algo topological_sort step 3850: {'topo': 0.662109375, 'topo_head': 0.984375, 'score': 0.8232421875, 'examples_seen': 10720, 'step': 3850, 'algorithm': 'topological_sort'}
I0827 17:14:12.458286 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.728, val scores are: mst_kruskal: 0.717, mst_prim: 0.822, naive_string_matcher: 0.757, optimal_bst: 0.877, quickselect: 0.221, quicksort: 0.699, segments_intersect: 0.676, strongly_connected_components: 0.756, task_scheduling: 0.928, topological_sort: 0.823
W0827 17:14:20.918196 134493687799808 samplers.py:175] Increasing hint lengh from 39 to 46
I0827 17:14:30.014998 134493687799808 run.py:695] Algo mst_kruskal step 3900 current loss 0.106829, current_train_items 86145.
I0827 17:14:30.024936 134493687799808 run.py:695] Algo mst_prim step 3900 current loss 0.365538, current_train_items 79485.
I0827 17:14:30.033353 134493687799808 run.py:695] Algo naive_string_matcher step 3900 current loss 1.300982, current_train_items 53400.
I0827 17:14:30.045845 134493687799808 run.py:695] Algo optimal_bst step 3900 current loss 0.000000, current_train_items 23776.
I0827 17:14:30.123656 134493687799808 run.py:695] Algo quickselect step 3900 current loss 2.185194, current_train_items 9423.
I0827 17:14:30.134511 134493687799808 run.py:695] Algo quicksort step 3900 current loss 9.998358, current_train_items 5929.
I0827 17:14:30.151882 134493687799808 run.py:695] Algo segments_intersect step 3900 current loss 0.647532, current_train_items 99872.
I0827 17:14:30.161754 134493687799808 run.py:695] Algo strongly_connected_components step 3900 current loss 3.112576, current_train_items 4567.
I0827 17:14:30.179791 134493687799808 run.py:695] Algo task_scheduling step 3900 current loss 0.000000, current_train_items 23776.
I0827 17:14:30.191504 134493687799808 run.py:695] Algo topological_sort step 3900 current loss 0.000000, current_train_items 10861.
I0827 17:14:30.306929 134493687799808 run.py:730] (val) algo mst_kruskal step 3900: {'in_mst': 0.8442953020134227, 'score': 0.8442953020134227, 'examples_seen': 86145, 'step': 3900, 'algorithm': 'mst_kruskal'}
I0827 17:14:30.328511 134493687799808 run.py:730] (val) algo mst_prim step 3900: {'pi': 0.845703125, 'score': 0.845703125, 'examples_seen': 79485, 'step': 3900, 'algorithm': 'mst_prim'}
I0827 17:14:31.071260 134493687799808 run.py:730] (val) algo naive_string_matcher step 3900: {'match': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 53400, 'step': 3900, 'algorithm': 'naive_string_matcher'}
I0827 17:14:31.119211 134493687799808 run.py:730] (val) algo optimal_bst step 3900: {'root': 0.8967884948096886, 'score': 0.8967884948096886, 'examples_seen': 23776, 'step': 3900, 'algorithm': 'optimal_bst'}
I0827 17:14:34.805567 134493687799808 run.py:730] (val) algo quickselect step 3900: {'median': 0.22314453125, 'score': 0.22314453125, 'examples_seen': 9423, 'step': 3900, 'algorithm': 'quickselect'}
I0827 17:14:34.951008 134493687799808 run.py:730] (val) algo quicksort step 3900: {'pred': 0.900390625, 'score': 0.900390625, 'examples_seen': 5929, 'step': 3900, 'algorithm': 'quicksort'}
I0827 17:14:35.458553 134493687799808 run.py:730] (val) algo segments_intersect step 3900: {'intersect': 0.5789183222958058, 'score': 0.5789183222958058, 'examples_seen': 99872, 'step': 3900, 'algorithm': 'segments_intersect'}
I0827 17:14:35.563178 134493687799808 run.py:730] (val) algo strongly_connected_components step 3900: {'scc_id': 0.7744140625, 'score': 0.7744140625, 'examples_seen': 4567, 'step': 3900, 'algorithm': 'strongly_connected_components'}
I0827 17:14:35.576704 134493687799808 run.py:730] (val) algo task_scheduling step 3900: {'selected': 0.9424572317262832, 'score': 0.9424572317262832, 'examples_seen': 23776, 'step': 3900, 'algorithm': 'task_scheduling'}
I0827 17:14:35.630113 134493687799808 run.py:730] (val) algo topological_sort step 3900: {'topo': 0.6611328125, 'topo_head': 0.984375, 'score': 0.82275390625, 'examples_seen': 10861, 'step': 3900, 'algorithm': 'topological_sort'}
I0827 17:14:35.630284 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.760, val scores are: mst_kruskal: 0.844, mst_prim: 0.846, naive_string_matcher: 0.772, optimal_bst: 0.897, quickselect: 0.223, quicksort: 0.900, segments_intersect: 0.579, strongly_connected_components: 0.774, task_scheduling: 0.942, topological_sort: 0.823
I0827 17:14:53.373484 134493687799808 run.py:695] Algo mst_kruskal step 3950 current loss 0.108000, current_train_items 87293.
I0827 17:14:53.384369 134493687799808 run.py:695] Algo mst_prim step 3950 current loss 0.307749, current_train_items 80492.
I0827 17:14:53.394178 134493687799808 run.py:695] Algo naive_string_matcher step 3950 current loss 2.163459, current_train_items 54071.
I0827 17:14:53.406573 134493687799808 run.py:695] Algo optimal_bst step 3950 current loss 0.000000, current_train_items 24080.
I0827 17:14:53.483676 134493687799808 run.py:695] Algo quickselect step 3950 current loss 1.626561, current_train_items 9545.
I0827 17:14:53.495228 134493687799808 run.py:695] Algo quicksort step 3950 current loss 0.000000, current_train_items 6004.
I0827 17:14:53.513030 134493687799808 run.py:695] Algo segments_intersect step 3950 current loss 0.643925, current_train_items 101152.
I0827 17:14:53.524437 134493687799808 run.py:695] Algo strongly_connected_components step 3950 current loss 1.459287, current_train_items 4624.
I0827 17:14:53.542567 134493687799808 run.py:695] Algo task_scheduling step 3950 current loss 0.000000, current_train_items 24080.
I0827 17:14:53.554435 134493687799808 run.py:695] Algo topological_sort step 3950 current loss 1.349872, current_train_items 11002.
I0827 17:14:53.674173 134493687799808 run.py:730] (val) algo mst_kruskal step 3950: {'in_mst': 0.8058095750403442, 'score': 0.8058095750403442, 'examples_seen': 87293, 'step': 3950, 'algorithm': 'mst_kruskal'}
I0827 17:14:53.695370 134493687799808 run.py:730] (val) algo mst_prim step 3950: {'pi': 0.8330078125, 'score': 0.8330078125, 'examples_seen': 80492, 'step': 3950, 'algorithm': 'mst_prim'}
I0827 17:14:54.441969 134493687799808 run.py:730] (val) algo naive_string_matcher step 3950: {'match': 0.7353515625, 'score': 0.7353515625, 'examples_seen': 54071, 'step': 3950, 'algorithm': 'naive_string_matcher'}
I0827 17:14:54.490048 134493687799808 run.py:730] (val) algo optimal_bst step 3950: {'root': 0.9021950692041523, 'score': 0.9021950692041523, 'examples_seen': 24080, 'step': 3950, 'algorithm': 'optimal_bst'}
I0827 17:14:58.176101 134493687799808 run.py:730] (val) algo quickselect step 3950: {'median': 0.195068359375, 'score': 0.195068359375, 'examples_seen': 9545, 'step': 3950, 'algorithm': 'quickselect'}
I0827 17:14:58.321724 134493687799808 run.py:730] (val) algo quicksort step 3950: {'pred': 0.927734375, 'score': 0.927734375, 'examples_seen': 6004, 'step': 3950, 'algorithm': 'quicksort'}
I0827 17:14:58.821945 134493687799808 run.py:730] (val) algo segments_intersect step 3950: {'intersect': 0.4780927835051546, 'score': 0.4780927835051546, 'examples_seen': 101152, 'step': 3950, 'algorithm': 'segments_intersect'}
I0827 17:14:58.927920 134493687799808 run.py:730] (val) algo strongly_connected_components step 3950: {'scc_id': 0.697265625, 'score': 0.697265625, 'examples_seen': 4624, 'step': 3950, 'algorithm': 'strongly_connected_components'}
I0827 17:14:58.941744 134493687799808 run.py:730] (val) algo task_scheduling step 3950: {'selected': 0.9168724279835392, 'score': 0.9168724279835392, 'examples_seen': 24080, 'step': 3950, 'algorithm': 'task_scheduling'}
I0827 17:14:58.995175 134493687799808 run.py:730] (val) algo topological_sort step 3950: {'topo': 0.62109375, 'topo_head': 1.0, 'score': 0.810546875, 'examples_seen': 11002, 'step': 3950, 'algorithm': 'topological_sort'}
I0827 17:14:58.995355 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.760, current avg val score is 0.730, val scores are: mst_kruskal: 0.806, mst_prim: 0.833, naive_string_matcher: 0.735, optimal_bst: 0.902, quickselect: 0.195, quicksort: 0.928, segments_intersect: 0.478, strongly_connected_components: 0.697, task_scheduling: 0.917, topological_sort: 0.811
I0827 17:15:17.237288 134493687799808 run.py:695] Algo mst_kruskal step 4000 current loss 0.135655, current_train_items 88381.
I0827 17:15:17.248380 134493687799808 run.py:695] Algo mst_prim step 4000 current loss 0.422233, current_train_items 81557.
I0827 17:15:17.257682 134493687799808 run.py:695] Algo naive_string_matcher step 4000 current loss 0.963391, current_train_items 54750.
I0827 17:15:17.269880 134493687799808 run.py:695] Algo optimal_bst step 4000 current loss 0.000000, current_train_items 24384.
I0827 17:15:17.347196 134493687799808 run.py:695] Algo quickselect step 4000 current loss 3.705360, current_train_items 9664.
I0827 17:15:17.357681 134493687799808 run.py:695] Algo quicksort step 4000 current loss 2.746557, current_train_items 6082.
I0827 17:15:17.375736 134493687799808 run.py:695] Algo segments_intersect step 4000 current loss 0.693421, current_train_items 102432.
I0827 17:15:17.386451 134493687799808 run.py:695] Algo strongly_connected_components step 4000 current loss 1.216852, current_train_items 4683.
I0827 17:15:17.405111 134493687799808 run.py:695] Algo task_scheduling step 4000 current loss 0.000000, current_train_items 24384.
I0827 17:15:17.417828 134493687799808 run.py:695] Algo topological_sort step 4000 current loss 0.643289, current_train_items 11140.
I0827 17:15:17.539540 134493687799808 run.py:730] (val) algo mst_kruskal step 4000: {'in_mst': 0.7847579814624099, 'score': 0.7847579814624099, 'examples_seen': 88381, 'step': 4000, 'algorithm': 'mst_kruskal'}
I0827 17:15:17.560890 134493687799808 run.py:730] (val) algo mst_prim step 4000: {'pi': 0.8662109375, 'score': 0.8662109375, 'examples_seen': 81557, 'step': 4000, 'algorithm': 'mst_prim'}
I0827 17:15:18.298931 134493687799808 run.py:730] (val) algo naive_string_matcher step 4000: {'match': 0.75048828125, 'score': 0.75048828125, 'examples_seen': 54750, 'step': 4000, 'algorithm': 'naive_string_matcher'}
I0827 17:15:18.347022 134493687799808 run.py:730] (val) algo optimal_bst step 4000: {'root': 0.8946258650519031, 'score': 0.8946258650519031, 'examples_seen': 24384, 'step': 4000, 'algorithm': 'optimal_bst'}
I0827 17:15:22.028406 134493687799808 run.py:730] (val) algo quickselect step 4000: {'median': 0.184814453125, 'score': 0.184814453125, 'examples_seen': 9664, 'step': 4000, 'algorithm': 'quickselect'}
I0827 17:15:22.174178 134493687799808 run.py:730] (val) algo quicksort step 4000: {'pred': 0.9306640625, 'score': 0.9306640625, 'examples_seen': 6082, 'step': 4000, 'algorithm': 'quicksort'}
I0827 17:15:22.681016 134493687799808 run.py:730] (val) algo segments_intersect step 4000: {'intersect': 0.6638042078145127, 'score': 0.6638042078145127, 'examples_seen': 102432, 'step': 4000, 'algorithm': 'segments_intersect'}
I0827 17:15:22.786999 134493687799808 run.py:730] (val) algo strongly_connected_components step 4000: {'scc_id': 0.771484375, 'score': 0.771484375, 'examples_seen': 4683, 'step': 4000, 'algorithm': 'strongly_connected_components'}
I0827 17:15:22.800511 134493687799808 run.py:730] (val) algo task_scheduling step 4000: {'selected': 0.9336569579288025, 'score': 0.9336569579288025, 'examples_seen': 24384, 'step': 4000, 'algorithm': 'task_scheduling'}
I0827 17:15:22.854873 134493687799808 run.py:730] (val) algo topological_sort step 4000: {'topo': 0.646484375, 'topo_head': 1.0, 'score': 0.8232421875, 'examples_seen': 11140, 'step': 4000, 'algorithm': 'topological_sort'}
I0827 17:15:22.855051 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.760, current avg val score is 0.760, val scores are: mst_kruskal: 0.785, mst_prim: 0.866, naive_string_matcher: 0.750, optimal_bst: 0.895, quickselect: 0.185, quicksort: 0.931, segments_intersect: 0.664, strongly_connected_components: 0.771, task_scheduling: 0.934, topological_sort: 0.823
I0827 17:15:40.450044 134493687799808 run.py:695] Algo mst_kruskal step 4050 current loss 0.067719, current_train_items 89471.
I0827 17:15:40.460765 134493687799808 run.py:695] Algo mst_prim step 4050 current loss 0.424920, current_train_items 82575.
I0827 17:15:40.469615 134493687799808 run.py:695] Algo naive_string_matcher step 4050 current loss 1.351476, current_train_items 55427.
I0827 17:15:40.481721 134493687799808 run.py:695] Algo optimal_bst step 4050 current loss 0.000000, current_train_items 24688.
I0827 17:15:40.559438 134493687799808 run.py:695] Algo quickselect step 4050 current loss 2.445043, current_train_items 9787.
I0827 17:15:40.571441 134493687799808 run.py:695] Algo quicksort step 4050 current loss 3.028192, current_train_items 6158.
I0827 17:15:40.597590 134493687799808 run.py:695] Algo segments_intersect step 4050 current loss 0.686286, current_train_items 103712.
I0827 17:15:40.608913 134493687799808 run.py:695] Algo strongly_connected_components step 4050 current loss 1.198732, current_train_items 4742.
I0827 17:15:40.628881 134493687799808 run.py:695] Algo task_scheduling step 4050 current loss 0.000000, current_train_items 24688.
I0827 17:15:40.640059 134493687799808 run.py:695] Algo topological_sort step 4050 current loss 1.578856, current_train_items 11278.
I0827 17:15:40.760825 134493687799808 run.py:730] (val) algo mst_kruskal step 4050: {'in_mst': 0.8368794326241135, 'score': 0.8368794326241135, 'examples_seen': 89471, 'step': 4050, 'algorithm': 'mst_kruskal'}
I0827 17:15:40.781998 134493687799808 run.py:730] (val) algo mst_prim step 4050: {'pi': 0.841796875, 'score': 0.841796875, 'examples_seen': 82575, 'step': 4050, 'algorithm': 'mst_prim'}
I0827 17:15:41.529254 134493687799808 run.py:730] (val) algo naive_string_matcher step 4050: {'match': 0.74755859375, 'score': 0.74755859375, 'examples_seen': 55427, 'step': 4050, 'algorithm': 'naive_string_matcher'}
I0827 17:15:41.577153 134493687799808 run.py:730] (val) algo optimal_bst step 4050: {'root': 0.893760813148789, 'score': 0.893760813148789, 'examples_seen': 24688, 'step': 4050, 'algorithm': 'optimal_bst'}
I0827 17:15:45.259537 134493687799808 run.py:730] (val) algo quickselect step 4050: {'median': 0.193359375, 'score': 0.193359375, 'examples_seen': 9787, 'step': 4050, 'algorithm': 'quickselect'}
I0827 17:15:45.405646 134493687799808 run.py:730] (val) algo quicksort step 4050: {'pred': 0.853515625, 'score': 0.853515625, 'examples_seen': 6158, 'step': 4050, 'algorithm': 'quicksort'}
I0827 17:15:45.905565 134493687799808 run.py:730] (val) algo segments_intersect step 4050: {'intersect': 0.6877558615556382, 'score': 0.6877558615556382, 'examples_seen': 103712, 'step': 4050, 'algorithm': 'segments_intersect'}
I0827 17:15:46.011187 134493687799808 run.py:730] (val) algo strongly_connected_components step 4050: {'scc_id': 0.732421875, 'score': 0.732421875, 'examples_seen': 4742, 'step': 4050, 'algorithm': 'strongly_connected_components'}
I0827 17:15:46.024819 134493687799808 run.py:730] (val) algo task_scheduling step 4050: {'selected': 0.9303405572755419, 'score': 0.9303405572755419, 'examples_seen': 24688, 'step': 4050, 'algorithm': 'task_scheduling'}
I0827 17:15:46.078906 134493687799808 run.py:730] (val) algo topological_sort step 4050: {'topo': 0.66796875, 'topo_head': 1.0, 'score': 0.833984375, 'examples_seen': 11278, 'step': 4050, 'algorithm': 'topological_sort'}
I0827 17:15:46.079066 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.760, current avg val score is 0.755, val scores are: mst_kruskal: 0.837, mst_prim: 0.842, naive_string_matcher: 0.748, optimal_bst: 0.894, quickselect: 0.193, quicksort: 0.854, segments_intersect: 0.688, strongly_connected_components: 0.732, task_scheduling: 0.930, topological_sort: 0.834
I0827 17:16:03.445893 134493687799808 run.py:695] Algo mst_kruskal step 4100 current loss 0.062334, current_train_items 90588.
I0827 17:16:03.469808 134493687799808 run.py:695] Algo mst_prim step 4100 current loss 0.523276, current_train_items 83598.
I0827 17:16:03.492052 134493687799808 run.py:695] Algo naive_string_matcher step 4100 current loss 1.260607, current_train_items 56085.
I0827 17:16:03.511853 134493687799808 run.py:695] Algo optimal_bst step 4100 current loss 0.000000, current_train_items 24992.
I0827 17:16:03.597663 134493687799808 run.py:695] Algo quickselect step 4100 current loss 2.380327, current_train_items 9907.
I0827 17:16:03.617556 134493687799808 run.py:695] Algo quicksort step 4100 current loss 0.000000, current_train_items 6233.
I0827 17:16:03.642111 134493687799808 run.py:695] Algo segments_intersect step 4100 current loss 0.633739, current_train_items 104992.
I0827 17:16:03.663729 134493687799808 run.py:695] Algo strongly_connected_components step 4100 current loss 0.000000, current_train_items 4799.
I0827 17:16:03.686509 134493687799808 run.py:695] Algo task_scheduling step 4100 current loss 0.000000, current_train_items 24992.
I0827 17:16:03.706498 134493687799808 run.py:695] Algo topological_sort step 4100 current loss 2.115366, current_train_items 11418.
I0827 17:16:03.870989 134493687799808 run.py:730] (val) algo mst_kruskal step 4100: {'in_mst': 0.8393077873918419, 'score': 0.8393077873918419, 'examples_seen': 90588, 'step': 4100, 'algorithm': 'mst_kruskal'}
I0827 17:16:03.895112 134493687799808 run.py:730] (val) algo mst_prim step 4100: {'pi': 0.85546875, 'score': 0.85546875, 'examples_seen': 83598, 'step': 4100, 'algorithm': 'mst_prim'}
I0827 17:16:04.791698 134493687799808 run.py:730] (val) algo naive_string_matcher step 4100: {'match': 0.691162109375, 'score': 0.691162109375, 'examples_seen': 56085, 'step': 4100, 'algorithm': 'naive_string_matcher'}
I0827 17:16:04.839957 134493687799808 run.py:730] (val) algo optimal_bst step 4100: {'root': 0.8917063148788927, 'score': 0.8917063148788927, 'examples_seen': 24992, 'step': 4100, 'algorithm': 'optimal_bst'}
I0827 17:16:08.536942 134493687799808 run.py:730] (val) algo quickselect step 4100: {'median': 0.2021484375, 'score': 0.2021484375, 'examples_seen': 9907, 'step': 4100, 'algorithm': 'quickselect'}
I0827 17:16:08.683211 134493687799808 run.py:730] (val) algo quicksort step 4100: {'pred': 0.716796875, 'score': 0.716796875, 'examples_seen': 6233, 'step': 4100, 'algorithm': 'quicksort'}
I0827 17:16:09.181209 134493687799808 run.py:730] (val) algo segments_intersect step 4100: {'intersect': 0.5509918971779826, 'score': 0.5509918971779826, 'examples_seen': 104992, 'step': 4100, 'algorithm': 'segments_intersect'}
I0827 17:16:09.286192 134493687799808 run.py:730] (val) algo strongly_connected_components step 4100: {'scc_id': 0.7587890625, 'score': 0.7587890625, 'examples_seen': 4799, 'step': 4100, 'algorithm': 'strongly_connected_components'}
I0827 17:16:09.299964 134493687799808 run.py:730] (val) algo task_scheduling step 4100: {'selected': 0.9272581934452437, 'score': 0.9272581934452437, 'examples_seen': 24992, 'step': 4100, 'algorithm': 'task_scheduling'}
I0827 17:16:09.353778 134493687799808 run.py:730] (val) algo topological_sort step 4100: {'topo': 0.6494140625, 'topo_head': 1.0, 'score': 0.82470703125, 'examples_seen': 11418, 'step': 4100, 'algorithm': 'topological_sort'}
I0827 17:16:09.353940 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.760, current avg val score is 0.726, val scores are: mst_kruskal: 0.839, mst_prim: 0.855, naive_string_matcher: 0.691, optimal_bst: 0.892, quickselect: 0.202, quicksort: 0.717, segments_intersect: 0.551, strongly_connected_components: 0.759, task_scheduling: 0.927, topological_sort: 0.825
I0827 17:16:26.246438 134493687799808 run.py:695] Algo mst_kruskal step 4150 current loss 0.110351, current_train_items 91719.
I0827 17:16:26.256792 134493687799808 run.py:695] Algo mst_prim step 4150 current loss 0.508502, current_train_items 84634.
I0827 17:16:26.265555 134493687799808 run.py:695] Algo naive_string_matcher step 4150 current loss 0.953572, current_train_items 56763.
I0827 17:16:26.279638 134493687799808 run.py:695] Algo optimal_bst step 4150 current loss 0.000000, current_train_items 25296.
I0827 17:16:26.358410 134493687799808 run.py:695] Algo quickselect step 4150 current loss 0.000000, current_train_items 10028.
I0827 17:16:26.377395 134493687799808 run.py:695] Algo quicksort step 4150 current loss 0.000000, current_train_items 6310.
I0827 17:16:26.393038 134493687799808 run.py:695] Algo segments_intersect step 4150 current loss 0.633688, current_train_items 106272.
I0827 17:16:26.407676 134493687799808 run.py:695] Algo strongly_connected_components step 4150 current loss 0.000000, current_train_items 4860.
I0827 17:16:26.429197 134493687799808 run.py:695] Algo task_scheduling step 4150 current loss 0.000000, current_train_items 25296.
I0827 17:16:26.449208 134493687799808 run.py:695] Algo topological_sort step 4150 current loss 1.170336, current_train_items 11560.
I0827 17:16:26.627412 134493687799808 run.py:730] (val) algo mst_kruskal step 4150: {'in_mst': 0.8427672955974843, 'score': 0.8427672955974843, 'examples_seen': 91719, 'step': 4150, 'algorithm': 'mst_kruskal'}
I0827 17:16:26.650737 134493687799808 run.py:730] (val) algo mst_prim step 4150: {'pi': 0.8603515625, 'score': 0.8603515625, 'examples_seen': 84634, 'step': 4150, 'algorithm': 'mst_prim'}
I0827 17:16:27.838727 134493687799808 run.py:730] (val) algo naive_string_matcher step 4150: {'match': 0.71630859375, 'score': 0.71630859375, 'examples_seen': 56763, 'step': 4150, 'algorithm': 'naive_string_matcher'}
I0827 17:16:27.889038 134493687799808 run.py:730] (val) algo optimal_bst step 4150: {'root': 0.8923551038062284, 'score': 0.8923551038062284, 'examples_seen': 25296, 'step': 4150, 'algorithm': 'optimal_bst'}
I0827 17:16:31.572185 134493687799808 run.py:730] (val) algo quickselect step 4150: {'median': 0.224853515625, 'score': 0.224853515625, 'examples_seen': 10028, 'step': 4150, 'algorithm': 'quickselect'}
I0827 17:16:31.718230 134493687799808 run.py:730] (val) algo quicksort step 4150: {'pred': 0.8544921875, 'score': 0.8544921875, 'examples_seen': 6310, 'step': 4150, 'algorithm': 'quicksort'}
I0827 17:16:32.217015 134493687799808 run.py:730] (val) algo segments_intersect step 4150: {'intersect': 0.5405563689604687, 'score': 0.5405563689604687, 'examples_seen': 106272, 'step': 4150, 'algorithm': 'segments_intersect'}
I0827 17:16:32.322413 134493687799808 run.py:730] (val) algo strongly_connected_components step 4150: {'scc_id': 0.7421875, 'score': 0.7421875, 'examples_seen': 4860, 'step': 4150, 'algorithm': 'strongly_connected_components'}
I0827 17:16:32.336524 134493687799808 run.py:730] (val) algo task_scheduling step 4150: {'selected': 0.9188311688311688, 'score': 0.9188311688311688, 'examples_seen': 25296, 'step': 4150, 'algorithm': 'task_scheduling'}
I0827 17:16:32.390862 134493687799808 run.py:730] (val) algo topological_sort step 4150: {'topo': 0.6044921875, 'topo_head': 1.0, 'score': 0.80224609375, 'examples_seen': 11560, 'step': 4150, 'algorithm': 'topological_sort'}
I0827 17:16:32.391052 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.760, current avg val score is 0.739, val scores are: mst_kruskal: 0.843, mst_prim: 0.860, naive_string_matcher: 0.716, optimal_bst: 0.892, quickselect: 0.225, quicksort: 0.854, segments_intersect: 0.541, strongly_connected_components: 0.742, task_scheduling: 0.919, topological_sort: 0.802
W0827 17:16:45.486891 134493687799808 samplers.py:175] Increasing hint lengh from 29 to 34
I0827 17:16:49.856556 134493687799808 run.py:695] Algo mst_kruskal step 4200 current loss 0.130089, current_train_items 92808.
I0827 17:16:49.867130 134493687799808 run.py:695] Algo mst_prim step 4200 current loss 0.256909, current_train_items 85630.
I0827 17:16:49.876447 134493687799808 run.py:695] Algo naive_string_matcher step 4200 current loss 1.406679, current_train_items 57439.
I0827 17:16:49.888315 134493687799808 run.py:695] Algo optimal_bst step 4200 current loss 0.000000, current_train_items 25600.
I0827 17:16:49.966644 134493687799808 run.py:695] Algo quickselect step 4200 current loss 0.000000, current_train_items 10154.
I0827 17:16:49.977158 134493687799808 run.py:695] Algo quicksort step 4200 current loss 2.381308, current_train_items 6388.
I0827 17:16:49.994333 134493687799808 run.py:695] Algo segments_intersect step 4200 current loss 0.629239, current_train_items 107552.
I0827 17:16:50.005028 134493687799808 run.py:695] Algo strongly_connected_components step 4200 current loss 0.010732, current_train_items 4919.
I0827 17:16:50.023105 134493687799808 run.py:695] Algo task_scheduling step 4200 current loss 0.000000, current_train_items 25600.
I0827 17:16:50.034973 134493687799808 run.py:695] Algo topological_sort step 4200 current loss 2.755650, current_train_items 11698.
I0827 17:16:50.148035 134493687799808 run.py:730] (val) algo mst_kruskal step 4200: {'in_mst': 0.8639365918097753, 'score': 0.8639365918097753, 'examples_seen': 92808, 'step': 4200, 'algorithm': 'mst_kruskal'}
I0827 17:16:50.170648 134493687799808 run.py:730] (val) algo mst_prim step 4200: {'pi': 0.8642578125, 'score': 0.8642578125, 'examples_seen': 85630, 'step': 4200, 'algorithm': 'mst_prim'}
I0827 17:16:51.207919 134493687799808 run.py:730] (val) algo naive_string_matcher step 4200: {'match': 0.769287109375, 'score': 0.769287109375, 'examples_seen': 57439, 'step': 4200, 'algorithm': 'naive_string_matcher'}
I0827 17:16:51.257346 134493687799808 run.py:730] (val) algo optimal_bst step 4200: {'root': 0.8686202422145328, 'score': 0.8686202422145328, 'examples_seen': 25600, 'step': 4200, 'algorithm': 'optimal_bst'}
I0827 17:16:54.948398 134493687799808 run.py:730] (val) algo quickselect step 4200: {'median': 0.21533203125, 'score': 0.21533203125, 'examples_seen': 10154, 'step': 4200, 'algorithm': 'quickselect'}
I0827 17:16:55.093227 134493687799808 run.py:730] (val) algo quicksort step 4200: {'pred': 0.9013671875, 'score': 0.9013671875, 'examples_seen': 6388, 'step': 4200, 'algorithm': 'quicksort'}
I0827 17:16:55.599221 134493687799808 run.py:730] (val) algo segments_intersect step 4200: {'intersect': 0.6235721703011422, 'score': 0.6235721703011422, 'examples_seen': 107552, 'step': 4200, 'algorithm': 'segments_intersect'}
I0827 17:16:55.703873 134493687799808 run.py:730] (val) algo strongly_connected_components step 4200: {'scc_id': 0.7705078125, 'score': 0.7705078125, 'examples_seen': 4919, 'step': 4200, 'algorithm': 'strongly_connected_components'}
I0827 17:16:55.717844 134493687799808 run.py:730] (val) algo task_scheduling step 4200: {'selected': 0.9105960264900662, 'score': 0.9105960264900662, 'examples_seen': 25600, 'step': 4200, 'algorithm': 'task_scheduling'}
I0827 17:16:55.773400 134493687799808 run.py:730] (val) algo topological_sort step 4200: {'topo': 0.669921875, 'topo_head': 1.0, 'score': 0.8349609375, 'examples_seen': 11698, 'step': 4200, 'algorithm': 'topological_sort'}
I0827 17:16:55.773658 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.762, val scores are: mst_kruskal: 0.864, mst_prim: 0.864, naive_string_matcher: 0.769, optimal_bst: 0.869, quickselect: 0.215, quicksort: 0.901, segments_intersect: 0.624, strongly_connected_components: 0.771, task_scheduling: 0.911, topological_sort: 0.835
I0827 17:17:12.407539 134493687799808 run.py:695] Algo mst_kruskal step 4250 current loss 0.111890, current_train_items 93893.
I0827 17:17:12.417570 134493687799808 run.py:695] Algo mst_prim step 4250 current loss 0.602539, current_train_items 86657.
I0827 17:17:12.426181 134493687799808 run.py:695] Algo naive_string_matcher step 4250 current loss 1.330410, current_train_items 58102.
I0827 17:17:12.438274 134493687799808 run.py:695] Algo optimal_bst step 4250 current loss 0.000000, current_train_items 25904.
I0827 17:17:12.516416 134493687799808 run.py:695] Algo quickselect step 4250 current loss 0.000000, current_train_items 10274.
I0827 17:17:12.526836 134493687799808 run.py:695] Algo quicksort step 4250 current loss 0.000000, current_train_items 6465.
I0827 17:17:12.544922 134493687799808 run.py:695] Algo segments_intersect step 4250 current loss 0.668343, current_train_items 108832.
I0827 17:17:12.555222 134493687799808 run.py:695] Algo strongly_connected_components step 4250 current loss 0.000000, current_train_items 4974.
I0827 17:17:12.573163 134493687799808 run.py:695] Algo task_scheduling step 4250 current loss 0.000000, current_train_items 25904.
I0827 17:17:12.585612 134493687799808 run.py:695] Algo topological_sort step 4250 current loss 1.290083, current_train_items 11838.
I0827 17:17:12.701049 134493687799808 run.py:730] (val) algo mst_kruskal step 4250: {'in_mst': 0.8345418589321028, 'score': 0.8345418589321028, 'examples_seen': 93893, 'step': 4250, 'algorithm': 'mst_kruskal'}
I0827 17:17:12.722270 134493687799808 run.py:730] (val) algo mst_prim step 4250: {'pi': 0.8154296875, 'score': 0.8154296875, 'examples_seen': 86657, 'step': 4250, 'algorithm': 'mst_prim'}
I0827 17:17:13.467681 134493687799808 run.py:730] (val) algo naive_string_matcher step 4250: {'match': 0.75732421875, 'score': 0.75732421875, 'examples_seen': 58102, 'step': 4250, 'algorithm': 'naive_string_matcher'}
I0827 17:17:13.515857 134493687799808 run.py:730] (val) algo optimal_bst step 4250: {'root': 0.8945177335640139, 'score': 0.8945177335640139, 'examples_seen': 25904, 'step': 4250, 'algorithm': 'optimal_bst'}
I0827 17:17:17.210783 134493687799808 run.py:730] (val) algo quickselect step 4250: {'median': 0.228759765625, 'score': 0.228759765625, 'examples_seen': 10274, 'step': 4250, 'algorithm': 'quickselect'}
I0827 17:17:17.356364 134493687799808 run.py:730] (val) algo quicksort step 4250: {'pred': 0.8994140625, 'score': 0.8994140625, 'examples_seen': 6465, 'step': 4250, 'algorithm': 'quicksort'}
I0827 17:17:17.858902 134493687799808 run.py:730] (val) algo segments_intersect step 4250: {'intersect': 0.6238620028749401, 'score': 0.6238620028749401, 'examples_seen': 108832, 'step': 4250, 'algorithm': 'segments_intersect'}
I0827 17:17:17.963791 134493687799808 run.py:730] (val) algo strongly_connected_components step 4250: {'scc_id': 0.7548828125, 'score': 0.7548828125, 'examples_seen': 4974, 'step': 4250, 'algorithm': 'strongly_connected_components'}
I0827 17:17:17.977289 134493687799808 run.py:730] (val) algo task_scheduling step 4250: {'selected': 0.9259259259259258, 'score': 0.9259259259259258, 'examples_seen': 25904, 'step': 4250, 'algorithm': 'task_scheduling'}
I0827 17:17:18.031856 134493687799808 run.py:730] (val) algo topological_sort step 4250: {'topo': 0.61328125, 'topo_head': 1.0, 'score': 0.806640625, 'examples_seen': 11838, 'step': 4250, 'algorithm': 'topological_sort'}
I0827 17:17:18.032025 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.762, current avg val score is 0.754, val scores are: mst_kruskal: 0.835, mst_prim: 0.815, naive_string_matcher: 0.757, optimal_bst: 0.895, quickselect: 0.229, quicksort: 0.899, segments_intersect: 0.624, strongly_connected_components: 0.755, task_scheduling: 0.926, topological_sort: 0.807
I0827 17:17:34.825015 134493687799808 run.py:695] Algo mst_kruskal step 4300 current loss 0.066795, current_train_items 95037.
I0827 17:17:34.835311 134493687799808 run.py:695] Algo mst_prim step 4300 current loss 0.742943, current_train_items 87649.
I0827 17:17:34.843821 134493687799808 run.py:695] Algo naive_string_matcher step 4300 current loss 0.793467, current_train_items 58790.
I0827 17:17:34.856321 134493687799808 run.py:695] Algo optimal_bst step 4300 current loss 0.000000, current_train_items 26208.
I0827 17:17:34.933430 134493687799808 run.py:695] Algo quickselect step 4300 current loss 1.770847, current_train_items 10399.
I0827 17:17:34.944062 134493687799808 run.py:695] Algo quicksort step 4300 current loss 0.899938, current_train_items 6539.
I0827 17:17:34.962163 134493687799808 run.py:695] Algo segments_intersect step 4300 current loss 0.678885, current_train_items 110112.
I0827 17:17:34.972994 134493687799808 run.py:695] Algo strongly_connected_components step 4300 current loss 0.000000, current_train_items 5034.
I0827 17:17:34.991305 134493687799808 run.py:695] Algo task_scheduling step 4300 current loss 0.000000, current_train_items 26208.
I0827 17:17:35.003670 134493687799808 run.py:695] Algo topological_sort step 4300 current loss 1.343307, current_train_items 11978.
I0827 17:17:35.122137 134493687799808 run.py:730] (val) algo mst_kruskal step 4300: {'in_mst': 0.7796610169491525, 'score': 0.7796610169491525, 'examples_seen': 95037, 'step': 4300, 'algorithm': 'mst_kruskal'}
I0827 17:17:35.143450 134493687799808 run.py:730] (val) algo mst_prim step 4300: {'pi': 0.8544921875, 'score': 0.8544921875, 'examples_seen': 87649, 'step': 4300, 'algorithm': 'mst_prim'}
I0827 17:17:35.888827 134493687799808 run.py:730] (val) algo naive_string_matcher step 4300: {'match': 0.761962890625, 'score': 0.761962890625, 'examples_seen': 58790, 'step': 4300, 'algorithm': 'naive_string_matcher'}
I0827 17:17:35.936893 134493687799808 run.py:730] (val) algo optimal_bst step 4300: {'root': 0.8797037197231834, 'score': 0.8797037197231834, 'examples_seen': 26208, 'step': 4300, 'algorithm': 'optimal_bst'}
I0827 17:17:39.665066 134493687799808 run.py:730] (val) algo quickselect step 4300: {'median': 0.223876953125, 'score': 0.223876953125, 'examples_seen': 10399, 'step': 4300, 'algorithm': 'quickselect'}
I0827 17:17:39.815931 134493687799808 run.py:730] (val) algo quicksort step 4300: {'pred': 0.9013671875, 'score': 0.9013671875, 'examples_seen': 6539, 'step': 4300, 'algorithm': 'quicksort'}
I0827 17:17:40.459762 134493687799808 run.py:730] (val) algo segments_intersect step 4300: {'intersect': 0.7068031306441903, 'score': 0.7068031306441903, 'examples_seen': 110112, 'step': 4300, 'algorithm': 'segments_intersect'}
I0827 17:17:40.564979 134493687799808 run.py:730] (val) algo strongly_connected_components step 4300: {'scc_id': 0.787109375, 'score': 0.787109375, 'examples_seen': 5034, 'step': 4300, 'algorithm': 'strongly_connected_components'}
I0827 17:17:40.578263 134493687799808 run.py:730] (val) algo task_scheduling step 4300: {'selected': 0.9069171648163963, 'score': 0.9069171648163963, 'examples_seen': 26208, 'step': 4300, 'algorithm': 'task_scheduling'}
I0827 17:17:40.632343 134493687799808 run.py:730] (val) algo topological_sort step 4300: {'topo': 0.6943359375, 'topo_head': 1.0, 'score': 0.84716796875, 'examples_seen': 11978, 'step': 4300, 'algorithm': 'topological_sort'}
I0827 17:17:40.632538 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.762, current avg val score is 0.765, val scores are: mst_kruskal: 0.780, mst_prim: 0.854, naive_string_matcher: 0.762, optimal_bst: 0.880, quickselect: 0.224, quicksort: 0.901, segments_intersect: 0.707, strongly_connected_components: 0.787, task_scheduling: 0.907, topological_sort: 0.847
I0827 17:17:57.989197 134493687799808 run.py:695] Algo mst_kruskal step 4350 current loss 0.109622, current_train_items 96103.
I0827 17:17:57.999839 134493687799808 run.py:695] Algo mst_prim step 4350 current loss 0.360331, current_train_items 88651.
I0827 17:17:58.009265 134493687799808 run.py:695] Algo naive_string_matcher step 4350 current loss 1.167030, current_train_items 59474.
I0827 17:17:58.021120 134493687799808 run.py:695] Algo optimal_bst step 4350 current loss 0.000000, current_train_items 26512.
I0827 17:17:58.098446 134493687799808 run.py:695] Algo quickselect step 4350 current loss 1.559774, current_train_items 10514.
I0827 17:17:58.109594 134493687799808 run.py:695] Algo quicksort step 4350 current loss 3.495841, current_train_items 6615.
I0827 17:17:58.127969 134493687799808 run.py:695] Algo segments_intersect step 4350 current loss 0.631392, current_train_items 111392.
I0827 17:17:58.138792 134493687799808 run.py:695] Algo strongly_connected_components step 4350 current loss 0.043182, current_train_items 5091.
I0827 17:17:58.156644 134493687799808 run.py:695] Algo task_scheduling step 4350 current loss 0.000000, current_train_items 26512.
I0827 17:17:58.168845 134493687799808 run.py:695] Algo topological_sort step 4350 current loss 3.699493, current_train_items 12116.
I0827 17:17:58.288913 134493687799808 run.py:730] (val) algo mst_kruskal step 4350: {'in_mst': 0.781021897810219, 'score': 0.781021897810219, 'examples_seen': 96103, 'step': 4350, 'algorithm': 'mst_kruskal'}
I0827 17:17:58.310419 134493687799808 run.py:730] (val) algo mst_prim step 4350: {'pi': 0.8369140625, 'score': 0.8369140625, 'examples_seen': 88651, 'step': 4350, 'algorithm': 'mst_prim'}
I0827 17:17:59.052870 134493687799808 run.py:730] (val) algo naive_string_matcher step 4350: {'match': 0.796630859375, 'score': 0.796630859375, 'examples_seen': 59474, 'step': 4350, 'algorithm': 'naive_string_matcher'}
I0827 17:17:59.100986 134493687799808 run.py:730] (val) algo optimal_bst step 4350: {'root': 0.8834883217993079, 'score': 0.8834883217993079, 'examples_seen': 26512, 'step': 4350, 'algorithm': 'optimal_bst'}
I0827 17:18:02.839316 134493687799808 run.py:730] (val) algo quickselect step 4350: {'median': 0.2158203125, 'score': 0.2158203125, 'examples_seen': 10514, 'step': 4350, 'algorithm': 'quickselect'}
I0827 17:18:02.986595 134493687799808 run.py:730] (val) algo quicksort step 4350: {'pred': 0.9267578125, 'score': 0.9267578125, 'examples_seen': 6615, 'step': 4350, 'algorithm': 'quicksort'}
I0827 17:18:03.953862 134493687799808 run.py:730] (val) algo segments_intersect step 4350: {'intersect': 0.599669603524229, 'score': 0.599669603524229, 'examples_seen': 111392, 'step': 4350, 'algorithm': 'segments_intersect'}
I0827 17:18:04.061533 134493687799808 run.py:730] (val) algo strongly_connected_components step 4350: {'scc_id': 0.7666015625, 'score': 0.7666015625, 'examples_seen': 5091, 'step': 4350, 'algorithm': 'strongly_connected_components'}
I0827 17:18:04.075513 134493687799808 run.py:730] (val) algo task_scheduling step 4350: {'selected': 0.9318364073777066, 'score': 0.9318364073777066, 'examples_seen': 26512, 'step': 4350, 'algorithm': 'task_scheduling'}
I0827 17:18:04.129647 134493687799808 run.py:730] (val) algo topological_sort step 4350: {'topo': 0.673828125, 'topo_head': 1.0, 'score': 0.8369140625, 'examples_seen': 12116, 'step': 4350, 'algorithm': 'topological_sort'}
I0827 17:18:04.129855 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.758, val scores are: mst_kruskal: 0.781, mst_prim: 0.837, naive_string_matcher: 0.797, optimal_bst: 0.883, quickselect: 0.216, quicksort: 0.927, segments_intersect: 0.600, strongly_connected_components: 0.767, task_scheduling: 0.932, topological_sort: 0.837
I0827 17:18:20.941452 134493687799808 run.py:695] Algo mst_kruskal step 4400 current loss 0.094850, current_train_items 97190.
I0827 17:18:20.952258 134493687799808 run.py:695] Algo mst_prim step 4400 current loss 0.748655, current_train_items 89656.
I0827 17:18:20.961240 134493687799808 run.py:695] Algo naive_string_matcher step 4400 current loss 1.236672, current_train_items 60129.
I0827 17:18:20.973627 134493687799808 run.py:695] Algo optimal_bst step 4400 current loss 0.000000, current_train_items 26816.
I0827 17:18:21.053892 134493687799808 run.py:695] Algo quickselect step 4400 current loss 2.211859, current_train_items 10633.
I0827 17:18:21.065019 134493687799808 run.py:695] Algo quicksort step 4400 current loss 20.757513, current_train_items 6693.
I0827 17:18:21.082291 134493687799808 run.py:695] Algo segments_intersect step 4400 current loss 0.671130, current_train_items 112672.
I0827 17:18:21.093271 134493687799808 run.py:695] Algo strongly_connected_components step 4400 current loss 0.947910, current_train_items 5152.
I0827 17:18:21.112905 134493687799808 run.py:695] Algo task_scheduling step 4400 current loss 0.000000, current_train_items 26816.
I0827 17:18:21.124758 134493687799808 run.py:695] Algo topological_sort step 4400 current loss 1.278833, current_train_items 12255.
I0827 17:18:21.239721 134493687799808 run.py:730] (val) algo mst_kruskal step 4400: {'in_mst': 0.8263714141922496, 'score': 0.8263714141922496, 'examples_seen': 97190, 'step': 4400, 'algorithm': 'mst_kruskal'}
I0827 17:18:21.260640 134493687799808 run.py:730] (val) algo mst_prim step 4400: {'pi': 0.85546875, 'score': 0.85546875, 'examples_seen': 89656, 'step': 4400, 'algorithm': 'mst_prim'}
I0827 17:18:22.001294 134493687799808 run.py:730] (val) algo naive_string_matcher step 4400: {'match': 0.721435546875, 'score': 0.721435546875, 'examples_seen': 60129, 'step': 4400, 'algorithm': 'naive_string_matcher'}
I0827 17:18:22.049750 134493687799808 run.py:730] (val) algo optimal_bst step 4400: {'root': 0.8867863321799307, 'score': 0.8867863321799307, 'examples_seen': 26816, 'step': 4400, 'algorithm': 'optimal_bst'}
I0827 17:18:25.731570 134493687799808 run.py:730] (val) algo quickselect step 4400: {'median': 0.216796875, 'score': 0.216796875, 'examples_seen': 10633, 'step': 4400, 'algorithm': 'quickselect'}
I0827 17:18:25.876972 134493687799808 run.py:730] (val) algo quicksort step 4400: {'pred': 0.912109375, 'score': 0.912109375, 'examples_seen': 6693, 'step': 4400, 'algorithm': 'quicksort'}
I0827 17:18:26.724342 134493687799808 run.py:730] (val) algo segments_intersect step 4400: {'intersect': 0.34172801239829526, 'score': 0.34172801239829526, 'examples_seen': 112672, 'step': 4400, 'algorithm': 'segments_intersect'}
I0827 17:18:26.831951 134493687799808 run.py:730] (val) algo strongly_connected_components step 4400: {'scc_id': 0.7763671875, 'score': 0.7763671875, 'examples_seen': 5152, 'step': 4400, 'algorithm': 'strongly_connected_components'}
I0827 17:18:26.851731 134493687799808 run.py:730] (val) algo task_scheduling step 4400: {'selected': 0.9303079416531604, 'score': 0.9303079416531604, 'examples_seen': 26816, 'step': 4400, 'algorithm': 'task_scheduling'}
I0827 17:18:26.905405 134493687799808 run.py:730] (val) algo topological_sort step 4400: {'topo': 0.638671875, 'topo_head': 0.984375, 'score': 0.8115234375, 'examples_seen': 12255, 'step': 4400, 'algorithm': 'topological_sort'}
I0827 17:18:26.905628 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.728, val scores are: mst_kruskal: 0.826, mst_prim: 0.855, naive_string_matcher: 0.721, optimal_bst: 0.887, quickselect: 0.217, quicksort: 0.912, segments_intersect: 0.342, strongly_connected_components: 0.776, task_scheduling: 0.930, topological_sort: 0.812
I0827 17:18:44.357787 134493687799808 run.py:695] Algo mst_kruskal step 4450 current loss 0.074471, current_train_items 98294.
I0827 17:18:44.368605 134493687799808 run.py:695] Algo mst_prim step 4450 current loss 0.554129, current_train_items 90666.
I0827 17:18:44.377968 134493687799808 run.py:695] Algo naive_string_matcher step 4450 current loss 1.575773, current_train_items 60827.
I0827 17:18:44.390367 134493687799808 run.py:695] Algo optimal_bst step 4450 current loss 0.000000, current_train_items 27120.
I0827 17:18:44.467793 134493687799808 run.py:695] Algo quickselect step 4450 current loss 2.779520, current_train_items 10758.
I0827 17:18:44.478128 134493687799808 run.py:695] Algo quicksort step 4450 current loss 4.663391, current_train_items 6769.
I0827 17:18:44.496921 134493687799808 run.py:695] Algo segments_intersect step 4450 current loss 0.727916, current_train_items 113952.
I0827 17:18:44.507553 134493687799808 run.py:695] Algo strongly_connected_components step 4450 current loss 1.238339, current_train_items 5210.
I0827 17:18:44.525434 134493687799808 run.py:695] Algo task_scheduling step 4450 current loss 0.000000, current_train_items 27120.
I0827 17:18:44.537898 134493687799808 run.py:695] Algo topological_sort step 4450 current loss 2.434639, current_train_items 12393.
I0827 17:18:44.652812 134493687799808 run.py:730] (val) algo mst_kruskal step 4450: {'in_mst': 0.8481012658227848, 'score': 0.8481012658227848, 'examples_seen': 98294, 'step': 4450, 'algorithm': 'mst_kruskal'}
I0827 17:18:44.673764 134493687799808 run.py:730] (val) algo mst_prim step 4450: {'pi': 0.8525390625, 'score': 0.8525390625, 'examples_seen': 90666, 'step': 4450, 'algorithm': 'mst_prim'}
I0827 17:18:45.422331 134493687799808 run.py:730] (val) algo naive_string_matcher step 4450: {'match': 0.763671875, 'score': 0.763671875, 'examples_seen': 60827, 'step': 4450, 'algorithm': 'naive_string_matcher'}
I0827 17:18:45.470029 134493687799808 run.py:730] (val) algo optimal_bst step 4450: {'root': 0.8921388408304498, 'score': 0.8921388408304498, 'examples_seen': 27120, 'step': 4450, 'algorithm': 'optimal_bst'}
I0827 17:18:49.151251 134493687799808 run.py:730] (val) algo quickselect step 4450: {'median': 0.1953125, 'score': 0.1953125, 'examples_seen': 10758, 'step': 4450, 'algorithm': 'quickselect'}
I0827 17:18:49.296583 134493687799808 run.py:730] (val) algo quicksort step 4450: {'pred': 0.916015625, 'score': 0.916015625, 'examples_seen': 6769, 'step': 4450, 'algorithm': 'quicksort'}
I0827 17:18:49.802981 134493687799808 run.py:730] (val) algo segments_intersect step 4450: {'intersect': 0.3471754582865694, 'score': 0.3471754582865694, 'examples_seen': 113952, 'step': 4450, 'algorithm': 'segments_intersect'}
I0827 17:18:49.908701 134493687799808 run.py:730] (val) algo strongly_connected_components step 4450: {'scc_id': 0.77734375, 'score': 0.77734375, 'examples_seen': 5210, 'step': 4450, 'algorithm': 'strongly_connected_components'}
I0827 17:18:49.922381 134493687799808 run.py:730] (val) algo task_scheduling step 4450: {'selected': 0.9231987331749801, 'score': 0.9231987331749801, 'examples_seen': 27120, 'step': 4450, 'algorithm': 'task_scheduling'}
I0827 17:18:49.977268 134493687799808 run.py:730] (val) algo topological_sort step 4450: {'topo': 0.662109375, 'topo_head': 1.0, 'score': 0.8310546875, 'examples_seen': 12393, 'step': 4450, 'algorithm': 'topological_sort'}
I0827 17:18:49.977538 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.735, val scores are: mst_kruskal: 0.848, mst_prim: 0.853, naive_string_matcher: 0.764, optimal_bst: 0.892, quickselect: 0.195, quicksort: 0.916, segments_intersect: 0.347, strongly_connected_components: 0.777, task_scheduling: 0.923, topological_sort: 0.831
I0827 17:19:07.563738 134493687799808 run.py:695] Algo mst_kruskal step 4500 current loss 0.121895, current_train_items 99391.
I0827 17:19:07.575002 134493687799808 run.py:695] Algo mst_prim step 4500 current loss 0.292334, current_train_items 91682.
I0827 17:19:07.584546 134493687799808 run.py:695] Algo naive_string_matcher step 4500 current loss 1.818537, current_train_items 61496.
I0827 17:19:07.596879 134493687799808 run.py:695] Algo optimal_bst step 4500 current loss 0.000000, current_train_items 27424.
I0827 17:19:07.674587 134493687799808 run.py:695] Algo quickselect step 4500 current loss 0.000000, current_train_items 10882.
I0827 17:19:07.685430 134493687799808 run.py:695] Algo quicksort step 4500 current loss 1.375973, current_train_items 6844.
I0827 17:19:07.703733 134493687799808 run.py:695] Algo segments_intersect step 4500 current loss 0.647197, current_train_items 115232.
I0827 17:19:07.714689 134493687799808 run.py:695] Algo strongly_connected_components step 4500 current loss 0.000000, current_train_items 5267.
I0827 17:19:07.733030 134493687799808 run.py:695] Algo task_scheduling step 4500 current loss 0.000000, current_train_items 27424.
I0827 17:19:07.745264 134493687799808 run.py:695] Algo topological_sort step 4500 current loss 1.471113, current_train_items 12531.
I0827 17:19:07.858734 134493687799808 run.py:730] (val) algo mst_kruskal step 4500: {'in_mst': 0.8591639871382638, 'score': 0.8591639871382638, 'examples_seen': 99391, 'step': 4500, 'algorithm': 'mst_kruskal'}
I0827 17:19:07.879833 134493687799808 run.py:730] (val) algo mst_prim step 4500: {'pi': 0.869140625, 'score': 0.869140625, 'examples_seen': 91682, 'step': 4500, 'algorithm': 'mst_prim'}
I0827 17:19:08.628740 134493687799808 run.py:730] (val) algo naive_string_matcher step 4500: {'match': 0.737548828125, 'score': 0.737548828125, 'examples_seen': 61496, 'step': 4500, 'algorithm': 'naive_string_matcher'}
I0827 17:19:08.676278 134493687799808 run.py:730] (val) algo optimal_bst step 4500: {'root': 0.8995999134948097, 'score': 0.8995999134948097, 'examples_seen': 27424, 'step': 4500, 'algorithm': 'optimal_bst'}
I0827 17:19:12.393814 134493687799808 run.py:730] (val) algo quickselect step 4500: {'median': 0.20068359375, 'score': 0.20068359375, 'examples_seen': 10882, 'step': 4500, 'algorithm': 'quickselect'}
I0827 17:19:12.538979 134493687799808 run.py:730] (val) algo quicksort step 4500: {'pred': 0.86328125, 'score': 0.86328125, 'examples_seen': 6844, 'step': 4500, 'algorithm': 'quicksort'}
I0827 17:19:13.043612 134493687799808 run.py:730] (val) algo segments_intersect step 4500: {'intersect': 0.5078389179219182, 'score': 0.5078389179219182, 'examples_seen': 115232, 'step': 4500, 'algorithm': 'segments_intersect'}
I0827 17:19:13.148991 134493687799808 run.py:730] (val) algo strongly_connected_components step 4500: {'scc_id': 0.7939453125, 'score': 0.7939453125, 'examples_seen': 5267, 'step': 4500, 'algorithm': 'strongly_connected_components'}
I0827 17:19:13.162600 134493687799808 run.py:730] (val) algo task_scheduling step 4500: {'selected': 0.9052631578947368, 'score': 0.9052631578947368, 'examples_seen': 27424, 'step': 4500, 'algorithm': 'task_scheduling'}
I0827 17:19:13.217572 134493687799808 run.py:730] (val) algo topological_sort step 4500: {'topo': 0.69140625, 'topo_head': 1.0, 'score': 0.845703125, 'examples_seen': 12531, 'step': 4500, 'algorithm': 'topological_sort'}
I0827 17:19:13.217763 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.748, val scores are: mst_kruskal: 0.859, mst_prim: 0.869, naive_string_matcher: 0.738, optimal_bst: 0.900, quickselect: 0.201, quicksort: 0.863, segments_intersect: 0.508, strongly_connected_components: 0.794, task_scheduling: 0.905, topological_sort: 0.846
W0827 17:19:25.769353 134493687799808 samplers.py:175] Increasing hint lengh from 134 to 138
I0827 17:19:31.147931 134493687799808 run.py:695] Algo mst_kruskal step 4550 current loss 0.090218, current_train_items 100526.
I0827 17:19:31.158461 134493687799808 run.py:695] Algo mst_prim step 4550 current loss 0.430981, current_train_items 92684.
I0827 17:19:31.166892 134493687799808 run.py:695] Algo naive_string_matcher step 4550 current loss 1.080641, current_train_items 62190.
I0827 17:19:31.179145 134493687799808 run.py:695] Algo optimal_bst step 4550 current loss 0.250771, current_train_items 27744.
I0827 17:19:31.258548 134493687799808 run.py:695] Algo quickselect step 4550 current loss 1.834363, current_train_items 11000.
I0827 17:19:31.269957 134493687799808 run.py:695] Algo quicksort step 4550 current loss 0.000000, current_train_items 6920.
I0827 17:19:31.287920 134493687799808 run.py:695] Algo segments_intersect step 4550 current loss 0.646064, current_train_items 116512.
I0827 17:19:31.299562 134493687799808 run.py:695] Algo strongly_connected_components step 4550 current loss 1.391855, current_train_items 5324.
I0827 17:19:31.318286 134493687799808 run.py:695] Algo task_scheduling step 4550 current loss 0.119409, current_train_items 27744.
I0827 17:19:31.331028 134493687799808 run.py:695] Algo topological_sort step 4550 current loss 3.098526, current_train_items 12671.
I0827 17:19:31.449730 134493687799808 run.py:730] (val) algo mst_kruskal step 4550: {'in_mst': 0.6860759493670886, 'score': 0.6860759493670886, 'examples_seen': 100526, 'step': 4550, 'algorithm': 'mst_kruskal'}
I0827 17:19:31.470867 134493687799808 run.py:730] (val) algo mst_prim step 4550: {'pi': 0.80859375, 'score': 0.80859375, 'examples_seen': 92684, 'step': 4550, 'algorithm': 'mst_prim'}
I0827 17:19:32.222871 134493687799808 run.py:730] (val) algo naive_string_matcher step 4550: {'match': 0.724853515625, 'score': 0.724853515625, 'examples_seen': 62190, 'step': 4550, 'algorithm': 'naive_string_matcher'}
I0827 17:19:32.270884 134493687799808 run.py:730] (val) algo optimal_bst step 4550: {'root': 0.9010056228373703, 'score': 0.9010056228373703, 'examples_seen': 27744, 'step': 4550, 'algorithm': 'optimal_bst'}
I0827 17:19:35.956312 134493687799808 run.py:730] (val) algo quickselect step 4550: {'median': 0.184814453125, 'score': 0.184814453125, 'examples_seen': 11000, 'step': 4550, 'algorithm': 'quickselect'}
I0827 17:19:36.101660 134493687799808 run.py:730] (val) algo quicksort step 4550: {'pred': 0.908203125, 'score': 0.908203125, 'examples_seen': 6920, 'step': 4550, 'algorithm': 'quicksort'}
I0827 17:19:36.621600 134493687799808 run.py:730] (val) algo segments_intersect step 4550: {'intersect': 0.45255474452554745, 'score': 0.45255474452554745, 'examples_seen': 116512, 'step': 4550, 'algorithm': 'segments_intersect'}
I0827 17:19:36.726984 134493687799808 run.py:730] (val) algo strongly_connected_components step 4550: {'scc_id': 0.787109375, 'score': 0.787109375, 'examples_seen': 5324, 'step': 4550, 'algorithm': 'strongly_connected_components'}
I0827 17:19:36.740736 134493687799808 run.py:730] (val) algo task_scheduling step 4550: {'selected': 0.9259547934528449, 'score': 0.9259547934528449, 'examples_seen': 27744, 'step': 4550, 'algorithm': 'task_scheduling'}
I0827 17:19:36.794233 134493687799808 run.py:730] (val) algo topological_sort step 4550: {'topo': 0.6982421875, 'topo_head': 1.0, 'score': 0.84912109375, 'examples_seen': 12671, 'step': 4550, 'algorithm': 'topological_sort'}
I0827 17:19:36.794409 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.723, val scores are: mst_kruskal: 0.686, mst_prim: 0.809, naive_string_matcher: 0.725, optimal_bst: 0.901, quickselect: 0.185, quicksort: 0.908, segments_intersect: 0.453, strongly_connected_components: 0.787, task_scheduling: 0.926, topological_sort: 0.849
W0827 17:19:51.553273 134493687799808 samplers.py:175] Increasing hint lengh from 98 to 100
I0827 17:19:54.410527 134493687799808 run.py:695] Algo mst_kruskal step 4600 current loss 0.079391, current_train_items 101624.
I0827 17:19:54.421570 134493687799808 run.py:695] Algo mst_prim step 4600 current loss 0.291648, current_train_items 93730.
I0827 17:19:54.430836 134493687799808 run.py:695] Algo naive_string_matcher step 4600 current loss 1.747629, current_train_items 62883.
I0827 17:19:54.443320 134493687799808 run.py:695] Algo optimal_bst step 4600 current loss 0.294626, current_train_items 28048.
I0827 17:19:54.521779 134493687799808 run.py:695] Algo quickselect step 4600 current loss 2.149914, current_train_items 11116.
I0827 17:19:54.532245 134493687799808 run.py:695] Algo quicksort step 4600 current loss 13.446162, current_train_items 6998.
I0827 17:19:54.550423 134493687799808 run.py:695] Algo segments_intersect step 4600 current loss 0.665874, current_train_items 117792.
I0827 17:19:54.560710 134493687799808 run.py:695] Algo strongly_connected_components step 4600 current loss 1.219883, current_train_items 5385.
I0827 17:19:54.578404 134493687799808 run.py:695] Algo task_scheduling step 4600 current loss 0.122434, current_train_items 28048.
I0827 17:19:54.590701 134493687799808 run.py:695] Algo topological_sort step 4600 current loss 1.769810, current_train_items 12808.
I0827 17:19:54.703982 134493687799808 run.py:730] (val) algo mst_kruskal step 4600: {'in_mst': 0.8303341902313625, 'score': 0.8303341902313625, 'examples_seen': 101624, 'step': 4600, 'algorithm': 'mst_kruskal'}
I0827 17:19:54.724965 134493687799808 run.py:730] (val) algo mst_prim step 4600: {'pi': 0.888671875, 'score': 0.888671875, 'examples_seen': 93730, 'step': 4600, 'algorithm': 'mst_prim'}
I0827 17:19:55.472155 134493687799808 run.py:730] (val) algo naive_string_matcher step 4600: {'match': 0.78564453125, 'score': 0.78564453125, 'examples_seen': 62883, 'step': 4600, 'algorithm': 'naive_string_matcher'}
I0827 17:19:55.520274 134493687799808 run.py:730] (val) algo optimal_bst step 4600: {'root': 0.9024653979238755, 'score': 0.9024653979238755, 'examples_seen': 28048, 'step': 4600, 'algorithm': 'optimal_bst'}
I0827 17:19:59.221613 134493687799808 run.py:730] (val) algo quickselect step 4600: {'median': 0.21875, 'score': 0.21875, 'examples_seen': 11116, 'step': 4600, 'algorithm': 'quickselect'}
I0827 17:19:59.366423 134493687799808 run.py:730] (val) algo quicksort step 4600: {'pred': 0.92578125, 'score': 0.92578125, 'examples_seen': 6998, 'step': 4600, 'algorithm': 'quicksort'}
I0827 17:19:59.866171 134493687799808 run.py:730] (val) algo segments_intersect step 4600: {'intersect': 0.5327327327327327, 'score': 0.5327327327327327, 'examples_seen': 117792, 'step': 4600, 'algorithm': 'segments_intersect'}
I0827 17:19:59.971502 134493687799808 run.py:730] (val) algo strongly_connected_components step 4600: {'scc_id': 0.7294921875, 'score': 0.7294921875, 'examples_seen': 5385, 'step': 4600, 'algorithm': 'strongly_connected_components'}
I0827 17:19:59.985018 134493687799808 run.py:730] (val) algo task_scheduling step 4600: {'selected': 0.9421742482652276, 'score': 0.9421742482652276, 'examples_seen': 28048, 'step': 4600, 'algorithm': 'task_scheduling'}
I0827 17:20:00.038877 134493687799808 run.py:730] (val) algo topological_sort step 4600: {'topo': 0.6728515625, 'topo_head': 1.0, 'score': 0.83642578125, 'examples_seen': 12808, 'step': 4600, 'algorithm': 'topological_sort'}
I0827 17:20:00.039155 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.759, val scores are: mst_kruskal: 0.830, mst_prim: 0.889, naive_string_matcher: 0.786, optimal_bst: 0.902, quickselect: 0.219, quicksort: 0.926, segments_intersect: 0.533, strongly_connected_components: 0.729, task_scheduling: 0.942, topological_sort: 0.836
I0827 17:20:17.710647 134493687799808 run.py:695] Algo mst_kruskal step 4650 current loss 0.150224, current_train_items 102689.
I0827 17:20:17.722268 134493687799808 run.py:695] Algo mst_prim step 4650 current loss 0.318971, current_train_items 94747.
I0827 17:20:17.736750 134493687799808 run.py:695] Algo naive_string_matcher step 4650 current loss 1.181002, current_train_items 63578.
I0827 17:20:17.756146 134493687799808 run.py:695] Algo optimal_bst step 4650 current loss 0.297180, current_train_items 28352.
I0827 17:20:17.831151 134493687799808 run.py:695] Algo quickselect step 4650 current loss 3.385804, current_train_items 11235.
I0827 17:20:17.841231 134493687799808 run.py:695] Algo quicksort step 4650 current loss 11.139080, current_train_items 7072.
I0827 17:20:17.859068 134493687799808 run.py:695] Algo segments_intersect step 4650 current loss 0.682309, current_train_items 119072.
I0827 17:20:17.868940 134493687799808 run.py:695] Algo strongly_connected_components step 4650 current loss 0.681444, current_train_items 5442.
I0827 17:20:17.886441 134493687799808 run.py:695] Algo task_scheduling step 4650 current loss 0.157313, current_train_items 28352.
I0827 17:20:17.898607 134493687799808 run.py:695] Algo topological_sort step 4650 current loss 2.081800, current_train_items 12949.
I0827 17:20:18.016940 134493687799808 run.py:730] (val) algo mst_kruskal step 4650: {'in_mst': 0.8110316649642494, 'score': 0.8110316649642494, 'examples_seen': 102689, 'step': 4650, 'algorithm': 'mst_kruskal'}
I0827 17:20:18.037892 134493687799808 run.py:730] (val) algo mst_prim step 4650: {'pi': 0.81640625, 'score': 0.81640625, 'examples_seen': 94747, 'step': 4650, 'algorithm': 'mst_prim'}
I0827 17:20:18.798795 134493687799808 run.py:730] (val) algo naive_string_matcher step 4650: {'match': 0.757568359375, 'score': 0.757568359375, 'examples_seen': 63578, 'step': 4650, 'algorithm': 'naive_string_matcher'}
I0827 17:20:18.846222 134493687799808 run.py:730] (val) algo optimal_bst step 4650: {'root': 0.9058715397923875, 'score': 0.9058715397923875, 'examples_seen': 28352, 'step': 4650, 'algorithm': 'optimal_bst'}
I0827 17:20:22.532770 134493687799808 run.py:730] (val) algo quickselect step 4650: {'median': 0.184814453125, 'score': 0.184814453125, 'examples_seen': 11235, 'step': 4650, 'algorithm': 'quickselect'}
I0827 17:20:22.677049 134493687799808 run.py:730] (val) algo quicksort step 4650: {'pred': 0.9150390625, 'score': 0.9150390625, 'examples_seen': 7072, 'step': 4650, 'algorithm': 'quicksort'}
I0827 17:20:23.185771 134493687799808 run.py:730] (val) algo segments_intersect step 4650: {'intersect': 0.5623372866647383, 'score': 0.5623372866647383, 'examples_seen': 119072, 'step': 4650, 'algorithm': 'segments_intersect'}
I0827 17:20:23.290788 134493687799808 run.py:730] (val) algo strongly_connected_components step 4650: {'scc_id': 0.7099609375, 'score': 0.7099609375, 'examples_seen': 5442, 'step': 4650, 'algorithm': 'strongly_connected_components'}
I0827 17:20:23.304709 134493687799808 run.py:730] (val) algo task_scheduling step 4650: {'selected': 0.8960270498732037, 'score': 0.8960270498732037, 'examples_seen': 28352, 'step': 4650, 'algorithm': 'task_scheduling'}
I0827 17:20:23.358669 134493687799808 run.py:730] (val) algo topological_sort step 4650: {'topo': 0.6806640625, 'topo_head': 0.984375, 'score': 0.83251953125, 'examples_seen': 12949, 'step': 4650, 'algorithm': 'topological_sort'}
I0827 17:20:23.358845 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.759, current avg val score is 0.739, val scores are: mst_kruskal: 0.811, mst_prim: 0.816, naive_string_matcher: 0.758, optimal_bst: 0.906, quickselect: 0.185, quicksort: 0.915, segments_intersect: 0.562, strongly_connected_components: 0.710, task_scheduling: 0.896, topological_sort: 0.833
I0827 17:20:41.277822 134493687799808 run.py:695] Algo mst_kruskal step 4700 current loss 0.104712, current_train_items 103787.
I0827 17:20:41.288193 134493687799808 run.py:695] Algo mst_prim step 4700 current loss 0.200748, current_train_items 95771.
I0827 17:20:41.297079 134493687799808 run.py:695] Algo naive_string_matcher step 4700 current loss 0.826020, current_train_items 64245.
I0827 17:20:41.309947 134493687799808 run.py:695] Algo optimal_bst step 4700 current loss 0.371183, current_train_items 28656.
I0827 17:20:41.387349 134493687799808 run.py:695] Algo quickselect step 4700 current loss 1.256980, current_train_items 11354.
I0827 17:20:41.397990 134493687799808 run.py:695] Algo quicksort step 4700 current loss 0.000000, current_train_items 7149.
I0827 17:20:41.416383 134493687799808 run.py:695] Algo segments_intersect step 4700 current loss 0.693145, current_train_items 120352.
I0827 17:20:41.428534 134493687799808 run.py:695] Algo strongly_connected_components step 4700 current loss 1.043483, current_train_items 5499.
I0827 17:20:41.446524 134493687799808 run.py:695] Algo task_scheduling step 4700 current loss 0.179458, current_train_items 28656.
I0827 17:20:41.457758 134493687799808 run.py:695] Algo topological_sort step 4700 current loss 1.347768, current_train_items 13088.
I0827 17:20:41.574076 134493687799808 run.py:730] (val) algo mst_kruskal step 4700: {'in_mst': 0.7804232804232805, 'score': 0.7804232804232805, 'examples_seen': 103787, 'step': 4700, 'algorithm': 'mst_kruskal'}
I0827 17:20:41.595169 134493687799808 run.py:730] (val) algo mst_prim step 4700: {'pi': 0.8154296875, 'score': 0.8154296875, 'examples_seen': 95771, 'step': 4700, 'algorithm': 'mst_prim'}
I0827 17:20:42.345923 134493687799808 run.py:730] (val) algo naive_string_matcher step 4700: {'match': 0.764404296875, 'score': 0.764404296875, 'examples_seen': 64245, 'step': 4700, 'algorithm': 'naive_string_matcher'}
I0827 17:20:42.394207 134493687799808 run.py:730] (val) algo optimal_bst step 4700: {'root': 0.9065743944636678, 'score': 0.9065743944636678, 'examples_seen': 28656, 'step': 4700, 'algorithm': 'optimal_bst'}
I0827 17:20:46.085775 134493687799808 run.py:730] (val) algo quickselect step 4700: {'median': 0.21484375, 'score': 0.21484375, 'examples_seen': 11354, 'step': 4700, 'algorithm': 'quickselect'}
I0827 17:20:46.232252 134493687799808 run.py:730] (val) algo quicksort step 4700: {'pred': 0.9453125, 'score': 0.9453125, 'examples_seen': 7149, 'step': 4700, 'algorithm': 'quicksort'}
I0827 17:20:46.730278 134493687799808 run.py:730] (val) algo segments_intersect step 4700: {'intersect': 0.4699272967614012, 'score': 0.4699272967614012, 'examples_seen': 120352, 'step': 4700, 'algorithm': 'segments_intersect'}
I0827 17:20:46.836064 134493687799808 run.py:730] (val) algo strongly_connected_components step 4700: {'scc_id': 0.8095703125, 'score': 0.8095703125, 'examples_seen': 5499, 'step': 4700, 'algorithm': 'strongly_connected_components'}
I0827 17:20:46.849849 134493687799808 run.py:730] (val) algo task_scheduling step 4700: {'selected': 0.8975444538526672, 'score': 0.8975444538526672, 'examples_seen': 28656, 'step': 4700, 'algorithm': 'task_scheduling'}
I0827 17:20:46.904572 134493687799808 run.py:730] (val) algo topological_sort step 4700: {'topo': 0.6083984375, 'topo_head': 0.921875, 'score': 0.76513671875, 'examples_seen': 13088, 'step': 4700, 'algorithm': 'topological_sort'}
I0827 17:20:46.904841 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.759, current avg val score is 0.737, val scores are: mst_kruskal: 0.780, mst_prim: 0.815, naive_string_matcher: 0.764, optimal_bst: 0.907, quickselect: 0.215, quicksort: 0.945, segments_intersect: 0.470, strongly_connected_components: 0.810, task_scheduling: 0.898, topological_sort: 0.765
I0827 17:21:04.492827 134493687799808 run.py:695] Algo mst_kruskal step 4750 current loss 0.122187, current_train_items 104840.
I0827 17:21:04.510511 134493687799808 run.py:695] Algo mst_prim step 4750 current loss 0.557159, current_train_items 96796.
I0827 17:21:04.519098 134493687799808 run.py:695] Algo naive_string_matcher step 4750 current loss 1.378786, current_train_items 64928.
I0827 17:21:04.531550 134493687799808 run.py:695] Algo optimal_bst step 4750 current loss 0.313929, current_train_items 28960.
I0827 17:21:04.609676 134493687799808 run.py:695] Algo quickselect step 4750 current loss 2.361679, current_train_items 11479.
I0827 17:21:04.620195 134493687799808 run.py:695] Algo quicksort step 4750 current loss 12.310221, current_train_items 7223.
I0827 17:21:04.638242 134493687799808 run.py:695] Algo segments_intersect step 4750 current loss 0.628933, current_train_items 121632.
I0827 17:21:04.648911 134493687799808 run.py:695] Algo strongly_connected_components step 4750 current loss 0.000000, current_train_items 5560.
I0827 17:21:04.667158 134493687799808 run.py:695] Algo task_scheduling step 4750 current loss 0.119534, current_train_items 28960.
I0827 17:21:04.679667 134493687799808 run.py:695] Algo topological_sort step 4750 current loss 1.878726, current_train_items 13227.
I0827 17:21:04.800395 134493687799808 run.py:730] (val) algo mst_kruskal step 4750: {'in_mst': 0.7966269841269842, 'score': 0.7966269841269842, 'examples_seen': 104840, 'step': 4750, 'algorithm': 'mst_kruskal'}
I0827 17:21:04.822157 134493687799808 run.py:730] (val) algo mst_prim step 4750: {'pi': 0.8583984375, 'score': 0.8583984375, 'examples_seen': 96796, 'step': 4750, 'algorithm': 'mst_prim'}
I0827 17:21:05.581416 134493687799808 run.py:730] (val) algo naive_string_matcher step 4750: {'match': 0.780029296875, 'score': 0.780029296875, 'examples_seen': 64928, 'step': 4750, 'algorithm': 'naive_string_matcher'}
I0827 17:21:05.629342 134493687799808 run.py:730] (val) algo optimal_bst step 4750: {'root': 0.9132785467128027, 'score': 0.9132785467128027, 'examples_seen': 28960, 'step': 4750, 'algorithm': 'optimal_bst'}
I0827 17:21:09.321231 134493687799808 run.py:730] (val) algo quickselect step 4750: {'median': 0.218505859375, 'score': 0.218505859375, 'examples_seen': 11479, 'step': 4750, 'algorithm': 'quickselect'}
I0827 17:21:09.467884 134493687799808 run.py:730] (val) algo quicksort step 4750: {'pred': 0.90625, 'score': 0.90625, 'examples_seen': 7223, 'step': 4750, 'algorithm': 'quicksort'}
I0827 17:21:09.981535 134493687799808 run.py:730] (val) algo segments_intersect step 4750: {'intersect': 0.6316780418922099, 'score': 0.6316780418922099, 'examples_seen': 121632, 'step': 4750, 'algorithm': 'segments_intersect'}
I0827 17:21:10.087343 134493687799808 run.py:730] (val) algo strongly_connected_components step 4750: {'scc_id': 0.771484375, 'score': 0.771484375, 'examples_seen': 5560, 'step': 4750, 'algorithm': 'strongly_connected_components'}
I0827 17:21:10.100957 134493687799808 run.py:730] (val) algo task_scheduling step 4750: {'selected': 0.9227166276346604, 'score': 0.9227166276346604, 'examples_seen': 28960, 'step': 4750, 'algorithm': 'task_scheduling'}
I0827 17:21:10.154825 134493687799808 run.py:730] (val) algo topological_sort step 4750: {'topo': 0.67578125, 'topo_head': 0.984375, 'score': 0.830078125, 'examples_seen': 13227, 'step': 4750, 'algorithm': 'topological_sort'}
I0827 17:21:10.154991 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.759, current avg val score is 0.763, val scores are: mst_kruskal: 0.797, mst_prim: 0.858, naive_string_matcher: 0.780, optimal_bst: 0.913, quickselect: 0.219, quicksort: 0.906, segments_intersect: 0.632, strongly_connected_components: 0.771, task_scheduling: 0.923, topological_sort: 0.830
I0827 17:21:28.047239 134493687799808 run.py:695] Algo mst_kruskal step 4800 current loss 0.082075, current_train_items 105940.
I0827 17:21:28.058806 134493687799808 run.py:695] Algo mst_prim step 4800 current loss 0.365661, current_train_items 97801.
I0827 17:21:28.066954 134493687799808 run.py:695] Algo naive_string_matcher step 4800 current loss 1.073701, current_train_items 65611.
I0827 17:21:28.079175 134493687799808 run.py:695] Algo optimal_bst step 4800 current loss 0.424432, current_train_items 29264.
I0827 17:21:28.156760 134493687799808 run.py:695] Algo quickselect step 4800 current loss 3.313869, current_train_items 11597.
I0827 17:21:28.167154 134493687799808 run.py:695] Algo quicksort step 4800 current loss 2.159412, current_train_items 7300.
I0827 17:21:28.185125 134493687799808 run.py:695] Algo segments_intersect step 4800 current loss 0.706835, current_train_items 122912.
I0827 17:21:28.196254 134493687799808 run.py:695] Algo strongly_connected_components step 4800 current loss 0.860891, current_train_items 5616.
I0827 17:21:28.214341 134493687799808 run.py:695] Algo task_scheduling step 4800 current loss 0.156081, current_train_items 29264.
I0827 17:21:28.227142 134493687799808 run.py:695] Algo topological_sort step 4800 current loss 0.000000, current_train_items 13368.
I0827 17:21:28.344889 134493687799808 run.py:730] (val) algo mst_kruskal step 4800: {'in_mst': 0.7875894988066825, 'score': 0.7875894988066825, 'examples_seen': 105940, 'step': 4800, 'algorithm': 'mst_kruskal'}
I0827 17:21:28.366270 134493687799808 run.py:730] (val) algo mst_prim step 4800: {'pi': 0.857421875, 'score': 0.857421875, 'examples_seen': 97801, 'step': 4800, 'algorithm': 'mst_prim'}
I0827 17:21:29.110080 134493687799808 run.py:730] (val) algo naive_string_matcher step 4800: {'match': 0.7802734375, 'score': 0.7802734375, 'examples_seen': 65611, 'step': 4800, 'algorithm': 'naive_string_matcher'}
I0827 17:21:29.158605 134493687799808 run.py:730] (val) algo optimal_bst step 4800: {'root': 0.8726211072664359, 'score': 0.8726211072664359, 'examples_seen': 29264, 'step': 4800, 'algorithm': 'optimal_bst'}
I0827 17:21:32.833396 134493687799808 run.py:730] (val) algo quickselect step 4800: {'median': 0.1943359375, 'score': 0.1943359375, 'examples_seen': 11597, 'step': 4800, 'algorithm': 'quickselect'}
I0827 17:21:32.979118 134493687799808 run.py:730] (val) algo quicksort step 4800: {'pred': 0.953125, 'score': 0.953125, 'examples_seen': 7300, 'step': 4800, 'algorithm': 'quicksort'}
I0827 17:21:33.472532 134493687799808 run.py:730] (val) algo segments_intersect step 4800: {'intersect': 0.5750421585160203, 'score': 0.5750421585160203, 'examples_seen': 122912, 'step': 4800, 'algorithm': 'segments_intersect'}
I0827 17:21:33.578384 134493687799808 run.py:730] (val) algo strongly_connected_components step 4800: {'scc_id': 0.705078125, 'score': 0.705078125, 'examples_seen': 5616, 'step': 4800, 'algorithm': 'strongly_connected_components'}
I0827 17:21:33.593619 134493687799808 run.py:730] (val) algo task_scheduling step 4800: {'selected': 0.9073010664479082, 'score': 0.9073010664479082, 'examples_seen': 29264, 'step': 4800, 'algorithm': 'task_scheduling'}
I0827 17:21:33.649598 134493687799808 run.py:730] (val) algo topological_sort step 4800: {'topo': 0.669921875, 'topo_head': 1.0, 'score': 0.8349609375, 'examples_seen': 13368, 'step': 4800, 'algorithm': 'topological_sort'}
I0827 17:21:33.649787 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.747, val scores are: mst_kruskal: 0.788, mst_prim: 0.857, naive_string_matcher: 0.780, optimal_bst: 0.873, quickselect: 0.194, quicksort: 0.953, segments_intersect: 0.575, strongly_connected_components: 0.705, task_scheduling: 0.907, topological_sort: 0.835
I0827 17:21:51.214687 134493687799808 run.py:695] Algo mst_kruskal step 4850 current loss 0.175634, current_train_items 107049.
I0827 17:21:51.227689 134493687799808 run.py:695] Algo mst_prim step 4850 current loss 0.572161, current_train_items 98819.
I0827 17:21:51.243821 134493687799808 run.py:695] Algo naive_string_matcher step 4850 current loss 1.846014, current_train_items 66302.
I0827 17:21:51.265372 134493687799808 run.py:695] Algo optimal_bst step 4850 current loss 0.403650, current_train_items 29568.
I0827 17:21:51.349903 134493687799808 run.py:695] Algo quickselect step 4850 current loss 2.219744, current_train_items 11720.
I0827 17:21:51.364518 134493687799808 run.py:695] Algo quicksort step 4850 current loss 0.000000, current_train_items 7375.
I0827 17:21:51.388310 134493687799808 run.py:695] Algo segments_intersect step 4850 current loss 0.625775, current_train_items 124192.
I0827 17:21:51.933904 134493687799808 run.py:695] Algo strongly_connected_components step 4850 current loss 1.238639, current_train_items 5676.
I0827 17:21:51.944352 134493687799808 run.py:695] Algo task_scheduling step 4850 current loss 0.165930, current_train_items 29568.
I0827 17:21:51.955824 134493687799808 run.py:695] Algo topological_sort step 4850 current loss 0.815117, current_train_items 13507.
I0827 17:21:52.070572 134493687799808 run.py:730] (val) algo mst_kruskal step 4850: {'in_mst': 0.8223844282238443, 'score': 0.8223844282238443, 'examples_seen': 107049, 'step': 4850, 'algorithm': 'mst_kruskal'}
I0827 17:21:52.091305 134493687799808 run.py:730] (val) algo mst_prim step 4850: {'pi': 0.8408203125, 'score': 0.8408203125, 'examples_seen': 98819, 'step': 4850, 'algorithm': 'mst_prim'}
I0827 17:21:52.838485 134493687799808 run.py:730] (val) algo naive_string_matcher step 4850: {'match': 0.753173828125, 'score': 0.753173828125, 'examples_seen': 66302, 'step': 4850, 'algorithm': 'naive_string_matcher'}
I0827 17:21:52.886442 134493687799808 run.py:730] (val) algo optimal_bst step 4850: {'root': 0.8919225778546713, 'score': 0.8919225778546713, 'examples_seen': 29568, 'step': 4850, 'algorithm': 'optimal_bst'}
I0827 17:21:56.564722 134493687799808 run.py:730] (val) algo quickselect step 4850: {'median': 0.212646484375, 'score': 0.212646484375, 'examples_seen': 11720, 'step': 4850, 'algorithm': 'quickselect'}
I0827 17:21:56.710149 134493687799808 run.py:730] (val) algo quicksort step 4850: {'pred': 0.8935546875, 'score': 0.8935546875, 'examples_seen': 7375, 'step': 4850, 'algorithm': 'quicksort'}
I0827 17:21:57.195453 134493687799808 run.py:730] (val) algo segments_intersect step 4850: {'intersect': 0.6576663452266153, 'score': 0.6576663452266153, 'examples_seen': 124192, 'step': 4850, 'algorithm': 'segments_intersect'}
I0827 17:21:57.300958 134493687799808 run.py:730] (val) algo strongly_connected_components step 4850: {'scc_id': 0.771484375, 'score': 0.771484375, 'examples_seen': 5676, 'step': 4850, 'algorithm': 'strongly_connected_components'}
I0827 17:21:57.314562 134493687799808 run.py:730] (val) algo task_scheduling step 4850: {'selected': 0.9267515923566878, 'score': 0.9267515923566878, 'examples_seen': 29568, 'step': 4850, 'algorithm': 'task_scheduling'}
I0827 17:21:57.368417 134493687799808 run.py:730] (val) algo topological_sort step 4850: {'topo': 0.6328125, 'topo_head': 1.0, 'score': 0.81640625, 'examples_seen': 13507, 'step': 4850, 'algorithm': 'topological_sort'}
I0827 17:21:57.368802 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.759, val scores are: mst_kruskal: 0.822, mst_prim: 0.841, naive_string_matcher: 0.753, optimal_bst: 0.892, quickselect: 0.213, quicksort: 0.894, segments_intersect: 0.658, strongly_connected_components: 0.771, task_scheduling: 0.927, topological_sort: 0.816
I0827 17:22:14.663727 134493687799808 run.py:695] Algo mst_kruskal step 4900 current loss 0.081185, current_train_items 108175.
I0827 17:22:14.682953 134493687799808 run.py:695] Algo mst_prim step 4900 current loss 0.382100, current_train_items 99827.
I0827 17:22:14.701996 134493687799808 run.py:695] Algo naive_string_matcher step 4900 current loss 0.850014, current_train_items 66985.
I0827 17:22:14.719163 134493687799808 run.py:695] Algo optimal_bst step 4900 current loss 0.742864, current_train_items 29872.
I0827 17:22:14.798629 134493687799808 run.py:695] Algo quickselect step 4900 current loss 2.265820, current_train_items 11845.
I0827 17:22:14.818935 134493687799808 run.py:695] Algo quicksort step 4900 current loss 2.771562, current_train_items 7450.
I0827 17:22:14.841068 134493687799808 run.py:695] Algo segments_intersect step 4900 current loss 0.673381, current_train_items 125472.
I0827 17:22:14.862286 134493687799808 run.py:695] Algo strongly_connected_components step 4900 current loss 0.899460, current_train_items 5735.
I0827 17:22:14.883459 134493687799808 run.py:695] Algo task_scheduling step 4900 current loss 2.342921, current_train_items 29872.
I0827 17:22:14.898715 134493687799808 run.py:695] Algo topological_sort step 4900 current loss 2.660305, current_train_items 13648.
I0827 17:22:15.045254 134493687799808 run.py:730] (val) algo mst_kruskal step 4900: {'in_mst': 0.8068550254747568, 'score': 0.8068550254747568, 'examples_seen': 108175, 'step': 4900, 'algorithm': 'mst_kruskal'}
I0827 17:22:15.070778 134493687799808 run.py:730] (val) algo mst_prim step 4900: {'pi': 0.845703125, 'score': 0.845703125, 'examples_seen': 99827, 'step': 4900, 'algorithm': 'mst_prim'}
I0827 17:22:15.914340 134493687799808 run.py:730] (val) algo naive_string_matcher step 4900: {'match': 0.770263671875, 'score': 0.770263671875, 'examples_seen': 66985, 'step': 4900, 'algorithm': 'naive_string_matcher'}
I0827 17:22:15.962377 134493687799808 run.py:730] (val) algo optimal_bst step 4900: {'root': 0.900140570934256, 'score': 0.900140570934256, 'examples_seen': 29872, 'step': 4900, 'algorithm': 'optimal_bst'}
I0827 17:22:19.650433 134493687799808 run.py:730] (val) algo quickselect step 4900: {'median': 0.1923828125, 'score': 0.1923828125, 'examples_seen': 11845, 'step': 4900, 'algorithm': 'quickselect'}
I0827 17:22:19.796400 134493687799808 run.py:730] (val) algo quicksort step 4900: {'pred': 0.9384765625, 'score': 0.9384765625, 'examples_seen': 7450, 'step': 4900, 'algorithm': 'quicksort'}
I0827 17:22:20.295696 134493687799808 run.py:730] (val) algo segments_intersect step 4900: {'intersect': 0.53737616331432, 'score': 0.53737616331432, 'examples_seen': 125472, 'step': 4900, 'algorithm': 'segments_intersect'}
I0827 17:22:20.401100 134493687799808 run.py:730] (val) algo strongly_connected_components step 4900: {'scc_id': 0.779296875, 'score': 0.779296875, 'examples_seen': 5735, 'step': 4900, 'algorithm': 'strongly_connected_components'}
I0827 17:22:20.414872 134493687799808 run.py:730] (val) algo task_scheduling step 4900: {'selected': 0.9447077409162716, 'score': 0.9447077409162716, 'examples_seen': 29872, 'step': 4900, 'algorithm': 'task_scheduling'}
I0827 17:22:20.468979 134493687799808 run.py:730] (val) algo topological_sort step 4900: {'topo': 0.7060546875, 'topo_head': 0.984375, 'score': 0.84521484375, 'examples_seen': 13648, 'step': 4900, 'algorithm': 'topological_sort'}
I0827 17:22:20.469165 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.756, val scores are: mst_kruskal: 0.807, mst_prim: 0.846, naive_string_matcher: 0.770, optimal_bst: 0.900, quickselect: 0.192, quicksort: 0.938, segments_intersect: 0.537, strongly_connected_components: 0.779, task_scheduling: 0.945, topological_sort: 0.845
I0827 17:22:37.231653 134493687799808 run.py:695] Algo mst_kruskal step 4950 current loss 0.174082, current_train_items 109227.
I0827 17:22:37.241877 134493687799808 run.py:695] Algo mst_prim step 4950 current loss 0.250263, current_train_items 100825.
I0827 17:22:37.250798 134493687799808 run.py:695] Algo naive_string_matcher step 4950 current loss 2.041015, current_train_items 67669.
I0827 17:22:37.265576 134493687799808 run.py:695] Algo optimal_bst step 4950 current loss 0.000000, current_train_items 30176.
I0827 17:22:37.353393 134493687799808 run.py:695] Algo quickselect step 4950 current loss 2.302383, current_train_items 11965.
I0827 17:22:37.371384 134493687799808 run.py:695] Algo quicksort step 4950 current loss 19.043638, current_train_items 7525.
I0827 17:22:37.393067 134493687799808 run.py:695] Algo segments_intersect step 4950 current loss 0.682601, current_train_items 126752.
I0827 17:22:37.419164 134493687799808 run.py:695] Algo strongly_connected_components step 4950 current loss 1.457783, current_train_items 5792.
I0827 17:22:37.435705 134493687799808 run.py:695] Algo task_scheduling step 4950 current loss 0.000000, current_train_items 30176.
I0827 17:22:37.457098 134493687799808 run.py:695] Algo topological_sort step 4950 current loss 3.021251, current_train_items 13787.
I0827 17:22:37.634564 134493687799808 run.py:730] (val) algo mst_kruskal step 4950: {'in_mst': 0.8258064516129033, 'score': 0.8258064516129033, 'examples_seen': 109227, 'step': 4950, 'algorithm': 'mst_kruskal'}
I0827 17:22:37.657486 134493687799808 run.py:730] (val) algo mst_prim step 4950: {'pi': 0.869140625, 'score': 0.869140625, 'examples_seen': 100825, 'step': 4950, 'algorithm': 'mst_prim'}
I0827 17:22:38.791391 134493687799808 run.py:730] (val) algo naive_string_matcher step 4950: {'match': 0.75390625, 'score': 0.75390625, 'examples_seen': 67669, 'step': 4950, 'algorithm': 'naive_string_matcher'}
I0827 17:22:38.841624 134493687799808 run.py:730] (val) algo optimal_bst step 4950: {'root': 0.9010596885813149, 'score': 0.9010596885813149, 'examples_seen': 30176, 'step': 4950, 'algorithm': 'optimal_bst'}
I0827 17:22:42.518574 134493687799808 run.py:730] (val) algo quickselect step 4950: {'median': 0.221435546875, 'score': 0.221435546875, 'examples_seen': 11965, 'step': 4950, 'algorithm': 'quickselect'}
I0827 17:22:42.663566 134493687799808 run.py:730] (val) algo quicksort step 4950: {'pred': 0.9384765625, 'score': 0.9384765625, 'examples_seen': 7525, 'step': 4950, 'algorithm': 'quicksort'}
I0827 17:22:43.165866 134493687799808 run.py:730] (val) algo segments_intersect step 4950: {'intersect': 0.46579804560260585, 'score': 0.46579804560260585, 'examples_seen': 126752, 'step': 4950, 'algorithm': 'segments_intersect'}
I0827 17:22:43.272117 134493687799808 run.py:730] (val) algo strongly_connected_components step 4950: {'scc_id': 0.7783203125, 'score': 0.7783203125, 'examples_seen': 5792, 'step': 4950, 'algorithm': 'strongly_connected_components'}
I0827 17:22:43.285973 134493687799808 run.py:730] (val) algo task_scheduling step 4950: {'selected': 0.9274653626731866, 'score': 0.9274653626731866, 'examples_seen': 30176, 'step': 4950, 'algorithm': 'task_scheduling'}
I0827 17:22:43.340341 134493687799808 run.py:730] (val) algo topological_sort step 4950: {'topo': 0.6591796875, 'topo_head': 1.0, 'score': 0.82958984375, 'examples_seen': 13787, 'step': 4950, 'algorithm': 'topological_sort'}
I0827 17:22:43.340575 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.751, val scores are: mst_kruskal: 0.826, mst_prim: 0.869, naive_string_matcher: 0.754, optimal_bst: 0.901, quickselect: 0.221, quicksort: 0.938, segments_intersect: 0.466, strongly_connected_components: 0.778, task_scheduling: 0.927, topological_sort: 0.830
I0827 17:23:00.179342 134493687799808 run.py:695] Algo mst_kruskal step 5000 current loss 0.060064, current_train_items 110313.
I0827 17:23:00.188948 134493687799808 run.py:695] Algo mst_prim step 5000 current loss 0.305941, current_train_items 101860.
I0827 17:23:00.197199 134493687799808 run.py:695] Algo naive_string_matcher step 5000 current loss 1.476953, current_train_items 68343.
I0827 17:23:00.209290 134493687799808 run.py:695] Algo optimal_bst step 5000 current loss 0.000000, current_train_items 30480.
I0827 17:23:00.288059 134493687799808 run.py:695] Algo quickselect step 5000 current loss 1.646689, current_train_items 12085.
I0827 17:23:00.298425 134493687799808 run.py:695] Algo quicksort step 5000 current loss 3.508348, current_train_items 7602.
I0827 17:23:00.316079 134493687799808 run.py:695] Algo segments_intersect step 5000 current loss 0.657831, current_train_items 128032.
I0827 17:23:00.326995 134493687799808 run.py:695] Algo strongly_connected_components step 5000 current loss 0.786651, current_train_items 5854.
I0827 17:23:00.344686 134493687799808 run.py:695] Algo task_scheduling step 5000 current loss 0.000000, current_train_items 30480.
I0827 17:23:00.356888 134493687799808 run.py:695] Algo topological_sort step 5000 current loss 2.420150, current_train_items 13927.
I0827 17:23:00.468934 134493687799808 run.py:730] (val) algo mst_kruskal step 5000: {'in_mst': 0.8390804597701149, 'score': 0.8390804597701149, 'examples_seen': 110313, 'step': 5000, 'algorithm': 'mst_kruskal'}
I0827 17:23:00.490068 134493687799808 run.py:730] (val) algo mst_prim step 5000: {'pi': 0.810546875, 'score': 0.810546875, 'examples_seen': 101860, 'step': 5000, 'algorithm': 'mst_prim'}
I0827 17:23:01.236781 134493687799808 run.py:730] (val) algo naive_string_matcher step 5000: {'match': 0.758056640625, 'score': 0.758056640625, 'examples_seen': 68343, 'step': 5000, 'algorithm': 'naive_string_matcher'}
I0827 17:23:01.284768 134493687799808 run.py:730] (val) algo optimal_bst step 5000: {'root': 0.9068987889273357, 'score': 0.9068987889273357, 'examples_seen': 30480, 'step': 5000, 'algorithm': 'optimal_bst'}
I0827 17:23:04.981600 134493687799808 run.py:730] (val) algo quickselect step 5000: {'median': 0.21044921875, 'score': 0.21044921875, 'examples_seen': 12085, 'step': 5000, 'algorithm': 'quickselect'}
I0827 17:23:05.126403 134493687799808 run.py:730] (val) algo quicksort step 5000: {'pred': 0.93359375, 'score': 0.93359375, 'examples_seen': 7602, 'step': 5000, 'algorithm': 'quicksort'}
I0827 17:23:05.602901 134493687799808 run.py:730] (val) algo segments_intersect step 5000: {'intersect': 0.6096851018788039, 'score': 0.6096851018788039, 'examples_seen': 128032, 'step': 5000, 'algorithm': 'segments_intersect'}
I0827 17:23:05.708310 134493687799808 run.py:730] (val) algo strongly_connected_components step 5000: {'scc_id': 0.7421875, 'score': 0.7421875, 'examples_seen': 5854, 'step': 5000, 'algorithm': 'strongly_connected_components'}
I0827 17:23:05.721831 134493687799808 run.py:730] (val) algo task_scheduling step 5000: {'selected': 0.9118136439267887, 'score': 0.9118136439267887, 'examples_seen': 30480, 'step': 5000, 'algorithm': 'task_scheduling'}
I0827 17:23:05.775645 134493687799808 run.py:730] (val) algo topological_sort step 5000: {'topo': 0.650390625, 'topo_head': 1.0, 'score': 0.8251953125, 'examples_seen': 13927, 'step': 5000, 'algorithm': 'topological_sort'}
I0827 17:23:05.775808 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.755, val scores are: mst_kruskal: 0.839, mst_prim: 0.811, naive_string_matcher: 0.758, optimal_bst: 0.907, quickselect: 0.210, quicksort: 0.934, segments_intersect: 0.610, strongly_connected_components: 0.742, task_scheduling: 0.912, topological_sort: 0.825
I0827 17:23:23.413001 134493687799808 run.py:695] Algo mst_kruskal step 5050 current loss 0.118539, current_train_items 111463.
I0827 17:23:23.422886 134493687799808 run.py:695] Algo mst_prim step 5050 current loss 0.559167, current_train_items 102904.
I0827 17:23:23.431671 134493687799808 run.py:695] Algo naive_string_matcher step 5050 current loss 1.533905, current_train_items 69031.
I0827 17:23:23.443716 134493687799808 run.py:695] Algo optimal_bst step 5050 current loss 0.000000, current_train_items 30784.
I0827 17:23:23.521207 134493687799808 run.py:695] Algo quickselect step 5050 current loss 0.000000, current_train_items 12205.
I0827 17:23:23.531840 134493687799808 run.py:695] Algo quicksort step 5050 current loss 4.985435, current_train_items 7676.
I0827 17:23:23.549935 134493687799808 run.py:695] Algo segments_intersect step 5050 current loss 0.589509, current_train_items 129312.
I0827 17:23:23.560642 134493687799808 run.py:695] Algo strongly_connected_components step 5050 current loss 1.780915, current_train_items 5910.
I0827 17:23:23.578645 134493687799808 run.py:695] Algo task_scheduling step 5050 current loss 0.000000, current_train_items 30784.
I0827 17:23:23.591455 134493687799808 run.py:695] Algo topological_sort step 5050 current loss 0.844208, current_train_items 14067.
I0827 17:23:23.707524 134493687799808 run.py:730] (val) algo mst_kruskal step 5050: {'in_mst': 0.7755568246716162, 'score': 0.7755568246716162, 'examples_seen': 111463, 'step': 5050, 'algorithm': 'mst_kruskal'}
I0827 17:23:23.729771 134493687799808 run.py:730] (val) algo mst_prim step 5050: {'pi': 0.8681640625, 'score': 0.8681640625, 'examples_seen': 102904, 'step': 5050, 'algorithm': 'mst_prim'}
I0827 17:23:24.478425 134493687799808 run.py:730] (val) algo naive_string_matcher step 5050: {'match': 0.728515625, 'score': 0.728515625, 'examples_seen': 69031, 'step': 5050, 'algorithm': 'naive_string_matcher'}
I0827 17:23:24.526404 134493687799808 run.py:730] (val) algo optimal_bst step 5050: {'root': 0.8804606401384083, 'score': 0.8804606401384083, 'examples_seen': 30784, 'step': 5050, 'algorithm': 'optimal_bst'}
I0827 17:23:28.199680 134493687799808 run.py:730] (val) algo quickselect step 5050: {'median': 0.2177734375, 'score': 0.2177734375, 'examples_seen': 12205, 'step': 5050, 'algorithm': 'quickselect'}
I0827 17:23:28.345584 134493687799808 run.py:730] (val) algo quicksort step 5050: {'pred': 0.8798828125, 'score': 0.8798828125, 'examples_seen': 7676, 'step': 5050, 'algorithm': 'quicksort'}
I0827 17:23:28.830113 134493687799808 run.py:730] (val) algo segments_intersect step 5050: {'intersect': 0.6455882352941176, 'score': 0.6455882352941176, 'examples_seen': 129312, 'step': 5050, 'algorithm': 'segments_intersect'}
I0827 17:23:28.935069 134493687799808 run.py:730] (val) algo strongly_connected_components step 5050: {'scc_id': 0.78125, 'score': 0.78125, 'examples_seen': 5910, 'step': 5050, 'algorithm': 'strongly_connected_components'}
I0827 17:23:28.948671 134493687799808 run.py:730] (val) algo task_scheduling step 5050: {'selected': 0.9343873517786562, 'score': 0.9343873517786562, 'examples_seen': 30784, 'step': 5050, 'algorithm': 'task_scheduling'}
I0827 17:23:29.003022 134493687799808 run.py:730] (val) algo topological_sort step 5050: {'topo': 0.740234375, 'topo_head': 1.0, 'score': 0.8701171875, 'examples_seen': 14067, 'step': 5050, 'algorithm': 'topological_sort'}
I0827 17:23:29.003194 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.758, val scores are: mst_kruskal: 0.776, mst_prim: 0.868, naive_string_matcher: 0.729, optimal_bst: 0.880, quickselect: 0.218, quicksort: 0.880, segments_intersect: 0.646, strongly_connected_components: 0.781, task_scheduling: 0.934, topological_sort: 0.870
I0827 17:23:45.732915 134493687799808 run.py:695] Algo mst_kruskal step 5100 current loss 0.061675, current_train_items 112517.
I0827 17:23:45.743352 134493687799808 run.py:695] Algo mst_prim step 5100 current loss 0.474208, current_train_items 103907.
I0827 17:23:45.752359 134493687799808 run.py:695] Algo naive_string_matcher step 5100 current loss 1.794432, current_train_items 69737.
I0827 17:23:45.763905 134493687799808 run.py:695] Algo optimal_bst step 5100 current loss 0.000000, current_train_items 31088.
I0827 17:23:45.842823 134493687799808 run.py:695] Algo quickselect step 5100 current loss 2.088667, current_train_items 12332.
I0827 17:23:45.852747 134493687799808 run.py:695] Algo quicksort step 5100 current loss 20.749470, current_train_items 7751.
I0827 17:23:45.870597 134493687799808 run.py:695] Algo segments_intersect step 5100 current loss 0.629574, current_train_items 130592.
I0827 17:23:45.881386 134493687799808 run.py:695] Algo strongly_connected_components step 5100 current loss 0.004342, current_train_items 5969.
I0827 17:23:45.899353 134493687799808 run.py:695] Algo task_scheduling step 5100 current loss 0.000000, current_train_items 31088.
I0827 17:23:45.911260 134493687799808 run.py:695] Algo topological_sort step 5100 current loss 1.911054, current_train_items 14206.
I0827 17:23:46.029171 134493687799808 run.py:730] (val) algo mst_kruskal step 5100: {'in_mst': 0.8409311348205625, 'score': 0.8409311348205625, 'examples_seen': 112517, 'step': 5100, 'algorithm': 'mst_kruskal'}
I0827 17:23:46.049981 134493687799808 run.py:730] (val) algo mst_prim step 5100: {'pi': 0.875, 'score': 0.875, 'examples_seen': 103907, 'step': 5100, 'algorithm': 'mst_prim'}
I0827 17:23:46.795624 134493687799808 run.py:730] (val) algo naive_string_matcher step 5100: {'match': 0.790283203125, 'score': 0.790283203125, 'examples_seen': 69737, 'step': 5100, 'algorithm': 'naive_string_matcher'}
I0827 17:23:46.843549 134493687799808 run.py:730] (val) algo optimal_bst step 5100: {'root': 0.8972750865051903, 'score': 0.8972750865051903, 'examples_seen': 31088, 'step': 5100, 'algorithm': 'optimal_bst'}
I0827 17:23:50.583591 134493687799808 run.py:730] (val) algo quickselect step 5100: {'median': 0.19287109375, 'score': 0.19287109375, 'examples_seen': 12332, 'step': 5100, 'algorithm': 'quickselect'}
I0827 17:23:50.733248 134493687799808 run.py:730] (val) algo quicksort step 5100: {'pred': 0.869140625, 'score': 0.869140625, 'examples_seen': 7751, 'step': 5100, 'algorithm': 'quicksort'}
I0827 17:23:51.444835 134493687799808 run.py:730] (val) algo segments_intersect step 5100: {'intersect': 0.5420506912442397, 'score': 0.5420506912442397, 'examples_seen': 130592, 'step': 5100, 'algorithm': 'segments_intersect'}
I0827 17:23:51.550085 134493687799808 run.py:730] (val) algo strongly_connected_components step 5100: {'scc_id': 0.765625, 'score': 0.765625, 'examples_seen': 5969, 'step': 5100, 'algorithm': 'strongly_connected_components'}
I0827 17:23:51.563646 134493687799808 run.py:730] (val) algo task_scheduling step 5100: {'selected': 0.9144254278728606, 'score': 0.9144254278728606, 'examples_seen': 31088, 'step': 5100, 'algorithm': 'task_scheduling'}
I0827 17:23:51.616780 134493687799808 run.py:730] (val) algo topological_sort step 5100: {'topo': 0.6533203125, 'topo_head': 0.984375, 'score': 0.81884765625, 'examples_seen': 14206, 'step': 5100, 'algorithm': 'topological_sort'}
I0827 17:23:51.616961 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.751, val scores are: mst_kruskal: 0.841, mst_prim: 0.875, naive_string_matcher: 0.790, optimal_bst: 0.897, quickselect: 0.193, quicksort: 0.869, segments_intersect: 0.542, strongly_connected_components: 0.766, task_scheduling: 0.914, topological_sort: 0.819
I0827 17:24:08.482571 134493687799808 run.py:695] Algo mst_kruskal step 5150 current loss 0.087291, current_train_items 113584.
I0827 17:24:08.494078 134493687799808 run.py:695] Algo mst_prim step 5150 current loss 0.338764, current_train_items 104935.
I0827 17:24:08.502891 134493687799808 run.py:695] Algo naive_string_matcher step 5150 current loss 1.253127, current_train_items 70431.
I0827 17:24:08.515023 134493687799808 run.py:695] Algo optimal_bst step 5150 current loss 0.000000, current_train_items 31392.
I0827 17:24:08.592769 134493687799808 run.py:695] Algo quickselect step 5150 current loss 2.633142, current_train_items 12451.
I0827 17:24:08.603630 134493687799808 run.py:695] Algo quicksort step 5150 current loss 1.088868, current_train_items 7827.
I0827 17:24:08.621631 134493687799808 run.py:695] Algo segments_intersect step 5150 current loss 0.650335, current_train_items 131872.
I0827 17:24:08.632633 134493687799808 run.py:695] Algo strongly_connected_components step 5150 current loss 0.000000, current_train_items 6027.
I0827 17:24:08.650205 134493687799808 run.py:695] Algo task_scheduling step 5150 current loss 0.000000, current_train_items 31392.
I0827 17:24:08.662134 134493687799808 run.py:695] Algo topological_sort step 5150 current loss 3.671502, current_train_items 14345.
I0827 17:24:08.781390 134493687799808 run.py:730] (val) algo mst_kruskal step 5150: {'in_mst': 0.7448367754830112, 'score': 0.7448367754830112, 'examples_seen': 113584, 'step': 5150, 'algorithm': 'mst_kruskal'}
I0827 17:24:08.802352 134493687799808 run.py:730] (val) algo mst_prim step 5150: {'pi': 0.8583984375, 'score': 0.8583984375, 'examples_seen': 104935, 'step': 5150, 'algorithm': 'mst_prim'}
I0827 17:24:09.553767 134493687799808 run.py:730] (val) algo naive_string_matcher step 5150: {'match': 0.806884765625, 'score': 0.806884765625, 'examples_seen': 70431, 'step': 5150, 'algorithm': 'naive_string_matcher'}
I0827 17:24:09.601774 134493687799808 run.py:730] (val) algo optimal_bst step 5150: {'root': 0.9057634083044983, 'score': 0.9057634083044983, 'examples_seen': 31392, 'step': 5150, 'algorithm': 'optimal_bst'}
I0827 17:24:13.341505 134493687799808 run.py:730] (val) algo quickselect step 5150: {'median': 0.202880859375, 'score': 0.202880859375, 'examples_seen': 12451, 'step': 5150, 'algorithm': 'quickselect'}
I0827 17:24:13.493923 134493687799808 run.py:730] (val) algo quicksort step 5150: {'pred': 0.9599609375, 'score': 0.9599609375, 'examples_seen': 7827, 'step': 5150, 'algorithm': 'quicksort'}
I0827 17:24:14.405924 134493687799808 run.py:730] (val) algo segments_intersect step 5150: {'intersect': 0.6305133767172811, 'score': 0.6305133767172811, 'examples_seen': 131872, 'step': 5150, 'algorithm': 'segments_intersect'}
I0827 17:24:14.513092 134493687799808 run.py:730] (val) algo strongly_connected_components step 5150: {'scc_id': 0.77734375, 'score': 0.77734375, 'examples_seen': 6027, 'step': 5150, 'algorithm': 'strongly_connected_components'}
I0827 17:24:14.534640 134493687799808 run.py:730] (val) algo task_scheduling step 5150: {'selected': 0.9268693508627773, 'score': 0.9268693508627773, 'examples_seen': 31392, 'step': 5150, 'algorithm': 'task_scheduling'}
I0827 17:24:14.588806 134493687799808 run.py:730] (val) algo topological_sort step 5150: {'topo': 0.6708984375, 'topo_head': 1.0, 'score': 0.83544921875, 'examples_seen': 14345, 'step': 5150, 'algorithm': 'topological_sort'}
I0827 17:24:14.589048 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.763, current avg val score is 0.765, val scores are: mst_kruskal: 0.745, mst_prim: 0.858, naive_string_matcher: 0.807, optimal_bst: 0.906, quickselect: 0.203, quicksort: 0.960, segments_intersect: 0.631, strongly_connected_components: 0.777, task_scheduling: 0.927, topological_sort: 0.835
I0827 17:24:32.507589 134493687799808 run.py:695] Algo mst_kruskal step 5200 current loss 0.099182, current_train_items 114715.
I0827 17:24:32.518378 134493687799808 run.py:695] Algo mst_prim step 5200 current loss 0.744447, current_train_items 105957.
I0827 17:24:32.526623 134493687799808 run.py:695] Algo naive_string_matcher step 5200 current loss 1.800396, current_train_items 71131.
I0827 17:24:32.539127 134493687799808 run.py:695] Algo optimal_bst step 5200 current loss 0.000000, current_train_items 31696.
I0827 17:24:32.616819 134493687799808 run.py:695] Algo quickselect step 5200 current loss 1.774729, current_train_items 12562.
I0827 17:24:32.627481 134493687799808 run.py:695] Algo quicksort step 5200 current loss 3.553998, current_train_items 7902.
I0827 17:24:32.645875 134493687799808 run.py:695] Algo segments_intersect step 5200 current loss 0.631509, current_train_items 133152.
I0827 17:24:32.657068 134493687799808 run.py:695] Algo strongly_connected_components step 5200 current loss 1.269827, current_train_items 6087.
I0827 17:24:32.674916 134493687799808 run.py:695] Algo task_scheduling step 5200 current loss 0.000000, current_train_items 31696.
I0827 17:24:32.686637 134493687799808 run.py:695] Algo topological_sort step 5200 current loss 1.523468, current_train_items 14483.
I0827 17:24:32.801099 134493687799808 run.py:730] (val) algo mst_kruskal step 5200: {'in_mst': 0.8105726872246696, 'score': 0.8105726872246696, 'examples_seen': 114715, 'step': 5200, 'algorithm': 'mst_kruskal'}
I0827 17:24:32.822154 134493687799808 run.py:730] (val) algo mst_prim step 5200: {'pi': 0.837890625, 'score': 0.837890625, 'examples_seen': 105957, 'step': 5200, 'algorithm': 'mst_prim'}
I0827 17:24:33.566663 134493687799808 run.py:730] (val) algo naive_string_matcher step 5200: {'match': 0.76513671875, 'score': 0.76513671875, 'examples_seen': 71131, 'step': 5200, 'algorithm': 'naive_string_matcher'}
I0827 17:24:33.614366 134493687799808 run.py:730] (val) algo optimal_bst step 5200: {'root': 0.8996539792387543, 'score': 0.8996539792387543, 'examples_seen': 31696, 'step': 5200, 'algorithm': 'optimal_bst'}
I0827 17:24:37.333713 134493687799808 run.py:730] (val) algo quickselect step 5200: {'median': 0.208984375, 'score': 0.208984375, 'examples_seen': 12562, 'step': 5200, 'algorithm': 'quickselect'}
I0827 17:24:37.486647 134493687799808 run.py:730] (val) algo quicksort step 5200: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 7902, 'step': 5200, 'algorithm': 'quicksort'}
I0827 17:24:38.423769 134493687799808 run.py:730] (val) algo segments_intersect step 5200: {'intersect': 0.6490407112774919, 'score': 0.6490407112774919, 'examples_seen': 133152, 'step': 5200, 'algorithm': 'segments_intersect'}
I0827 17:24:38.530877 134493687799808 run.py:730] (val) algo strongly_connected_components step 5200: {'scc_id': 0.7431640625, 'score': 0.7431640625, 'examples_seen': 6087, 'step': 5200, 'algorithm': 'strongly_connected_components'}
I0827 17:24:38.547280 134493687799808 run.py:730] (val) algo task_scheduling step 5200: {'selected': 0.8994181213632586, 'score': 0.8994181213632586, 'examples_seen': 31696, 'step': 5200, 'algorithm': 'task_scheduling'}
I0827 17:24:38.603508 134493687799808 run.py:730] (val) algo topological_sort step 5200: {'topo': 0.591796875, 'topo_head': 1.0, 'score': 0.7958984375, 'examples_seen': 14483, 'step': 5200, 'algorithm': 'topological_sort'}
I0827 17:24:38.603713 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.756, val scores are: mst_kruskal: 0.811, mst_prim: 0.838, naive_string_matcher: 0.765, optimal_bst: 0.900, quickselect: 0.209, quicksort: 0.948, segments_intersect: 0.649, strongly_connected_components: 0.743, task_scheduling: 0.899, topological_sort: 0.796
I0827 17:24:55.760441 134493687799808 run.py:695] Algo mst_kruskal step 5250 current loss 0.084461, current_train_items 115817.
I0827 17:24:55.770730 134493687799808 run.py:695] Algo mst_prim step 5250 current loss 0.372537, current_train_items 106980.
I0827 17:24:55.779564 134493687799808 run.py:695] Algo naive_string_matcher step 5250 current loss 1.041106, current_train_items 71800.
I0827 17:24:55.791575 134493687799808 run.py:695] Algo optimal_bst step 5250 current loss 0.000000, current_train_items 32000.
I0827 17:24:55.869315 134493687799808 run.py:695] Algo quickselect step 5250 current loss 1.623831, current_train_items 12680.
I0827 17:24:55.879927 134493687799808 run.py:695] Algo quicksort step 5250 current loss 0.000000, current_train_items 7980.
I0827 17:24:55.897631 134493687799808 run.py:695] Algo segments_intersect step 5250 current loss 0.654181, current_train_items 134432.
I0827 17:24:55.908556 134493687799808 run.py:695] Algo strongly_connected_components step 5250 current loss 0.598809, current_train_items 6144.
I0827 17:24:55.926608 134493687799808 run.py:695] Algo task_scheduling step 5250 current loss 0.000000, current_train_items 32000.
I0827 17:24:55.939003 134493687799808 run.py:695] Algo topological_sort step 5250 current loss 4.100052, current_train_items 14624.
I0827 17:24:56.053611 134493687799808 run.py:730] (val) algo mst_kruskal step 5250: {'in_mst': 0.826710816777042, 'score': 0.826710816777042, 'examples_seen': 115817, 'step': 5250, 'algorithm': 'mst_kruskal'}
I0827 17:24:56.075085 134493687799808 run.py:730] (val) algo mst_prim step 5250: {'pi': 0.869140625, 'score': 0.869140625, 'examples_seen': 106980, 'step': 5250, 'algorithm': 'mst_prim'}
I0827 17:24:56.821448 134493687799808 run.py:730] (val) algo naive_string_matcher step 5250: {'match': 0.749755859375, 'score': 0.749755859375, 'examples_seen': 71800, 'step': 5250, 'algorithm': 'naive_string_matcher'}
I0827 17:24:56.870035 134493687799808 run.py:730] (val) algo optimal_bst step 5250: {'root': 0.8919225778546713, 'score': 0.8919225778546713, 'examples_seen': 32000, 'step': 5250, 'algorithm': 'optimal_bst'}
I0827 17:25:00.555006 134493687799808 run.py:730] (val) algo quickselect step 5250: {'median': 0.208740234375, 'score': 0.208740234375, 'examples_seen': 12680, 'step': 5250, 'algorithm': 'quickselect'}
I0827 17:25:00.700652 134493687799808 run.py:730] (val) algo quicksort step 5250: {'pred': 0.8056640625, 'score': 0.8056640625, 'examples_seen': 7980, 'step': 5250, 'algorithm': 'quicksort'}
I0827 17:25:01.264140 134493687799808 run.py:730] (val) algo segments_intersect step 5250: {'intersect': 0.6029689608636977, 'score': 0.6029689608636977, 'examples_seen': 134432, 'step': 5250, 'algorithm': 'segments_intersect'}
I0827 17:25:01.372656 134493687799808 run.py:730] (val) algo strongly_connected_components step 5250: {'scc_id': 0.7626953125, 'score': 0.7626953125, 'examples_seen': 6144, 'step': 5250, 'algorithm': 'strongly_connected_components'}
I0827 17:25:01.395369 134493687799808 run.py:730] (val) algo task_scheduling step 5250: {'selected': 0.9050371593724194, 'score': 0.9050371593724194, 'examples_seen': 32000, 'step': 5250, 'algorithm': 'task_scheduling'}
I0827 17:25:01.450265 134493687799808 run.py:730] (val) algo topological_sort step 5250: {'topo': 0.6669921875, 'topo_head': 1.0, 'score': 0.83349609375, 'examples_seen': 14624, 'step': 5250, 'algorithm': 'topological_sort'}
I0827 17:25:01.450671 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.746, val scores are: mst_kruskal: 0.827, mst_prim: 0.869, naive_string_matcher: 0.750, optimal_bst: 0.892, quickselect: 0.209, quicksort: 0.806, segments_intersect: 0.603, strongly_connected_components: 0.763, task_scheduling: 0.905, topological_sort: 0.833
I0827 17:25:19.019341 134493687799808 run.py:695] Algo mst_kruskal step 5300 current loss 0.130549, current_train_items 116932.
I0827 17:25:19.029158 134493687799808 run.py:695] Algo mst_prim step 5300 current loss 0.743776, current_train_items 107994.
I0827 17:25:19.037358 134493687799808 run.py:695] Algo naive_string_matcher step 5300 current loss 1.516923, current_train_items 72469.
I0827 17:25:19.049422 134493687799808 run.py:695] Algo optimal_bst step 5300 current loss 0.000000, current_train_items 32304.
I0827 17:25:19.127657 134493687799808 run.py:695] Algo quickselect step 5300 current loss 2.969043, current_train_items 12797.
I0827 17:25:19.138630 134493687799808 run.py:695] Algo quicksort step 5300 current loss 0.000000, current_train_items 8056.
I0827 17:25:19.156318 134493687799808 run.py:695] Algo segments_intersect step 5300 current loss 0.715728, current_train_items 135712.
I0827 17:25:19.167196 134493687799808 run.py:695] Algo strongly_connected_components step 5300 current loss 0.000000, current_train_items 6202.
I0827 17:25:19.185196 134493687799808 run.py:695] Algo task_scheduling step 5300 current loss 0.000000, current_train_items 32304.
I0827 17:25:19.198038 134493687799808 run.py:695] Algo topological_sort step 5300 current loss 1.261749, current_train_items 14763.
I0827 17:25:19.316622 134493687799808 run.py:730] (val) algo mst_kruskal step 5300: {'in_mst': 0.7943831494483451, 'score': 0.7943831494483451, 'examples_seen': 116932, 'step': 5300, 'algorithm': 'mst_kruskal'}
I0827 17:25:19.337460 134493687799808 run.py:730] (val) algo mst_prim step 5300: {'pi': 0.845703125, 'score': 0.845703125, 'examples_seen': 107994, 'step': 5300, 'algorithm': 'mst_prim'}
I0827 17:25:20.088036 134493687799808 run.py:730] (val) algo naive_string_matcher step 5300: {'match': 0.70361328125, 'score': 0.70361328125, 'examples_seen': 72469, 'step': 5300, 'algorithm': 'naive_string_matcher'}
I0827 17:25:20.135736 134493687799808 run.py:730] (val) algo optimal_bst step 5300: {'root': 0.8843533737024222, 'score': 0.8843533737024222, 'examples_seen': 32304, 'step': 5300, 'algorithm': 'optimal_bst'}
I0827 17:25:23.820059 134493687799808 run.py:730] (val) algo quickselect step 5300: {'median': 0.181884765625, 'score': 0.181884765625, 'examples_seen': 12797, 'step': 5300, 'algorithm': 'quickselect'}
I0827 17:25:23.966130 134493687799808 run.py:730] (val) algo quicksort step 5300: {'pred': 0.919921875, 'score': 0.919921875, 'examples_seen': 8056, 'step': 5300, 'algorithm': 'quicksort'}
I0827 17:25:24.474596 134493687799808 run.py:730] (val) algo segments_intersect step 5300: {'intersect': 0.6719400499583681, 'score': 0.6719400499583681, 'examples_seen': 135712, 'step': 5300, 'algorithm': 'segments_intersect'}
I0827 17:25:24.580270 134493687799808 run.py:730] (val) algo strongly_connected_components step 5300: {'scc_id': 0.783203125, 'score': 0.783203125, 'examples_seen': 6202, 'step': 5300, 'algorithm': 'strongly_connected_components'}
I0827 17:25:24.593785 134493687799808 run.py:730] (val) algo task_scheduling step 5300: {'selected': 0.8936535162950258, 'score': 0.8936535162950258, 'examples_seen': 32304, 'step': 5300, 'algorithm': 'task_scheduling'}
I0827 17:25:24.647115 134493687799808 run.py:730] (val) algo topological_sort step 5300: {'topo': 0.666015625, 'topo_head': 1.0, 'score': 0.8330078125, 'examples_seen': 14763, 'step': 5300, 'algorithm': 'topological_sort'}
I0827 17:25:24.647309 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.751, val scores are: mst_kruskal: 0.794, mst_prim: 0.846, naive_string_matcher: 0.704, optimal_bst: 0.884, quickselect: 0.182, quicksort: 0.920, segments_intersect: 0.672, strongly_connected_components: 0.783, task_scheduling: 0.894, topological_sort: 0.833
I0827 17:25:42.362080 134493687799808 run.py:695] Algo mst_kruskal step 5350 current loss 0.077439, current_train_items 118014.
I0827 17:25:42.372424 134493687799808 run.py:695] Algo mst_prim step 5350 current loss 0.290453, current_train_items 109000.
I0827 17:25:42.381213 134493687799808 run.py:695] Algo naive_string_matcher step 5350 current loss 1.594433, current_train_items 73160.
I0827 17:25:42.393944 134493687799808 run.py:695] Algo optimal_bst step 5350 current loss 0.000000, current_train_items 32608.
I0827 17:25:42.471444 134493687799808 run.py:695] Algo quickselect step 5350 current loss 3.092240, current_train_items 12924.
I0827 17:25:42.482363 134493687799808 run.py:695] Algo quicksort step 5350 current loss 16.030071, current_train_items 8132.
I0827 17:25:42.500396 134493687799808 run.py:695] Algo segments_intersect step 5350 current loss 0.678980, current_train_items 136992.
I0827 17:25:42.511334 134493687799808 run.py:695] Algo strongly_connected_components step 5350 current loss 1.039054, current_train_items 6260.
I0827 17:25:42.529326 134493687799808 run.py:695] Algo task_scheduling step 5350 current loss 0.000000, current_train_items 32608.
I0827 17:25:42.541244 134493687799808 run.py:695] Algo topological_sort step 5350 current loss 1.687667, current_train_items 14904.
I0827 17:25:42.654940 134493687799808 run.py:730] (val) algo mst_kruskal step 5350: {'in_mst': 0.8669950738916256, 'score': 0.8669950738916256, 'examples_seen': 118014, 'step': 5350, 'algorithm': 'mst_kruskal'}
I0827 17:25:42.676181 134493687799808 run.py:730] (val) algo mst_prim step 5350: {'pi': 0.8896484375, 'score': 0.8896484375, 'examples_seen': 109000, 'step': 5350, 'algorithm': 'mst_prim'}
I0827 17:25:43.420596 134493687799808 run.py:730] (val) algo naive_string_matcher step 5350: {'match': 0.73046875, 'score': 0.73046875, 'examples_seen': 73160, 'step': 5350, 'algorithm': 'naive_string_matcher'}
I0827 17:25:43.468803 134493687799808 run.py:730] (val) algo optimal_bst step 5350: {'root': 0.8591046712802768, 'score': 0.8591046712802768, 'examples_seen': 32608, 'step': 5350, 'algorithm': 'optimal_bst'}
I0827 17:25:47.150840 134493687799808 run.py:730] (val) algo quickselect step 5350: {'median': 0.18798828125, 'score': 0.18798828125, 'examples_seen': 12924, 'step': 5350, 'algorithm': 'quickselect'}
I0827 17:25:47.295644 134493687799808 run.py:730] (val) algo quicksort step 5350: {'pred': 0.904296875, 'score': 0.904296875, 'examples_seen': 8132, 'step': 5350, 'algorithm': 'quicksort'}
I0827 17:25:47.801064 134493687799808 run.py:730] (val) algo segments_intersect step 5350: {'intersect': 0.6883005977796756, 'score': 0.6883005977796756, 'examples_seen': 136992, 'step': 5350, 'algorithm': 'segments_intersect'}
I0827 17:25:47.906341 134493687799808 run.py:730] (val) algo strongly_connected_components step 5350: {'scc_id': 0.8056640625, 'score': 0.8056640625, 'examples_seen': 6260, 'step': 5350, 'algorithm': 'strongly_connected_components'}
I0827 17:25:47.919898 134493687799808 run.py:730] (val) algo task_scheduling step 5350: {'selected': 0.9380097879282218, 'score': 0.9380097879282218, 'examples_seen': 32608, 'step': 5350, 'algorithm': 'task_scheduling'}
I0827 17:25:47.973574 134493687799808 run.py:730] (val) algo topological_sort step 5350: {'topo': 0.5986328125, 'topo_head': 0.9375, 'score': 0.76806640625, 'examples_seen': 14904, 'step': 5350, 'algorithm': 'topological_sort'}
I0827 17:25:47.973741 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.764, val scores are: mst_kruskal: 0.867, mst_prim: 0.890, naive_string_matcher: 0.730, optimal_bst: 0.859, quickselect: 0.188, quicksort: 0.904, segments_intersect: 0.688, strongly_connected_components: 0.806, task_scheduling: 0.938, topological_sort: 0.768
I0827 17:26:06.111940 134493687799808 run.py:695] Algo mst_kruskal step 5400 current loss 0.136313, current_train_items 119056.
I0827 17:26:06.124146 134493687799808 run.py:695] Algo mst_prim step 5400 current loss 0.293036, current_train_items 110010.
I0827 17:26:06.133671 134493687799808 run.py:695] Algo naive_string_matcher step 5400 current loss 1.287894, current_train_items 73840.
I0827 17:26:06.145791 134493687799808 run.py:695] Algo optimal_bst step 5400 current loss 0.000000, current_train_items 32912.
I0827 17:26:06.223316 134493687799808 run.py:695] Algo quickselect step 5400 current loss 3.048367, current_train_items 13042.
I0827 17:26:06.234213 134493687799808 run.py:695] Algo quicksort step 5400 current loss 3.249811, current_train_items 8206.
I0827 17:26:06.251607 134493687799808 run.py:695] Algo segments_intersect step 5400 current loss 0.603765, current_train_items 138272.
I0827 17:26:06.262337 134493687799808 run.py:695] Algo strongly_connected_components step 5400 current loss 0.530723, current_train_items 6320.
I0827 17:26:06.280668 134493687799808 run.py:695] Algo task_scheduling step 5400 current loss 0.000000, current_train_items 32912.
I0827 17:26:06.292820 134493687799808 run.py:695] Algo topological_sort step 5400 current loss 1.471509, current_train_items 15043.
I0827 17:26:06.411135 134493687799808 run.py:730] (val) algo mst_kruskal step 5400: {'in_mst': 0.6906832298136645, 'score': 0.6906832298136645, 'examples_seen': 119056, 'step': 5400, 'algorithm': 'mst_kruskal'}
I0827 17:26:06.432378 134493687799808 run.py:730] (val) algo mst_prim step 5400: {'pi': 0.841796875, 'score': 0.841796875, 'examples_seen': 110010, 'step': 5400, 'algorithm': 'mst_prim'}
I0827 17:26:07.176403 134493687799808 run.py:730] (val) algo naive_string_matcher step 5400: {'match': 0.7177734375, 'score': 0.7177734375, 'examples_seen': 73840, 'step': 5400, 'algorithm': 'naive_string_matcher'}
I0827 17:26:07.224801 134493687799808 run.py:730] (val) algo optimal_bst step 5400: {'root': 0.8968966262975778, 'score': 0.8968966262975778, 'examples_seen': 32912, 'step': 5400, 'algorithm': 'optimal_bst'}
I0827 17:26:10.917465 134493687799808 run.py:730] (val) algo quickselect step 5400: {'median': 0.18408203125, 'score': 0.18408203125, 'examples_seen': 13042, 'step': 5400, 'algorithm': 'quickselect'}
I0827 17:26:11.063217 134493687799808 run.py:730] (val) algo quicksort step 5400: {'pred': 0.943359375, 'score': 0.943359375, 'examples_seen': 8206, 'step': 5400, 'algorithm': 'quicksort'}
I0827 17:26:11.548139 134493687799808 run.py:730] (val) algo segments_intersect step 5400: {'intersect': 0.5472665148063781, 'score': 0.5472665148063781, 'examples_seen': 138272, 'step': 5400, 'algorithm': 'segments_intersect'}
I0827 17:26:11.653686 134493687799808 run.py:730] (val) algo strongly_connected_components step 5400: {'scc_id': 0.71875, 'score': 0.71875, 'examples_seen': 6320, 'step': 5400, 'algorithm': 'strongly_connected_components'}
I0827 17:26:11.667269 134493687799808 run.py:730] (val) algo task_scheduling step 5400: {'selected': 0.919732441471572, 'score': 0.919732441471572, 'examples_seen': 32912, 'step': 5400, 'algorithm': 'task_scheduling'}
I0827 17:26:11.721634 134493687799808 run.py:730] (val) algo topological_sort step 5400: {'topo': 0.640625, 'topo_head': 1.0, 'score': 0.8203125, 'examples_seen': 15043, 'step': 5400, 'algorithm': 'topological_sort'}
I0827 17:26:11.721809 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.728, val scores are: mst_kruskal: 0.691, mst_prim: 0.842, naive_string_matcher: 0.718, optimal_bst: 0.897, quickselect: 0.184, quicksort: 0.943, segments_intersect: 0.547, strongly_connected_components: 0.719, task_scheduling: 0.920, topological_sort: 0.820
I0827 17:26:29.413085 134493687799808 run.py:695] Algo mst_kruskal step 5450 current loss 0.109993, current_train_items 120157.
I0827 17:26:29.422844 134493687799808 run.py:695] Algo mst_prim step 5450 current loss 0.278101, current_train_items 111041.
I0827 17:26:29.430746 134493687799808 run.py:695] Algo naive_string_matcher step 5450 current loss 1.448785, current_train_items 74534.
I0827 17:26:29.442714 134493687799808 run.py:695] Algo optimal_bst step 5450 current loss 0.000000, current_train_items 33216.
I0827 17:26:29.529224 134493687799808 run.py:695] Algo quickselect step 5450 current loss 2.043090, current_train_items 13167.
I0827 17:26:29.545477 134493687799808 run.py:695] Algo quicksort step 5450 current loss 6.440505, current_train_items 8280.
I0827 17:26:29.562158 134493687799808 run.py:695] Algo segments_intersect step 5450 current loss 0.639130, current_train_items 139552.
I0827 17:26:29.574078 134493687799808 run.py:695] Algo strongly_connected_components step 5450 current loss 0.777232, current_train_items 6379.
I0827 17:26:29.591053 134493687799808 run.py:695] Algo task_scheduling step 5450 current loss 0.000000, current_train_items 33216.
I0827 17:26:29.602615 134493687799808 run.py:695] Algo topological_sort step 5450 current loss 1.888900, current_train_items 15182.
I0827 17:26:29.721045 134493687799808 run.py:730] (val) algo mst_kruskal step 5450: {'in_mst': 0.7965580823601721, 'score': 0.7965580823601721, 'examples_seen': 120157, 'step': 5450, 'algorithm': 'mst_kruskal'}
I0827 17:26:29.742165 134493687799808 run.py:730] (val) algo mst_prim step 5450: {'pi': 0.830078125, 'score': 0.830078125, 'examples_seen': 111041, 'step': 5450, 'algorithm': 'mst_prim'}
I0827 17:26:30.484083 134493687799808 run.py:730] (val) algo naive_string_matcher step 5450: {'match': 0.724365234375, 'score': 0.724365234375, 'examples_seen': 74534, 'step': 5450, 'algorithm': 'naive_string_matcher'}
I0827 17:26:30.532192 134493687799808 run.py:730] (val) algo optimal_bst step 5450: {'root': 0.9016003460207612, 'score': 0.9016003460207612, 'examples_seen': 33216, 'step': 5450, 'algorithm': 'optimal_bst'}
I0827 17:26:34.219497 134493687799808 run.py:730] (val) algo quickselect step 5450: {'median': 0.201904296875, 'score': 0.201904296875, 'examples_seen': 13167, 'step': 5450, 'algorithm': 'quickselect'}
I0827 17:26:34.363880 134493687799808 run.py:730] (val) algo quicksort step 5450: {'pred': 0.904296875, 'score': 0.904296875, 'examples_seen': 8280, 'step': 5450, 'algorithm': 'quicksort'}
I0827 17:26:34.879368 134493687799808 run.py:730] (val) algo segments_intersect step 5450: {'intersect': 0.5687011859994214, 'score': 0.5687011859994214, 'examples_seen': 139552, 'step': 5450, 'algorithm': 'segments_intersect'}
I0827 17:26:34.984611 134493687799808 run.py:730] (val) algo strongly_connected_components step 5450: {'scc_id': 0.72265625, 'score': 0.72265625, 'examples_seen': 6379, 'step': 5450, 'algorithm': 'strongly_connected_components'}
I0827 17:26:34.998172 134493687799808 run.py:730] (val) algo task_scheduling step 5450: {'selected': 0.88, 'score': 0.88, 'examples_seen': 33216, 'step': 5450, 'algorithm': 'task_scheduling'}
I0827 17:26:35.052443 134493687799808 run.py:730] (val) algo topological_sort step 5450: {'topo': 0.6640625, 'topo_head': 1.0, 'score': 0.83203125, 'examples_seen': 15182, 'step': 5450, 'algorithm': 'topological_sort'}
I0827 17:26:35.052651 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.736, val scores are: mst_kruskal: 0.797, mst_prim: 0.830, naive_string_matcher: 0.724, optimal_bst: 0.902, quickselect: 0.202, quicksort: 0.904, segments_intersect: 0.569, strongly_connected_components: 0.723, task_scheduling: 0.880, topological_sort: 0.832
I0827 17:26:52.744056 134493687799808 run.py:695] Algo mst_kruskal step 5500 current loss 0.068358, current_train_items 121282.
I0827 17:26:52.753830 134493687799808 run.py:695] Algo mst_prim step 5500 current loss 0.301418, current_train_items 112084.
I0827 17:26:52.762363 134493687799808 run.py:695] Algo naive_string_matcher step 5500 current loss 1.175640, current_train_items 75231.
I0827 17:26:52.774200 134493687799808 run.py:695] Algo optimal_bst step 5500 current loss 0.000000, current_train_items 33520.
I0827 17:26:52.851768 134493687799808 run.py:695] Algo quickselect step 5500 current loss 1.913591, current_train_items 13289.
I0827 17:26:52.861924 134493687799808 run.py:695] Algo quicksort step 5500 current loss 14.220282, current_train_items 8359.
I0827 17:26:52.880408 134493687799808 run.py:695] Algo segments_intersect step 5500 current loss 0.634665, current_train_items 140832.
I0827 17:26:52.891401 134493687799808 run.py:695] Algo strongly_connected_components step 5500 current loss 0.000000, current_train_items 6436.
I0827 17:26:52.909648 134493687799808 run.py:695] Algo task_scheduling step 5500 current loss 0.000000, current_train_items 33520.
I0827 17:26:52.921288 134493687799808 run.py:695] Algo topological_sort step 5500 current loss 3.002845, current_train_items 15320.
I0827 17:26:53.033023 134493687799808 run.py:730] (val) algo mst_kruskal step 5500: {'in_mst': 0.5745454545454546, 'score': 0.5745454545454546, 'examples_seen': 121282, 'step': 5500, 'algorithm': 'mst_kruskal'}
I0827 17:26:53.054289 134493687799808 run.py:730] (val) algo mst_prim step 5500: {'pi': 0.8388671875, 'score': 0.8388671875, 'examples_seen': 112084, 'step': 5500, 'algorithm': 'mst_prim'}
I0827 17:26:53.796624 134493687799808 run.py:730] (val) algo naive_string_matcher step 5500: {'match': 0.7119140625, 'score': 0.7119140625, 'examples_seen': 75231, 'step': 5500, 'algorithm': 'naive_string_matcher'}
I0827 17:26:53.844815 134493687799808 run.py:730] (val) algo optimal_bst step 5500: {'root': 0.8926794982698962, 'score': 0.8926794982698962, 'examples_seen': 33520, 'step': 5500, 'algorithm': 'optimal_bst'}
I0827 17:26:57.534358 134493687799808 run.py:730] (val) algo quickselect step 5500: {'median': 0.220947265625, 'score': 0.220947265625, 'examples_seen': 13289, 'step': 5500, 'algorithm': 'quickselect'}
I0827 17:26:57.679580 134493687799808 run.py:730] (val) algo quicksort step 5500: {'pred': 0.7890625, 'score': 0.7890625, 'examples_seen': 8359, 'step': 5500, 'algorithm': 'quicksort'}
I0827 17:26:58.165095 134493687799808 run.py:730] (val) algo segments_intersect step 5500: {'intersect': 0.5080179602309173, 'score': 0.5080179602309173, 'examples_seen': 140832, 'step': 5500, 'algorithm': 'segments_intersect'}
I0827 17:26:58.270344 134493687799808 run.py:730] (val) algo strongly_connected_components step 5500: {'scc_id': 0.716796875, 'score': 0.716796875, 'examples_seen': 6436, 'step': 5500, 'algorithm': 'strongly_connected_components'}
I0827 17:26:58.284088 134493687799808 run.py:730] (val) algo task_scheduling step 5500: {'selected': 0.9058728881737732, 'score': 0.9058728881737732, 'examples_seen': 33520, 'step': 5500, 'algorithm': 'task_scheduling'}
I0827 17:26:58.338097 134493687799808 run.py:730] (val) algo topological_sort step 5500: {'topo': 0.64453125, 'topo_head': 1.0, 'score': 0.822265625, 'examples_seen': 15320, 'step': 5500, 'algorithm': 'topological_sort'}
I0827 17:26:58.338249 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.698, val scores are: mst_kruskal: 0.575, mst_prim: 0.839, naive_string_matcher: 0.712, optimal_bst: 0.893, quickselect: 0.221, quicksort: 0.789, segments_intersect: 0.508, strongly_connected_components: 0.717, task_scheduling: 0.906, topological_sort: 0.822
I0827 17:27:16.106722 134493687799808 run.py:695] Algo mst_kruskal step 5550 current loss 0.090313, current_train_items 122369.
I0827 17:27:16.117464 134493687799808 run.py:695] Algo mst_prim step 5550 current loss 0.436613, current_train_items 113088.
I0827 17:27:16.127079 134493687799808 run.py:695] Algo naive_string_matcher step 5550 current loss 1.628964, current_train_items 75924.
I0827 17:27:16.138549 134493687799808 run.py:695] Algo optimal_bst step 5550 current loss 0.000000, current_train_items 33824.
I0827 17:27:16.215886 134493687799808 run.py:695] Algo quickselect step 5550 current loss 2.498432, current_train_items 13404.
I0827 17:27:16.225680 134493687799808 run.py:695] Algo quicksort step 5550 current loss 6.497052, current_train_items 8434.
I0827 17:27:16.243267 134493687799808 run.py:695] Algo segments_intersect step 5550 current loss 0.654144, current_train_items 142112.
I0827 17:27:16.258710 134493687799808 run.py:695] Algo strongly_connected_components step 5550 current loss 1.452835, current_train_items 6494.
I0827 17:27:16.280897 134493687799808 run.py:695] Algo task_scheduling step 5550 current loss 0.000000, current_train_items 33824.
I0827 17:27:16.292066 134493687799808 run.py:695] Algo topological_sort step 5550 current loss 0.000000, current_train_items 15460.
I0827 17:27:16.403617 134493687799808 run.py:730] (val) algo mst_kruskal step 5550: {'in_mst': 0.8280383257690367, 'score': 0.8280383257690367, 'examples_seen': 122369, 'step': 5550, 'algorithm': 'mst_kruskal'}
I0827 17:27:16.424564 134493687799808 run.py:730] (val) algo mst_prim step 5550: {'pi': 0.833984375, 'score': 0.833984375, 'examples_seen': 113088, 'step': 5550, 'algorithm': 'mst_prim'}
I0827 17:27:17.168839 134493687799808 run.py:730] (val) algo naive_string_matcher step 5550: {'match': 0.7138671875, 'score': 0.7138671875, 'examples_seen': 75924, 'step': 5550, 'algorithm': 'naive_string_matcher'}
I0827 17:27:17.216575 134493687799808 run.py:730] (val) algo optimal_bst step 5550: {'root': 0.9030601211072664, 'score': 0.9030601211072664, 'examples_seen': 33824, 'step': 5550, 'algorithm': 'optimal_bst'}
I0827 17:27:20.889716 134493687799808 run.py:730] (val) algo quickselect step 5550: {'median': 0.218505859375, 'score': 0.218505859375, 'examples_seen': 13404, 'step': 5550, 'algorithm': 'quickselect'}
I0827 17:27:21.034301 134493687799808 run.py:730] (val) algo quicksort step 5550: {'pred': 0.806640625, 'score': 0.806640625, 'examples_seen': 8434, 'step': 5550, 'algorithm': 'quicksort'}
I0827 17:27:21.538617 134493687799808 run.py:730] (val) algo segments_intersect step 5550: {'intersect': 0.6439092822071545, 'score': 0.6439092822071545, 'examples_seen': 142112, 'step': 5550, 'algorithm': 'segments_intersect'}
I0827 17:27:21.644919 134493687799808 run.py:730] (val) algo strongly_connected_components step 5550: {'scc_id': 0.72265625, 'score': 0.72265625, 'examples_seen': 6494, 'step': 5550, 'algorithm': 'strongly_connected_components'}
I0827 17:27:21.658280 134493687799808 run.py:730] (val) algo task_scheduling step 5550: {'selected': 0.9329221279876638, 'score': 0.9329221279876638, 'examples_seen': 33824, 'step': 5550, 'algorithm': 'task_scheduling'}
I0827 17:27:21.712164 134493687799808 run.py:730] (val) algo topological_sort step 5550: {'topo': 0.62890625, 'topo_head': 1.0, 'score': 0.814453125, 'examples_seen': 15460, 'step': 5550, 'algorithm': 'topological_sort'}
I0827 17:27:21.712350 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.742, val scores are: mst_kruskal: 0.828, mst_prim: 0.834, naive_string_matcher: 0.714, optimal_bst: 0.903, quickselect: 0.219, quicksort: 0.807, segments_intersect: 0.644, strongly_connected_components: 0.723, task_scheduling: 0.933, topological_sort: 0.814
I0827 17:27:38.992169 134493687799808 run.py:695] Algo mst_kruskal step 5600 current loss 0.105075, current_train_items 123481.
I0827 17:27:39.002263 134493687799808 run.py:695] Algo mst_prim step 5600 current loss 0.568700, current_train_items 114090.
I0827 17:27:39.011017 134493687799808 run.py:695] Algo naive_string_matcher step 5600 current loss 0.896691, current_train_items 76581.
I0827 17:27:39.022838 134493687799808 run.py:695] Algo optimal_bst step 5600 current loss 0.290344, current_train_items 34144.
I0827 17:27:39.109696 134493687799808 run.py:695] Algo quickselect step 5600 current loss 2.944910, current_train_items 13527.
I0827 17:27:39.128674 134493687799808 run.py:695] Algo quicksort step 5600 current loss 2.938461, current_train_items 8511.
I0827 17:27:39.144512 134493687799808 run.py:695] Algo segments_intersect step 5600 current loss 0.633380, current_train_items 143392.
I0827 17:27:39.155683 134493687799808 run.py:695] Algo strongly_connected_components step 5600 current loss 0.009772, current_train_items 6552.
I0827 17:27:39.172820 134493687799808 run.py:695] Algo task_scheduling step 5600 current loss 0.168918, current_train_items 34144.
I0827 17:27:39.184496 134493687799808 run.py:695] Algo topological_sort step 5600 current loss 0.000000, current_train_items 15599.
I0827 17:27:39.302069 134493687799808 run.py:730] (val) algo mst_kruskal step 5600: {'in_mst': 0.8152519291874717, 'score': 0.8152519291874717, 'examples_seen': 123481, 'step': 5600, 'algorithm': 'mst_kruskal'}
I0827 17:27:39.323036 134493687799808 run.py:730] (val) algo mst_prim step 5600: {'pi': 0.8662109375, 'score': 0.8662109375, 'examples_seen': 114090, 'step': 5600, 'algorithm': 'mst_prim'}
I0827 17:27:40.072283 134493687799808 run.py:730] (val) algo naive_string_matcher step 5600: {'match': 0.781494140625, 'score': 0.781494140625, 'examples_seen': 76581, 'step': 5600, 'algorithm': 'naive_string_matcher'}
I0827 17:27:40.120083 134493687799808 run.py:730] (val) algo optimal_bst step 5600: {'root': 0.9081963667820069, 'score': 0.9081963667820069, 'examples_seen': 34144, 'step': 5600, 'algorithm': 'optimal_bst'}
I0827 17:27:43.797102 134493687799808 run.py:730] (val) algo quickselect step 5600: {'median': 0.193603515625, 'score': 0.193603515625, 'examples_seen': 13527, 'step': 5600, 'algorithm': 'quickselect'}
I0827 17:27:43.942288 134493687799808 run.py:730] (val) algo quicksort step 5600: {'pred': 0.921875, 'score': 0.921875, 'examples_seen': 8511, 'step': 5600, 'algorithm': 'quicksort'}
I0827 17:27:44.458127 134493687799808 run.py:730] (val) algo segments_intersect step 5600: {'intersect': 0.6689895470383275, 'score': 0.6689895470383275, 'examples_seen': 143392, 'step': 5600, 'algorithm': 'segments_intersect'}
I0827 17:27:44.563780 134493687799808 run.py:730] (val) algo strongly_connected_components step 5600: {'scc_id': 0.74609375, 'score': 0.74609375, 'examples_seen': 6552, 'step': 5600, 'algorithm': 'strongly_connected_components'}
I0827 17:27:44.577149 134493687799808 run.py:730] (val) algo task_scheduling step 5600: {'selected': 0.9078838174273859, 'score': 0.9078838174273859, 'examples_seen': 34144, 'step': 5600, 'algorithm': 'task_scheduling'}
I0827 17:27:44.630773 134493687799808 run.py:730] (val) algo topological_sort step 5600: {'topo': 0.671875, 'topo_head': 1.0, 'score': 0.8359375, 'examples_seen': 15599, 'step': 5600, 'algorithm': 'topological_sort'}
I0827 17:27:44.630934 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.765, val scores are: mst_kruskal: 0.815, mst_prim: 0.866, naive_string_matcher: 0.781, optimal_bst: 0.908, quickselect: 0.194, quicksort: 0.922, segments_intersect: 0.669, strongly_connected_components: 0.746, task_scheduling: 0.908, topological_sort: 0.836
I0827 17:28:01.899929 134493687799808 run.py:695] Algo mst_kruskal step 5650 current loss 0.095160, current_train_items 124605.
I0827 17:28:01.918879 134493687799808 run.py:695] Algo mst_prim step 5650 current loss 0.488543, current_train_items 115123.
I0827 17:28:01.936463 134493687799808 run.py:695] Algo naive_string_matcher step 5650 current loss 1.381433, current_train_items 77248.
I0827 17:28:01.958113 134493687799808 run.py:695] Algo optimal_bst step 5650 current loss 0.253178, current_train_items 34448.
I0827 17:28:02.043998 134493687799808 run.py:695] Algo quickselect step 5650 current loss 2.258249, current_train_items 13647.
I0827 17:28:02.063880 134493687799808 run.py:695] Algo quicksort step 5650 current loss 0.000000, current_train_items 8587.
I0827 17:28:02.086454 134493687799808 run.py:695] Algo segments_intersect step 5650 current loss 0.653580, current_train_items 144672.
I0827 17:28:02.108094 134493687799808 run.py:695] Algo strongly_connected_components step 5650 current loss 0.576350, current_train_items 6612.
I0827 17:28:02.131575 134493687799808 run.py:695] Algo task_scheduling step 5650 current loss 0.159539, current_train_items 34448.
I0827 17:28:02.151936 134493687799808 run.py:695] Algo topological_sort step 5650 current loss 1.931992, current_train_items 15739.
I0827 17:28:02.331397 134493687799808 run.py:730] (val) algo mst_kruskal step 5650: {'in_mst': 0.8065395095367848, 'score': 0.8065395095367848, 'examples_seen': 124605, 'step': 5650, 'algorithm': 'mst_kruskal'}
I0827 17:28:02.352512 134493687799808 run.py:730] (val) algo mst_prim step 5650: {'pi': 0.8251953125, 'score': 0.8251953125, 'examples_seen': 115123, 'step': 5650, 'algorithm': 'mst_prim'}
I0827 17:28:03.097876 134493687799808 run.py:730] (val) algo naive_string_matcher step 5650: {'match': 0.719970703125, 'score': 0.719970703125, 'examples_seen': 77248, 'step': 5650, 'algorithm': 'naive_string_matcher'}
I0827 17:28:03.145647 134493687799808 run.py:730] (val) algo optimal_bst step 5650: {'root': 0.9021950692041523, 'score': 0.9021950692041523, 'examples_seen': 34448, 'step': 5650, 'algorithm': 'optimal_bst'}
I0827 17:28:06.840433 134493687799808 run.py:730] (val) algo quickselect step 5650: {'median': 0.220458984375, 'score': 0.220458984375, 'examples_seen': 13647, 'step': 5650, 'algorithm': 'quickselect'}
I0827 17:28:06.986156 134493687799808 run.py:730] (val) algo quicksort step 5650: {'pred': 0.947265625, 'score': 0.947265625, 'examples_seen': 8587, 'step': 5650, 'algorithm': 'quicksort'}
I0827 17:28:07.504047 134493687799808 run.py:730] (val) algo segments_intersect step 5650: {'intersect': 0.5771428571428572, 'score': 0.5771428571428572, 'examples_seen': 144672, 'step': 5650, 'algorithm': 'segments_intersect'}
I0827 17:28:07.610020 134493687799808 run.py:730] (val) algo strongly_connected_components step 5650: {'scc_id': 0.78515625, 'score': 0.78515625, 'examples_seen': 6612, 'step': 5650, 'algorithm': 'strongly_connected_components'}
I0827 17:28:07.623847 134493687799808 run.py:730] (val) algo task_scheduling step 5650: {'selected': 0.8823529411764706, 'score': 0.8823529411764706, 'examples_seen': 34448, 'step': 5650, 'algorithm': 'task_scheduling'}
I0827 17:28:07.677964 134493687799808 run.py:730] (val) algo topological_sort step 5650: {'topo': 0.6552734375, 'topo_head': 0.984375, 'score': 0.81982421875, 'examples_seen': 15739, 'step': 5650, 'algorithm': 'topological_sort'}
I0827 17:28:07.678137 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.765, current avg val score is 0.749, val scores are: mst_kruskal: 0.807, mst_prim: 0.825, naive_string_matcher: 0.720, optimal_bst: 0.902, quickselect: 0.220, quicksort: 0.947, segments_intersect: 0.577, strongly_connected_components: 0.785, task_scheduling: 0.882, topological_sort: 0.820
I0827 17:28:24.509132 134493687799808 run.py:695] Algo mst_kruskal step 5700 current loss 0.108818, current_train_items 125760.
I0827 17:28:24.526077 134493687799808 run.py:695] Algo mst_prim step 5700 current loss 0.221728, current_train_items 116166.
I0827 17:28:24.539542 134493687799808 run.py:695] Algo naive_string_matcher step 5700 current loss 1.926572, current_train_items 77923.
I0827 17:28:24.559258 134493687799808 run.py:695] Algo optimal_bst step 5700 current loss 0.325356, current_train_items 34752.
I0827 17:28:24.643402 134493687799808 run.py:695] Algo quickselect step 5700 current loss 1.141284, current_train_items 13764.
I0827 17:28:24.662729 134493687799808 run.py:695] Algo quicksort step 5700 current loss 3.222633, current_train_items 8664.
I0827 17:28:24.684791 134493687799808 run.py:695] Algo segments_intersect step 5700 current loss 0.701595, current_train_items 145952.
I0827 17:28:24.713212 134493687799808 run.py:695] Algo strongly_connected_components step 5700 current loss 0.000000, current_train_items 6668.
I0827 17:28:24.733701 134493687799808 run.py:695] Algo task_scheduling step 5700 current loss 0.149777, current_train_items 34752.
I0827 17:28:24.755268 134493687799808 run.py:695] Algo topological_sort step 5700 current loss 0.000000, current_train_items 15875.
I0827 17:28:24.925330 134493687799808 run.py:730] (val) algo mst_kruskal step 5700: {'in_mst': 0.8536585365853658, 'score': 0.8536585365853658, 'examples_seen': 125760, 'step': 5700, 'algorithm': 'mst_kruskal'}
I0827 17:28:24.948522 134493687799808 run.py:730] (val) algo mst_prim step 5700: {'pi': 0.853515625, 'score': 0.853515625, 'examples_seen': 116166, 'step': 5700, 'algorithm': 'mst_prim'}
I0827 17:28:26.092648 134493687799808 run.py:730] (val) algo naive_string_matcher step 5700: {'match': 0.742431640625, 'score': 0.742431640625, 'examples_seen': 77923, 'step': 5700, 'algorithm': 'naive_string_matcher'}
I0827 17:28:26.142868 134493687799808 run.py:730] (val) algo optimal_bst step 5700: {'root': 0.9017625432525952, 'score': 0.9017625432525952, 'examples_seen': 34752, 'step': 5700, 'algorithm': 'optimal_bst'}
I0827 17:28:29.839972 134493687799808 run.py:730] (val) algo quickselect step 5700: {'median': 0.230712890625, 'score': 0.230712890625, 'examples_seen': 13764, 'step': 5700, 'algorithm': 'quickselect'}
I0827 17:28:29.986954 134493687799808 run.py:730] (val) algo quicksort step 5700: {'pred': 0.9365234375, 'score': 0.9365234375, 'examples_seen': 8664, 'step': 5700, 'algorithm': 'quicksort'}
I0827 17:28:30.494029 134493687799808 run.py:730] (val) algo segments_intersect step 5700: {'intersect': 0.7010915197313183, 'score': 0.7010915197313183, 'examples_seen': 145952, 'step': 5700, 'algorithm': 'segments_intersect'}
I0827 17:28:30.598883 134493687799808 run.py:730] (val) algo strongly_connected_components step 5700: {'scc_id': 0.7900390625, 'score': 0.7900390625, 'examples_seen': 6668, 'step': 5700, 'algorithm': 'strongly_connected_components'}
I0827 17:28:30.612686 134493687799808 run.py:730] (val) algo task_scheduling step 5700: {'selected': 0.8944723618090451, 'score': 0.8944723618090451, 'examples_seen': 34752, 'step': 5700, 'algorithm': 'task_scheduling'}
I0827 17:28:30.666573 134493687799808 run.py:730] (val) algo topological_sort step 5700: {'topo': 0.666015625, 'topo_head': 0.984375, 'score': 0.8251953125, 'examples_seen': 15875, 'step': 5700, 'algorithm': 'topological_sort'}
I0827 17:28:30.666766 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.765, current avg val score is 0.773, val scores are: mst_kruskal: 0.854, mst_prim: 0.854, naive_string_matcher: 0.742, optimal_bst: 0.902, quickselect: 0.231, quicksort: 0.937, segments_intersect: 0.701, strongly_connected_components: 0.790, task_scheduling: 0.894, topological_sort: 0.825
I0827 17:28:48.299185 134493687799808 run.py:695] Algo mst_kruskal step 5750 current loss 0.105372, current_train_items 126896.
I0827 17:28:48.315001 134493687799808 run.py:695] Algo mst_prim step 5750 current loss 0.279473, current_train_items 117185.
I0827 17:28:48.330957 134493687799808 run.py:695] Algo naive_string_matcher step 5750 current loss 2.113385, current_train_items 78626.
I0827 17:28:48.349084 134493687799808 run.py:695] Algo optimal_bst step 5750 current loss 0.299693, current_train_items 35056.
I0827 17:28:48.436149 134493687799808 run.py:695] Algo quickselect step 5750 current loss 1.663843, current_train_items 13885.
I0827 17:28:48.457448 134493687799808 run.py:695] Algo quicksort step 5750 current loss 8.672972, current_train_items 8740.
I0827 17:28:48.473621 134493687799808 run.py:695] Algo segments_intersect step 5750 current loss 0.663119, current_train_items 147232.
I0827 17:28:48.497994 134493687799808 run.py:695] Algo strongly_connected_components step 5750 current loss 0.005843, current_train_items 6728.
I0827 17:28:48.520128 134493687799808 run.py:695] Algo task_scheduling step 5750 current loss 0.144465, current_train_items 35056.
I0827 17:28:48.540215 134493687799808 run.py:695] Algo topological_sort step 5750 current loss 1.658637, current_train_items 16015.
I0827 17:28:48.737655 134493687799808 run.py:730] (val) algo mst_kruskal step 5750: {'in_mst': 0.8235882058970516, 'score': 0.8235882058970516, 'examples_seen': 126896, 'step': 5750, 'algorithm': 'mst_kruskal'}
I0827 17:28:48.761530 134493687799808 run.py:730] (val) algo mst_prim step 5750: {'pi': 0.8515625, 'score': 0.8515625, 'examples_seen': 117185, 'step': 5750, 'algorithm': 'mst_prim'}
I0827 17:28:49.884943 134493687799808 run.py:730] (val) algo naive_string_matcher step 5750: {'match': 0.74853515625, 'score': 0.74853515625, 'examples_seen': 78626, 'step': 5750, 'algorithm': 'naive_string_matcher'}
I0827 17:28:49.935659 134493687799808 run.py:730] (val) algo optimal_bst step 5750: {'root': 0.8805147058823529, 'score': 0.8805147058823529, 'examples_seen': 35056, 'step': 5750, 'algorithm': 'optimal_bst'}
I0827 17:28:53.620213 134493687799808 run.py:730] (val) algo quickselect step 5750: {'median': 0.176025390625, 'score': 0.176025390625, 'examples_seen': 13885, 'step': 5750, 'algorithm': 'quickselect'}
I0827 17:28:53.766503 134493687799808 run.py:730] (val) algo quicksort step 5750: {'pred': 0.9423828125, 'score': 0.9423828125, 'examples_seen': 8740, 'step': 5750, 'algorithm': 'quicksort'}
I0827 17:28:54.273618 134493687799808 run.py:730] (val) algo segments_intersect step 5750: {'intersect': 0.691292875989446, 'score': 0.691292875989446, 'examples_seen': 147232, 'step': 5750, 'algorithm': 'segments_intersect'}
I0827 17:28:54.378833 134493687799808 run.py:730] (val) algo strongly_connected_components step 5750: {'scc_id': 0.71875, 'score': 0.71875, 'examples_seen': 6728, 'step': 5750, 'algorithm': 'strongly_connected_components'}
I0827 17:28:54.392351 134493687799808 run.py:730] (val) algo task_scheduling step 5750: {'selected': 0.9331184528605962, 'score': 0.9331184528605962, 'examples_seen': 35056, 'step': 5750, 'algorithm': 'task_scheduling'}
I0827 17:28:54.446343 134493687799808 run.py:730] (val) algo topological_sort step 5750: {'topo': 0.6630859375, 'topo_head': 1.0, 'score': 0.83154296875, 'examples_seen': 16015, 'step': 5750, 'algorithm': 'topological_sort'}
I0827 17:28:54.446552 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.760, val scores are: mst_kruskal: 0.824, mst_prim: 0.852, naive_string_matcher: 0.749, optimal_bst: 0.881, quickselect: 0.176, quicksort: 0.942, segments_intersect: 0.691, strongly_connected_components: 0.719, task_scheduling: 0.933, topological_sort: 0.832
I0827 17:29:11.302238 134493687799808 run.py:695] Algo mst_kruskal step 5800 current loss 0.126193, current_train_items 128005.
I0827 17:29:11.312716 134493687799808 run.py:695] Algo mst_prim step 5800 current loss 0.379728, current_train_items 118225.
I0827 17:29:11.322378 134493687799808 run.py:695] Algo naive_string_matcher step 5800 current loss 1.516722, current_train_items 79330.
I0827 17:29:11.334207 134493687799808 run.py:695] Algo optimal_bst step 5800 current loss 0.329615, current_train_items 35360.
I0827 17:29:11.411809 134493687799808 run.py:695] Algo quickselect step 5800 current loss 2.539089, current_train_items 14005.
I0827 17:29:11.422239 134493687799808 run.py:695] Algo quicksort step 5800 current loss 0.000000, current_train_items 8817.
I0827 17:29:11.440358 134493687799808 run.py:695] Algo segments_intersect step 5800 current loss 0.660313, current_train_items 148512.
I0827 17:29:11.451147 134493687799808 run.py:695] Algo strongly_connected_components step 5800 current loss 0.000000, current_train_items 6788.
I0827 17:29:11.473226 134493687799808 run.py:695] Algo task_scheduling step 5800 current loss 0.146426, current_train_items 35360.
I0827 17:29:11.485360 134493687799808 run.py:695] Algo topological_sort step 5800 current loss 2.274551, current_train_items 16156.
I0827 17:29:11.604083 134493687799808 run.py:730] (val) algo mst_kruskal step 5800: {'in_mst': 0.8298628745556119, 'score': 0.8298628745556119, 'examples_seen': 128005, 'step': 5800, 'algorithm': 'mst_kruskal'}
I0827 17:29:11.625510 134493687799808 run.py:730] (val) algo mst_prim step 5800: {'pi': 0.869140625, 'score': 0.869140625, 'examples_seen': 118225, 'step': 5800, 'algorithm': 'mst_prim'}
I0827 17:29:12.481968 134493687799808 run.py:730] (val) algo naive_string_matcher step 5800: {'match': 0.750732421875, 'score': 0.750732421875, 'examples_seen': 79330, 'step': 5800, 'algorithm': 'naive_string_matcher'}
I0827 17:29:12.530973 134493687799808 run.py:730] (val) algo optimal_bst step 5800: {'root': 0.8831098615916955, 'score': 0.8831098615916955, 'examples_seen': 35360, 'step': 5800, 'algorithm': 'optimal_bst'}
I0827 17:29:16.220053 134493687799808 run.py:730] (val) algo quickselect step 5800: {'median': 0.2197265625, 'score': 0.2197265625, 'examples_seen': 14005, 'step': 5800, 'algorithm': 'quickselect'}
I0827 17:29:16.365102 134493687799808 run.py:730] (val) algo quicksort step 5800: {'pred': 0.908203125, 'score': 0.908203125, 'examples_seen': 8817, 'step': 5800, 'algorithm': 'quicksort'}
I0827 17:29:16.873250 134493687799808 run.py:730] (val) algo segments_intersect step 5800: {'intersect': 0.6647794291106394, 'score': 0.6647794291106394, 'examples_seen': 148512, 'step': 5800, 'algorithm': 'segments_intersect'}
I0827 17:29:16.978698 134493687799808 run.py:730] (val) algo strongly_connected_components step 5800: {'scc_id': 0.736328125, 'score': 0.736328125, 'examples_seen': 6788, 'step': 5800, 'algorithm': 'strongly_connected_components'}
I0827 17:29:16.992135 134493687799808 run.py:730] (val) algo task_scheduling step 5800: {'selected': 0.9194467046379171, 'score': 0.9194467046379171, 'examples_seen': 35360, 'step': 5800, 'algorithm': 'task_scheduling'}
I0827 17:29:17.046116 134493687799808 run.py:730] (val) algo topological_sort step 5800: {'topo': 0.6787109375, 'topo_head': 1.0, 'score': 0.83935546875, 'examples_seen': 16156, 'step': 5800, 'algorithm': 'topological_sort'}
I0827 17:29:17.046293 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.762, val scores are: mst_kruskal: 0.830, mst_prim: 0.869, naive_string_matcher: 0.751, optimal_bst: 0.883, quickselect: 0.220, quicksort: 0.908, segments_intersect: 0.665, strongly_connected_components: 0.736, task_scheduling: 0.919, topological_sort: 0.839
I0827 17:29:33.840555 134493687799808 run.py:695] Algo mst_kruskal step 5850 current loss 0.097355, current_train_items 129090.
I0827 17:29:33.850532 134493687799808 run.py:695] Algo mst_prim step 5850 current loss 0.544113, current_train_items 119216.
I0827 17:29:33.858812 134493687799808 run.py:695] Algo naive_string_matcher step 5850 current loss 0.876751, current_train_items 80003.
I0827 17:29:33.870827 134493687799808 run.py:695] Algo optimal_bst step 5850 current loss 0.338091, current_train_items 35664.
I0827 17:29:33.948527 134493687799808 run.py:695] Algo quickselect step 5850 current loss 1.864093, current_train_items 14118.
I0827 17:29:33.958724 134493687799808 run.py:695] Algo quicksort step 5850 current loss 0.438237, current_train_items 8893.
I0827 17:29:33.977071 134493687799808 run.py:695] Algo segments_intersect step 5850 current loss 0.649514, current_train_items 149792.
I0827 17:29:33.986853 134493687799808 run.py:695] Algo strongly_connected_components step 5850 current loss 0.000000, current_train_items 6844.
I0827 17:29:34.004920 134493687799808 run.py:695] Algo task_scheduling step 5850 current loss 0.158731, current_train_items 35664.
I0827 17:29:34.016964 134493687799808 run.py:695] Algo topological_sort step 5850 current loss 0.892752, current_train_items 16290.
I0827 17:29:34.130318 134493687799808 run.py:730] (val) algo mst_kruskal step 5850: {'in_mst': 0.8016571724495081, 'score': 0.8016571724495081, 'examples_seen': 129090, 'step': 5850, 'algorithm': 'mst_kruskal'}
I0827 17:29:34.151324 134493687799808 run.py:730] (val) algo mst_prim step 5850: {'pi': 0.861328125, 'score': 0.861328125, 'examples_seen': 119216, 'step': 5850, 'algorithm': 'mst_prim'}
I0827 17:29:34.897018 134493687799808 run.py:730] (val) algo naive_string_matcher step 5850: {'match': 0.78759765625, 'score': 0.78759765625, 'examples_seen': 80003, 'step': 5850, 'algorithm': 'naive_string_matcher'}
I0827 17:29:34.944805 134493687799808 run.py:730] (val) algo optimal_bst step 5850: {'root': 0.892409169550173, 'score': 0.892409169550173, 'examples_seen': 35664, 'step': 5850, 'algorithm': 'optimal_bst'}
I0827 17:29:38.627598 134493687799808 run.py:730] (val) algo quickselect step 5850: {'median': 0.214111328125, 'score': 0.214111328125, 'examples_seen': 14118, 'step': 5850, 'algorithm': 'quickselect'}
I0827 17:29:38.772968 134493687799808 run.py:730] (val) algo quicksort step 5850: {'pred': 0.966796875, 'score': 0.966796875, 'examples_seen': 8893, 'step': 5850, 'algorithm': 'quicksort'}
I0827 17:29:39.266427 134493687799808 run.py:730] (val) algo segments_intersect step 5850: {'intersect': 0.6946014422139932, 'score': 0.6946014422139932, 'examples_seen': 149792, 'step': 5850, 'algorithm': 'segments_intersect'}
I0827 17:29:39.371839 134493687799808 run.py:730] (val) algo strongly_connected_components step 5850: {'scc_id': 0.7333984375, 'score': 0.7333984375, 'examples_seen': 6844, 'step': 5850, 'algorithm': 'strongly_connected_components'}
I0827 17:29:39.385590 134493687799808 run.py:730] (val) algo task_scheduling step 5850: {'selected': 0.8372093023255813, 'score': 0.8372093023255813, 'examples_seen': 35664, 'step': 5850, 'algorithm': 'task_scheduling'}
I0827 17:29:39.439061 134493687799808 run.py:730] (val) algo topological_sort step 5850: {'topo': 0.6708984375, 'topo_head': 0.984375, 'score': 0.82763671875, 'examples_seen': 16290, 'step': 5850, 'algorithm': 'topological_sort'}
I0827 17:29:39.439243 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.762, val scores are: mst_kruskal: 0.802, mst_prim: 0.861, naive_string_matcher: 0.788, optimal_bst: 0.892, quickselect: 0.214, quicksort: 0.967, segments_intersect: 0.695, strongly_connected_components: 0.733, task_scheduling: 0.837, topological_sort: 0.828
I0827 17:29:56.967145 134493687799808 run.py:695] Algo mst_kruskal step 5900 current loss 0.086859, current_train_items 130237.
I0827 17:29:56.976999 134493687799808 run.py:695] Algo mst_prim step 5900 current loss 0.674875, current_train_items 120249.
I0827 17:29:56.985699 134493687799808 run.py:695] Algo naive_string_matcher step 5900 current loss 1.289405, current_train_items 80696.
I0827 17:29:56.998421 134493687799808 run.py:695] Algo optimal_bst step 5900 current loss 0.459101, current_train_items 35968.
I0827 17:29:57.075321 134493687799808 run.py:695] Algo quickselect step 5900 current loss 2.885330, current_train_items 14239.
I0827 17:29:57.085977 134493687799808 run.py:695] Algo quicksort step 5900 current loss 1.034351, current_train_items 8969.
I0827 17:29:57.103646 134493687799808 run.py:695] Algo segments_intersect step 5900 current loss 0.624089, current_train_items 151072.
I0827 17:29:57.115542 134493687799808 run.py:695] Algo strongly_connected_components step 5900 current loss 0.783324, current_train_items 6905.
I0827 17:29:57.133317 134493687799808 run.py:695] Algo task_scheduling step 5900 current loss 0.139642, current_train_items 35968.
I0827 17:29:57.145357 134493687799808 run.py:695] Algo topological_sort step 5900 current loss 1.342936, current_train_items 16433.
I0827 17:29:57.260746 134493687799808 run.py:730] (val) algo mst_kruskal step 5900: {'in_mst': 0.6994266994266994, 'score': 0.6994266994266994, 'examples_seen': 130237, 'step': 5900, 'algorithm': 'mst_kruskal'}
I0827 17:29:57.281825 134493687799808 run.py:730] (val) algo mst_prim step 5900: {'pi': 0.8388671875, 'score': 0.8388671875, 'examples_seen': 120249, 'step': 5900, 'algorithm': 'mst_prim'}
I0827 17:29:58.028423 134493687799808 run.py:730] (val) algo naive_string_matcher step 5900: {'match': 0.774169921875, 'score': 0.774169921875, 'examples_seen': 80696, 'step': 5900, 'algorithm': 'naive_string_matcher'}
I0827 17:29:58.076121 134493687799808 run.py:730] (val) algo optimal_bst step 5900: {'root': 0.8993295847750865, 'score': 0.8993295847750865, 'examples_seen': 35968, 'step': 5900, 'algorithm': 'optimal_bst'}
I0827 17:30:01.809264 134493687799808 run.py:730] (val) algo quickselect step 5900: {'median': 0.19921875, 'score': 0.19921875, 'examples_seen': 14239, 'step': 5900, 'algorithm': 'quickselect'}
I0827 17:30:01.959587 134493687799808 run.py:730] (val) algo quicksort step 5900: {'pred': 0.953125, 'score': 0.953125, 'examples_seen': 8969, 'step': 5900, 'algorithm': 'quicksort'}
I0827 17:30:02.484210 134493687799808 run.py:730] (val) algo segments_intersect step 5900: {'intersect': 0.6218442731862875, 'score': 0.6218442731862875, 'examples_seen': 151072, 'step': 5900, 'algorithm': 'segments_intersect'}
I0827 17:30:02.589289 134493687799808 run.py:730] (val) algo strongly_connected_components step 5900: {'scc_id': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 6905, 'step': 5900, 'algorithm': 'strongly_connected_components'}
I0827 17:30:02.609672 134493687799808 run.py:730] (val) algo task_scheduling step 5900: {'selected': 0.8818493150684931, 'score': 0.8818493150684931, 'examples_seen': 35968, 'step': 5900, 'algorithm': 'task_scheduling'}
I0827 17:30:02.663789 134493687799808 run.py:730] (val) algo topological_sort step 5900: {'topo': 0.5849609375, 'topo_head': 1.0, 'score': 0.79248046875, 'examples_seen': 16433, 'step': 5900, 'algorithm': 'topological_sort'}
I0827 17:30:02.663980 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.743, val scores are: mst_kruskal: 0.699, mst_prim: 0.839, naive_string_matcher: 0.774, optimal_bst: 0.899, quickselect: 0.199, quicksort: 0.953, segments_intersect: 0.622, strongly_connected_components: 0.772, task_scheduling: 0.882, topological_sort: 0.792
I0827 17:30:19.432907 134493687799808 run.py:695] Algo mst_kruskal step 5950 current loss 0.139489, current_train_items 131353.
I0827 17:30:19.443412 134493687799808 run.py:695] Algo mst_prim step 5950 current loss 0.538949, current_train_items 121246.
I0827 17:30:19.452154 134493687799808 run.py:695] Algo naive_string_matcher step 5950 current loss 1.384083, current_train_items 81396.
I0827 17:30:19.464284 134493687799808 run.py:695] Algo optimal_bst step 5950 current loss 0.746399, current_train_items 36272.
I0827 17:30:19.543794 134493687799808 run.py:695] Algo quickselect step 5950 current loss 1.395792, current_train_items 14361.
I0827 17:30:19.554646 134493687799808 run.py:695] Algo quicksort step 5950 current loss 4.691911, current_train_items 9046.
I0827 17:30:19.572875 134493687799808 run.py:695] Algo segments_intersect step 5950 current loss 0.636724, current_train_items 152352.
I0827 17:30:19.584924 134493687799808 run.py:695] Algo strongly_connected_components step 5950 current loss 0.000000, current_train_items 6963.
I0827 17:30:19.602546 134493687799808 run.py:695] Algo task_scheduling step 5950 current loss 2.394738, current_train_items 36272.
I0827 17:30:19.615036 134493687799808 run.py:695] Algo topological_sort step 5950 current loss 1.475726, current_train_items 16572.
I0827 17:30:19.729881 134493687799808 run.py:730] (val) algo mst_kruskal step 5950: {'in_mst': 0.5693536673928832, 'score': 0.5693536673928832, 'examples_seen': 131353, 'step': 5950, 'algorithm': 'mst_kruskal'}
I0827 17:30:19.751049 134493687799808 run.py:730] (val) algo mst_prim step 5950: {'pi': 0.85546875, 'score': 0.85546875, 'examples_seen': 121246, 'step': 5950, 'algorithm': 'mst_prim'}
I0827 17:30:20.501996 134493687799808 run.py:730] (val) algo naive_string_matcher step 5950: {'match': 0.75830078125, 'score': 0.75830078125, 'examples_seen': 81396, 'step': 5950, 'algorithm': 'naive_string_matcher'}
I0827 17:30:20.549541 134493687799808 run.py:730] (val) algo optimal_bst step 5950: {'root': 0.8986807958477508, 'score': 0.8986807958477508, 'examples_seen': 36272, 'step': 5950, 'algorithm': 'optimal_bst'}
I0827 17:30:24.276014 134493687799808 run.py:730] (val) algo quickselect step 5950: {'median': 0.205078125, 'score': 0.205078125, 'examples_seen': 14361, 'step': 5950, 'algorithm': 'quickselect'}
I0827 17:30:24.425475 134493687799808 run.py:730] (val) algo quicksort step 5950: {'pred': 0.953125, 'score': 0.953125, 'examples_seen': 9046, 'step': 5950, 'algorithm': 'quicksort'}
I0827 17:30:25.365293 134493687799808 run.py:730] (val) algo segments_intersect step 5950: {'intersect': 0.6782133090246125, 'score': 0.6782133090246125, 'examples_seen': 152352, 'step': 5950, 'algorithm': 'segments_intersect'}
I0827 17:30:25.472308 134493687799808 run.py:730] (val) algo strongly_connected_components step 5950: {'scc_id': 0.7333984375, 'score': 0.7333984375, 'examples_seen': 6963, 'step': 5950, 'algorithm': 'strongly_connected_components'}
I0827 17:30:25.492625 134493687799808 run.py:730] (val) algo task_scheduling step 5950: {'selected': 0.9603112840466926, 'score': 0.9603112840466926, 'examples_seen': 36272, 'step': 5950, 'algorithm': 'task_scheduling'}
I0827 17:30:25.547880 134493687799808 run.py:730] (val) algo topological_sort step 5950: {'topo': 0.595703125, 'topo_head': 0.984375, 'score': 0.7900390625, 'examples_seen': 16572, 'step': 5950, 'algorithm': 'topological_sort'}
I0827 17:30:25.548125 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.740, val scores are: mst_kruskal: 0.569, mst_prim: 0.855, naive_string_matcher: 0.758, optimal_bst: 0.899, quickselect: 0.205, quicksort: 0.953, segments_intersect: 0.678, strongly_connected_components: 0.733, task_scheduling: 0.960, topological_sort: 0.790
I0827 17:30:42.580396 134493687799808 run.py:695] Algo mst_kruskal step 6000 current loss 0.123087, current_train_items 132471.
I0827 17:30:42.590515 134493687799808 run.py:695] Algo mst_prim step 6000 current loss 0.554613, current_train_items 122285.
I0827 17:30:42.598947 134493687799808 run.py:695] Algo naive_string_matcher step 6000 current loss 0.773116, current_train_items 82078.
I0827 17:30:42.611255 134493687799808 run.py:695] Algo optimal_bst step 6000 current loss 0.000000, current_train_items 36576.
I0827 17:30:42.689294 134493687799808 run.py:695] Algo quickselect step 6000 current loss 3.298291, current_train_items 14480.
I0827 17:30:42.700114 134493687799808 run.py:695] Algo quicksort step 6000 current loss 0.000000, current_train_items 9122.
I0827 17:30:42.718494 134493687799808 run.py:695] Algo segments_intersect step 6000 current loss 0.560504, current_train_items 153632.
I0827 17:30:42.728329 134493687799808 run.py:695] Algo strongly_connected_components step 6000 current loss 1.064779, current_train_items 7020.
I0827 17:30:42.746574 134493687799808 run.py:695] Algo task_scheduling step 6000 current loss 0.000000, current_train_items 36576.
I0827 17:30:42.758630 134493687799808 run.py:695] Algo topological_sort step 6000 current loss 1.319447, current_train_items 16711.
I0827 17:30:42.876626 134493687799808 run.py:730] (val) algo mst_kruskal step 6000: {'in_mst': 0.7772979642196175, 'score': 0.7772979642196175, 'examples_seen': 132471, 'step': 6000, 'algorithm': 'mst_kruskal'}
I0827 17:30:42.897804 134493687799808 run.py:730] (val) algo mst_prim step 6000: {'pi': 0.837890625, 'score': 0.837890625, 'examples_seen': 122285, 'step': 6000, 'algorithm': 'mst_prim'}
I0827 17:30:43.642060 134493687799808 run.py:730] (val) algo naive_string_matcher step 6000: {'match': 0.7353515625, 'score': 0.7353515625, 'examples_seen': 82078, 'step': 6000, 'algorithm': 'naive_string_matcher'}
I0827 17:30:43.690300 134493687799808 run.py:730] (val) algo optimal_bst step 6000: {'root': 0.9030060553633218, 'score': 0.9030060553633218, 'examples_seen': 36576, 'step': 6000, 'algorithm': 'optimal_bst'}
I0827 17:30:47.381387 134493687799808 run.py:730] (val) algo quickselect step 6000: {'median': 0.20361328125, 'score': 0.20361328125, 'examples_seen': 14480, 'step': 6000, 'algorithm': 'quickselect'}
I0827 17:30:47.526846 134493687799808 run.py:730] (val) algo quicksort step 6000: {'pred': 0.955078125, 'score': 0.955078125, 'examples_seen': 9122, 'step': 6000, 'algorithm': 'quicksort'}
I0827 17:30:48.047488 134493687799808 run.py:730] (val) algo segments_intersect step 6000: {'intersect': 0.6854899027673895, 'score': 0.6854899027673895, 'examples_seen': 153632, 'step': 6000, 'algorithm': 'segments_intersect'}
I0827 17:30:48.155399 134493687799808 run.py:730] (val) algo strongly_connected_components step 6000: {'scc_id': 0.7587890625, 'score': 0.7587890625, 'examples_seen': 7020, 'step': 6000, 'algorithm': 'strongly_connected_components'}
I0827 17:30:48.174296 134493687799808 run.py:730] (val) algo task_scheduling step 6000: {'selected': 0.9005847953216375, 'score': 0.9005847953216375, 'examples_seen': 36576, 'step': 6000, 'algorithm': 'task_scheduling'}
I0827 17:30:48.229128 134493687799808 run.py:730] (val) algo topological_sort step 6000: {'topo': 0.6435546875, 'topo_head': 1.0, 'score': 0.82177734375, 'examples_seen': 16711, 'step': 6000, 'algorithm': 'topological_sort'}
I0827 17:30:48.229375 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.758, val scores are: mst_kruskal: 0.777, mst_prim: 0.838, naive_string_matcher: 0.735, optimal_bst: 0.903, quickselect: 0.204, quicksort: 0.955, segments_intersect: 0.685, strongly_connected_components: 0.759, task_scheduling: 0.901, topological_sort: 0.822
I0827 17:31:05.669338 134493687799808 run.py:695] Algo mst_kruskal step 6050 current loss 0.103956, current_train_items 133611.
I0827 17:31:05.679290 134493687799808 run.py:695] Algo mst_prim step 6050 current loss 0.639135, current_train_items 123315.
I0827 17:31:05.688111 134493687799808 run.py:695] Algo naive_string_matcher step 6050 current loss 1.652023, current_train_items 82761.
I0827 17:31:05.700150 134493687799808 run.py:695] Algo optimal_bst step 6050 current loss 0.000000, current_train_items 36880.
I0827 17:31:05.777395 134493687799808 run.py:695] Algo quickselect step 6050 current loss 1.988456, current_train_items 14599.
I0827 17:31:05.787998 134493687799808 run.py:695] Algo quicksort step 6050 current loss 5.551990, current_train_items 9199.
I0827 17:31:05.805760 134493687799808 run.py:695] Algo segments_intersect step 6050 current loss 0.645133, current_train_items 154912.
I0827 17:31:05.818578 134493687799808 run.py:695] Algo strongly_connected_components step 6050 current loss 0.000000, current_train_items 7081.
I0827 17:31:05.841225 134493687799808 run.py:695] Algo task_scheduling step 6050 current loss 0.000000, current_train_items 36880.
I0827 17:31:05.850852 134493687799808 run.py:695] Algo topological_sort step 6050 current loss 1.547104, current_train_items 16850.
I0827 17:31:05.971273 134493687799808 run.py:730] (val) algo mst_kruskal step 6050: {'in_mst': 0.7767379679144386, 'score': 0.7767379679144386, 'examples_seen': 133611, 'step': 6050, 'algorithm': 'mst_kruskal'}
I0827 17:31:05.992199 134493687799808 run.py:730] (val) algo mst_prim step 6050: {'pi': 0.873046875, 'score': 0.873046875, 'examples_seen': 123315, 'step': 6050, 'algorithm': 'mst_prim'}
I0827 17:31:06.740827 134493687799808 run.py:730] (val) algo naive_string_matcher step 6050: {'match': 0.748291015625, 'score': 0.748291015625, 'examples_seen': 82761, 'step': 6050, 'algorithm': 'naive_string_matcher'}
I0827 17:31:06.788824 134493687799808 run.py:730] (val) algo optimal_bst step 6050: {'root': 0.8957612456747405, 'score': 0.8957612456747405, 'examples_seen': 36880, 'step': 6050, 'algorithm': 'optimal_bst'}
I0827 17:31:10.483336 134493687799808 run.py:730] (val) algo quickselect step 6050: {'median': 0.212890625, 'score': 0.212890625, 'examples_seen': 14599, 'step': 6050, 'algorithm': 'quickselect'}
I0827 17:31:10.628960 134493687799808 run.py:730] (val) algo quicksort step 6050: {'pred': 0.931640625, 'score': 0.931640625, 'examples_seen': 9199, 'step': 6050, 'algorithm': 'quicksort'}
I0827 17:31:11.155981 134493687799808 run.py:730] (val) algo segments_intersect step 6050: {'intersect': 0.5613523754007578, 'score': 0.5613523754007578, 'examples_seen': 154912, 'step': 6050, 'algorithm': 'segments_intersect'}
I0827 17:31:11.261244 134493687799808 run.py:730] (val) algo strongly_connected_components step 6050: {'scc_id': 0.7294921875, 'score': 0.7294921875, 'examples_seen': 7081, 'step': 6050, 'algorithm': 'strongly_connected_components'}
I0827 17:31:11.274765 134493687799808 run.py:730] (val) algo task_scheduling step 6050: {'selected': 0.923582580115037, 'score': 0.923582580115037, 'examples_seen': 36880, 'step': 6050, 'algorithm': 'task_scheduling'}
I0827 17:31:11.329172 134493687799808 run.py:730] (val) algo topological_sort step 6050: {'topo': 0.6533203125, 'topo_head': 1.0, 'score': 0.82666015625, 'examples_seen': 16850, 'step': 6050, 'algorithm': 'topological_sort'}
I0827 17:31:11.329357 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.748, val scores are: mst_kruskal: 0.777, mst_prim: 0.873, naive_string_matcher: 0.748, optimal_bst: 0.896, quickselect: 0.213, quicksort: 0.932, segments_intersect: 0.561, strongly_connected_components: 0.729, task_scheduling: 0.924, topological_sort: 0.827
I0827 17:31:29.437783 134493687799808 run.py:695] Algo mst_kruskal step 6100 current loss 0.108502, current_train_items 134715.
I0827 17:31:29.448086 134493687799808 run.py:695] Algo mst_prim step 6100 current loss 0.700393, current_train_items 124357.
I0827 17:31:29.456769 134493687799808 run.py:695] Algo naive_string_matcher step 6100 current loss 2.347306, current_train_items 83455.
I0827 17:31:29.468460 134493687799808 run.py:695] Algo optimal_bst step 6100 current loss 0.000000, current_train_items 37184.
I0827 17:31:29.549435 134493687799808 run.py:695] Algo quickselect step 6100 current loss 1.712536, current_train_items 14722.
I0827 17:31:29.561387 134493687799808 run.py:695] Algo quicksort step 6100 current loss 0.000000, current_train_items 9275.
I0827 17:31:29.578304 134493687799808 run.py:695] Algo segments_intersect step 6100 current loss 0.642244, current_train_items 156192.
I0827 17:31:29.589883 134493687799808 run.py:695] Algo strongly_connected_components step 6100 current loss 1.530813, current_train_items 7141.
I0827 17:31:29.607621 134493687799808 run.py:695] Algo task_scheduling step 6100 current loss 0.000000, current_train_items 37184.
I0827 17:31:29.619585 134493687799808 run.py:695] Algo topological_sort step 6100 current loss 1.501278, current_train_items 16991.
I0827 17:31:29.736526 134493687799808 run.py:730] (val) algo mst_kruskal step 6100: {'in_mst': 0.8002309468822171, 'score': 0.8002309468822171, 'examples_seen': 134715, 'step': 6100, 'algorithm': 'mst_kruskal'}
I0827 17:31:29.760461 134493687799808 run.py:730] (val) algo mst_prim step 6100: {'pi': 0.8271484375, 'score': 0.8271484375, 'examples_seen': 124357, 'step': 6100, 'algorithm': 'mst_prim'}
I0827 17:31:30.506789 134493687799808 run.py:730] (val) algo naive_string_matcher step 6100: {'match': 0.750732421875, 'score': 0.750732421875, 'examples_seen': 83455, 'step': 6100, 'algorithm': 'naive_string_matcher'}
I0827 17:31:30.554836 134493687799808 run.py:730] (val) algo optimal_bst step 6100: {'root': 0.9061959342560554, 'score': 0.9061959342560554, 'examples_seen': 37184, 'step': 6100, 'algorithm': 'optimal_bst'}
I0827 17:31:34.248078 134493687799808 run.py:730] (val) algo quickselect step 6100: {'median': 0.212890625, 'score': 0.212890625, 'examples_seen': 14722, 'step': 6100, 'algorithm': 'quickselect'}
I0827 17:31:34.392293 134493687799808 run.py:730] (val) algo quicksort step 6100: {'pred': 0.9501953125, 'score': 0.9501953125, 'examples_seen': 9275, 'step': 6100, 'algorithm': 'quicksort'}
I0827 17:31:34.909878 134493687799808 run.py:730] (val) algo segments_intersect step 6100: {'intersect': 0.6741678387248007, 'score': 0.6741678387248007, 'examples_seen': 156192, 'step': 6100, 'algorithm': 'segments_intersect'}
I0827 17:31:35.016120 134493687799808 run.py:730] (val) algo strongly_connected_components step 6100: {'scc_id': 0.7744140625, 'score': 0.7744140625, 'examples_seen': 7141, 'step': 6100, 'algorithm': 'strongly_connected_components'}
I0827 17:31:35.029750 134493687799808 run.py:730] (val) algo task_scheduling step 6100: {'selected': 0.8996655518394648, 'score': 0.8996655518394648, 'examples_seen': 37184, 'step': 6100, 'algorithm': 'task_scheduling'}
I0827 17:31:35.083893 134493687799808 run.py:730] (val) algo topological_sort step 6100: {'topo': 0.6796875, 'topo_head': 1.0, 'score': 0.83984375, 'examples_seen': 16991, 'step': 6100, 'algorithm': 'topological_sort'}
I0827 17:31:35.084081 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.764, val scores are: mst_kruskal: 0.800, mst_prim: 0.827, naive_string_matcher: 0.751, optimal_bst: 0.906, quickselect: 0.213, quicksort: 0.950, segments_intersect: 0.674, strongly_connected_components: 0.774, task_scheduling: 0.900, topological_sort: 0.840
I0827 17:31:52.762221 134493687799808 run.py:695] Algo mst_kruskal step 6150 current loss 0.060580, current_train_items 135856.
I0827 17:31:52.772732 134493687799808 run.py:695] Algo mst_prim step 6150 current loss 0.329997, current_train_items 125363.
I0827 17:31:52.782052 134493687799808 run.py:695] Algo naive_string_matcher step 6150 current loss 2.209295, current_train_items 84160.
I0827 17:31:52.794274 134493687799808 run.py:695] Algo optimal_bst step 6150 current loss 0.000000, current_train_items 37488.
I0827 17:31:52.872265 134493687799808 run.py:695] Algo quickselect step 6150 current loss 2.394531, current_train_items 14854.
I0827 17:31:52.883035 134493687799808 run.py:695] Algo quicksort step 6150 current loss 2.927159, current_train_items 9353.
I0827 17:31:52.900974 134493687799808 run.py:695] Algo segments_intersect step 6150 current loss 0.627950, current_train_items 157472.
I0827 17:31:52.912448 134493687799808 run.py:695] Algo strongly_connected_components step 6150 current loss 0.619587, current_train_items 7196.
I0827 17:31:52.930091 134493687799808 run.py:695] Algo task_scheduling step 6150 current loss 0.000000, current_train_items 37488.
I0827 17:31:52.942646 134493687799808 run.py:695] Algo topological_sort step 6150 current loss 3.409256, current_train_items 17129.
I0827 17:31:53.054983 134493687799808 run.py:730] (val) algo mst_kruskal step 6150: {'in_mst': 0.6656250000000001, 'score': 0.6656250000000001, 'examples_seen': 135856, 'step': 6150, 'algorithm': 'mst_kruskal'}
I0827 17:31:53.075889 134493687799808 run.py:730] (val) algo mst_prim step 6150: {'pi': 0.822265625, 'score': 0.822265625, 'examples_seen': 125363, 'step': 6150, 'algorithm': 'mst_prim'}
I0827 17:31:53.825804 134493687799808 run.py:730] (val) algo naive_string_matcher step 6150: {'match': 0.76708984375, 'score': 0.76708984375, 'examples_seen': 84160, 'step': 6150, 'algorithm': 'naive_string_matcher'}
I0827 17:31:53.873506 134493687799808 run.py:730] (val) algo optimal_bst step 6150: {'root': 0.8913819204152249, 'score': 0.8913819204152249, 'examples_seen': 37488, 'step': 6150, 'algorithm': 'optimal_bst'}
I0827 17:31:57.557378 134493687799808 run.py:730] (val) algo quickselect step 6150: {'median': 0.206298828125, 'score': 0.206298828125, 'examples_seen': 14854, 'step': 6150, 'algorithm': 'quickselect'}
I0827 17:31:57.703452 134493687799808 run.py:730] (val) algo quicksort step 6150: {'pred': 0.923828125, 'score': 0.923828125, 'examples_seen': 9353, 'step': 6150, 'algorithm': 'quicksort'}
I0827 17:31:58.221144 134493687799808 run.py:730] (val) algo segments_intersect step 6150: {'intersect': 0.6559919939954966, 'score': 0.6559919939954966, 'examples_seen': 157472, 'step': 6150, 'algorithm': 'segments_intersect'}
I0827 17:31:58.326192 134493687799808 run.py:730] (val) algo strongly_connected_components step 6150: {'scc_id': 0.748046875, 'score': 0.748046875, 'examples_seen': 7196, 'step': 6150, 'algorithm': 'strongly_connected_components'}
I0827 17:31:58.339983 134493687799808 run.py:730] (val) algo task_scheduling step 6150: {'selected': 0.9189627228525122, 'score': 0.9189627228525122, 'examples_seen': 37488, 'step': 6150, 'algorithm': 'task_scheduling'}
I0827 17:31:58.394124 134493687799808 run.py:730] (val) algo topological_sort step 6150: {'topo': 0.646484375, 'topo_head': 1.0, 'score': 0.8232421875, 'examples_seen': 17129, 'step': 6150, 'algorithm': 'topological_sort'}
I0827 17:31:58.394316 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.742, val scores are: mst_kruskal: 0.666, mst_prim: 0.822, naive_string_matcher: 0.767, optimal_bst: 0.891, quickselect: 0.206, quicksort: 0.924, segments_intersect: 0.656, strongly_connected_components: 0.748, task_scheduling: 0.919, topological_sort: 0.823
I0827 17:32:16.150138 134493687799808 run.py:695] Algo mst_kruskal step 6200 current loss 0.069823, current_train_items 136993.
I0827 17:32:16.161089 134493687799808 run.py:695] Algo mst_prim step 6200 current loss 0.278964, current_train_items 126386.
I0827 17:32:16.170040 134493687799808 run.py:695] Algo naive_string_matcher step 6200 current loss 1.515211, current_train_items 84860.
I0827 17:32:16.181927 134493687799808 run.py:695] Algo optimal_bst step 6200 current loss 0.000000, current_train_items 37792.
I0827 17:32:16.259984 134493687799808 run.py:695] Algo quickselect step 6200 current loss 3.221310, current_train_items 14980.
I0827 17:32:16.270502 134493687799808 run.py:695] Algo quicksort step 6200 current loss 1.164241, current_train_items 9428.
I0827 17:32:16.289245 134493687799808 run.py:695] Algo segments_intersect step 6200 current loss 0.591749, current_train_items 158752.
I0827 17:32:16.300534 134493687799808 run.py:695] Algo strongly_connected_components step 6200 current loss 0.000000, current_train_items 7255.
I0827 17:32:16.318326 134493687799808 run.py:695] Algo task_scheduling step 6200 current loss 0.000000, current_train_items 37792.
I0827 17:32:16.330507 134493687799808 run.py:695] Algo topological_sort step 6200 current loss 1.220043, current_train_items 17270.
I0827 17:32:16.448963 134493687799808 run.py:730] (val) algo mst_kruskal step 6200: {'in_mst': 0.7350633675316837, 'score': 0.7350633675316837, 'examples_seen': 136993, 'step': 6200, 'algorithm': 'mst_kruskal'}
I0827 17:32:16.469751 134493687799808 run.py:730] (val) algo mst_prim step 6200: {'pi': 0.849609375, 'score': 0.849609375, 'examples_seen': 126386, 'step': 6200, 'algorithm': 'mst_prim'}
I0827 17:32:17.220945 134493687799808 run.py:730] (val) algo naive_string_matcher step 6200: {'match': 0.749267578125, 'score': 0.749267578125, 'examples_seen': 84860, 'step': 6200, 'algorithm': 'naive_string_matcher'}
I0827 17:32:17.269264 134493687799808 run.py:730] (val) algo optimal_bst step 6200: {'root': 0.8958693771626297, 'score': 0.8958693771626297, 'examples_seen': 37792, 'step': 6200, 'algorithm': 'optimal_bst'}
I0827 17:32:20.953767 134493687799808 run.py:730] (val) algo quickselect step 6200: {'median': 0.216064453125, 'score': 0.216064453125, 'examples_seen': 14980, 'step': 6200, 'algorithm': 'quickselect'}
I0827 17:32:21.098042 134493687799808 run.py:730] (val) algo quicksort step 6200: {'pred': 0.9375, 'score': 0.9375, 'examples_seen': 9428, 'step': 6200, 'algorithm': 'quicksort'}
I0827 17:32:21.606514 134493687799808 run.py:730] (val) algo segments_intersect step 6200: {'intersect': 0.5796196423502696, 'score': 0.5796196423502696, 'examples_seen': 158752, 'step': 6200, 'algorithm': 'segments_intersect'}
I0827 17:32:21.711924 134493687799808 run.py:730] (val) algo strongly_connected_components step 6200: {'scc_id': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 7255, 'step': 6200, 'algorithm': 'strongly_connected_components'}
I0827 17:32:21.725832 134493687799808 run.py:730] (val) algo task_scheduling step 6200: {'selected': 0.9195775792038994, 'score': 0.9195775792038994, 'examples_seen': 37792, 'step': 6200, 'algorithm': 'task_scheduling'}
I0827 17:32:21.780416 134493687799808 run.py:730] (val) algo topological_sort step 6200: {'topo': 0.6279296875, 'topo_head': 1.0, 'score': 0.81396484375, 'examples_seen': 17270, 'step': 6200, 'algorithm': 'topological_sort'}
I0827 17:32:21.780636 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.747, val scores are: mst_kruskal: 0.735, mst_prim: 0.850, naive_string_matcher: 0.749, optimal_bst: 0.896, quickselect: 0.216, quicksort: 0.938, segments_intersect: 0.580, strongly_connected_components: 0.772, task_scheduling: 0.920, topological_sort: 0.814
I0827 17:32:39.918424 134493687799808 run.py:695] Algo mst_kruskal step 6250 current loss 0.076346, current_train_items 138084.
I0827 17:32:39.929418 134493687799808 run.py:695] Algo mst_prim step 6250 current loss 0.466422, current_train_items 127389.
I0827 17:32:39.938826 134493687799808 run.py:695] Algo naive_string_matcher step 6250 current loss 1.549875, current_train_items 85533.
I0827 17:32:39.951152 134493687799808 run.py:695] Algo optimal_bst step 6250 current loss 0.000000, current_train_items 38096.
I0827 17:32:40.028983 134493687799808 run.py:695] Algo quickselect step 6250 current loss 4.177968, current_train_items 15095.
I0827 17:32:40.039553 134493687799808 run.py:695] Algo quicksort step 6250 current loss 0.000000, current_train_items 9502.
I0827 17:32:40.058009 134493687799808 run.py:695] Algo segments_intersect step 6250 current loss 0.732498, current_train_items 160032.
I0827 17:32:40.068585 134493687799808 run.py:695] Algo strongly_connected_components step 6250 current loss 0.000000, current_train_items 7315.
I0827 17:32:40.086143 134493687799808 run.py:695] Algo task_scheduling step 6250 current loss 0.000000, current_train_items 38096.
I0827 17:32:40.097669 134493687799808 run.py:695] Algo topological_sort step 6250 current loss 1.182578, current_train_items 17411.
I0827 17:32:40.212826 134493687799808 run.py:730] (val) algo mst_kruskal step 6250: {'in_mst': 0.612, 'score': 0.612, 'examples_seen': 138084, 'step': 6250, 'algorithm': 'mst_kruskal'}
I0827 17:32:40.233580 134493687799808 run.py:730] (val) algo mst_prim step 6250: {'pi': 0.8603515625, 'score': 0.8603515625, 'examples_seen': 127389, 'step': 6250, 'algorithm': 'mst_prim'}
I0827 17:32:40.975370 134493687799808 run.py:730] (val) algo naive_string_matcher step 6250: {'match': 0.731689453125, 'score': 0.731689453125, 'examples_seen': 85533, 'step': 6250, 'algorithm': 'naive_string_matcher'}
I0827 17:32:41.023988 134493687799808 run.py:730] (val) algo optimal_bst step 6250: {'root': 0.8964641003460208, 'score': 0.8964641003460208, 'examples_seen': 38096, 'step': 6250, 'algorithm': 'optimal_bst'}
I0827 17:32:44.718757 134493687799808 run.py:730] (val) algo quickselect step 6250: {'median': 0.21826171875, 'score': 0.21826171875, 'examples_seen': 15095, 'step': 6250, 'algorithm': 'quickselect'}
I0827 17:32:44.863952 134493687799808 run.py:730] (val) algo quicksort step 6250: {'pred': 0.9150390625, 'score': 0.9150390625, 'examples_seen': 9502, 'step': 6250, 'algorithm': 'quicksort'}
I0827 17:32:45.368998 134493687799808 run.py:730] (val) algo segments_intersect step 6250: {'intersect': 0.6727480045610034, 'score': 0.6727480045610034, 'examples_seen': 160032, 'step': 6250, 'algorithm': 'segments_intersect'}
I0827 17:32:45.474663 134493687799808 run.py:730] (val) algo strongly_connected_components step 6250: {'scc_id': 0.6572265625, 'score': 0.6572265625, 'examples_seen': 7315, 'step': 6250, 'algorithm': 'strongly_connected_components'}
I0827 17:32:45.488394 134493687799808 run.py:730] (val) algo task_scheduling step 6250: {'selected': 0.8971807628524046, 'score': 0.8971807628524046, 'examples_seen': 38096, 'step': 6250, 'algorithm': 'task_scheduling'}
I0827 17:32:45.542337 134493687799808 run.py:730] (val) algo topological_sort step 6250: {'topo': 0.6640625, 'topo_head': 1.0, 'score': 0.83203125, 'examples_seen': 17411, 'step': 6250, 'algorithm': 'topological_sort'}
I0827 17:32:45.542602 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.729, val scores are: mst_kruskal: 0.612, mst_prim: 0.860, naive_string_matcher: 0.732, optimal_bst: 0.896, quickselect: 0.218, quicksort: 0.915, segments_intersect: 0.673, strongly_connected_components: 0.657, task_scheduling: 0.897, topological_sort: 0.832
I0827 17:33:03.432404 134493687799808 run.py:695] Algo mst_kruskal step 6300 current loss 0.094240, current_train_items 139181.
I0827 17:33:03.443564 134493687799808 run.py:695] Algo mst_prim step 6300 current loss 0.272231, current_train_items 128437.
I0827 17:33:03.452830 134493687799808 run.py:695] Algo naive_string_matcher step 6300 current loss 2.028970, current_train_items 86200.
I0827 17:33:03.464878 134493687799808 run.py:695] Algo optimal_bst step 6300 current loss 0.000000, current_train_items 38400.
I0827 17:33:03.543138 134493687799808 run.py:695] Algo quickselect step 6300 current loss 2.147774, current_train_items 15215.
I0827 17:33:03.553178 134493687799808 run.py:695] Algo quicksort step 6300 current loss 19.005323, current_train_items 9579.
I0827 17:33:03.570507 134493687799808 run.py:695] Algo segments_intersect step 6300 current loss 0.658654, current_train_items 161312.
I0827 17:33:03.582102 134493687799808 run.py:695] Algo strongly_connected_components step 6300 current loss 1.303330, current_train_items 7371.
I0827 17:33:03.600107 134493687799808 run.py:695] Algo task_scheduling step 6300 current loss 0.000000, current_train_items 38400.
I0827 17:33:03.613058 134493687799808 run.py:695] Algo topological_sort step 6300 current loss 0.000000, current_train_items 17546.
I0827 17:33:03.728596 134493687799808 run.py:730] (val) algo mst_kruskal step 6300: {'in_mst': 0.7488341105929379, 'score': 0.7488341105929379, 'examples_seen': 139181, 'step': 6300, 'algorithm': 'mst_kruskal'}
I0827 17:33:03.749717 134493687799808 run.py:730] (val) algo mst_prim step 6300: {'pi': 0.8515625, 'score': 0.8515625, 'examples_seen': 128437, 'step': 6300, 'algorithm': 'mst_prim'}
I0827 17:33:04.493420 134493687799808 run.py:730] (val) algo naive_string_matcher step 6300: {'match': 0.721923828125, 'score': 0.721923828125, 'examples_seen': 86200, 'step': 6300, 'algorithm': 'naive_string_matcher'}
I0827 17:33:04.541438 134493687799808 run.py:730] (val) algo optimal_bst step 6300: {'root': 0.8959234429065744, 'score': 0.8959234429065744, 'examples_seen': 38400, 'step': 6300, 'algorithm': 'optimal_bst'}
I0827 17:33:08.233462 134493687799808 run.py:730] (val) algo quickselect step 6300: {'median': 0.20849609375, 'score': 0.20849609375, 'examples_seen': 15215, 'step': 6300, 'algorithm': 'quickselect'}
I0827 17:33:08.378974 134493687799808 run.py:730] (val) algo quicksort step 6300: {'pred': 0.9521484375, 'score': 0.9521484375, 'examples_seen': 9579, 'step': 6300, 'algorithm': 'quicksort'}
I0827 17:33:08.877404 134493687799808 run.py:730] (val) algo segments_intersect step 6300: {'intersect': 0.23151668779045204, 'score': 0.23151668779045204, 'examples_seen': 161312, 'step': 6300, 'algorithm': 'segments_intersect'}
I0827 17:33:08.983023 134493687799808 run.py:730] (val) algo strongly_connected_components step 6300: {'scc_id': 0.7861328125, 'score': 0.7861328125, 'examples_seen': 7371, 'step': 6300, 'algorithm': 'strongly_connected_components'}
I0827 17:33:08.996414 134493687799808 run.py:730] (val) algo task_scheduling step 6300: {'selected': 0.9316770186335405, 'score': 0.9316770186335405, 'examples_seen': 38400, 'step': 6300, 'algorithm': 'task_scheduling'}
I0827 17:33:09.050646 134493687799808 run.py:730] (val) algo topological_sort step 6300: {'topo': 0.646484375, 'topo_head': 1.0, 'score': 0.8232421875, 'examples_seen': 17546, 'step': 6300, 'algorithm': 'topological_sort'}
I0827 17:33:09.050814 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.715, val scores are: mst_kruskal: 0.749, mst_prim: 0.852, naive_string_matcher: 0.722, optimal_bst: 0.896, quickselect: 0.208, quicksort: 0.952, segments_intersect: 0.232, strongly_connected_components: 0.786, task_scheduling: 0.932, topological_sort: 0.823
I0827 17:33:26.825608 134493687799808 run.py:695] Algo mst_kruskal step 6350 current loss 0.079265, current_train_items 140324.
I0827 17:33:26.835813 134493687799808 run.py:695] Algo mst_prim step 6350 current loss 0.289114, current_train_items 129454.
I0827 17:33:26.844877 134493687799808 run.py:695] Algo naive_string_matcher step 6350 current loss 1.052210, current_train_items 86860.
I0827 17:33:26.856906 134493687799808 run.py:695] Algo optimal_bst step 6350 current loss 0.000000, current_train_items 38704.
I0827 17:33:26.933982 134493687799808 run.py:695] Algo quickselect step 6350 current loss 2.460898, current_train_items 15333.
I0827 17:33:26.944226 134493687799808 run.py:695] Algo quicksort step 6350 current loss 7.440176, current_train_items 9655.
I0827 17:33:26.962275 134493687799808 run.py:695] Algo segments_intersect step 6350 current loss 0.645286, current_train_items 162592.
I0827 17:33:26.973353 134493687799808 run.py:695] Algo strongly_connected_components step 6350 current loss 0.732275, current_train_items 7430.
I0827 17:33:26.991521 134493687799808 run.py:695] Algo task_scheduling step 6350 current loss 0.000000, current_train_items 38704.
I0827 17:33:27.003397 134493687799808 run.py:695] Algo topological_sort step 6350 current loss 1.568838, current_train_items 17689.
I0827 17:33:27.126230 134493687799808 run.py:730] (val) algo mst_kruskal step 6350: {'in_mst': 0.7475961538461539, 'score': 0.7475961538461539, 'examples_seen': 140324, 'step': 6350, 'algorithm': 'mst_kruskal'}
I0827 17:33:27.147032 134493687799808 run.py:730] (val) algo mst_prim step 6350: {'pi': 0.85546875, 'score': 0.85546875, 'examples_seen': 129454, 'step': 6350, 'algorithm': 'mst_prim'}
I0827 17:33:27.909387 134493687799808 run.py:730] (val) algo naive_string_matcher step 6350: {'match': 0.750732421875, 'score': 0.750732421875, 'examples_seen': 86860, 'step': 6350, 'algorithm': 'naive_string_matcher'}
I0827 17:33:27.957213 134493687799808 run.py:730] (val) algo optimal_bst step 6350: {'root': 0.8771085640138409, 'score': 0.8771085640138409, 'examples_seen': 38704, 'step': 6350, 'algorithm': 'optimal_bst'}
I0827 17:33:31.645833 134493687799808 run.py:730] (val) algo quickselect step 6350: {'median': 0.1826171875, 'score': 0.1826171875, 'examples_seen': 15333, 'step': 6350, 'algorithm': 'quickselect'}
I0827 17:33:31.791439 134493687799808 run.py:730] (val) algo quicksort step 6350: {'pred': 0.9130859375, 'score': 0.9130859375, 'examples_seen': 9655, 'step': 6350, 'algorithm': 'quicksort'}
I0827 17:33:32.297915 134493687799808 run.py:730] (val) algo segments_intersect step 6350: {'intersect': 0.6906953966699314, 'score': 0.6906953966699314, 'examples_seen': 162592, 'step': 6350, 'algorithm': 'segments_intersect'}
I0827 17:33:32.403977 134493687799808 run.py:730] (val) algo strongly_connected_components step 6350: {'scc_id': 0.7451171875, 'score': 0.7451171875, 'examples_seen': 7430, 'step': 6350, 'algorithm': 'strongly_connected_components'}
I0827 17:33:32.417997 134493687799808 run.py:730] (val) algo task_scheduling step 6350: {'selected': 0.9216965742251224, 'score': 0.9216965742251224, 'examples_seen': 38704, 'step': 6350, 'algorithm': 'task_scheduling'}
I0827 17:33:32.472411 134493687799808 run.py:730] (val) algo topological_sort step 6350: {'topo': 0.65234375, 'topo_head': 1.0, 'score': 0.826171875, 'examples_seen': 17689, 'step': 6350, 'algorithm': 'topological_sort'}
I0827 17:33:32.472626 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.751, val scores are: mst_kruskal: 0.748, mst_prim: 0.855, naive_string_matcher: 0.751, optimal_bst: 0.877, quickselect: 0.183, quicksort: 0.913, segments_intersect: 0.691, strongly_connected_components: 0.745, task_scheduling: 0.922, topological_sort: 0.826
I0827 17:33:50.270936 134493687799808 run.py:695] Algo mst_kruskal step 6400 current loss 0.072587, current_train_items 141388.
I0827 17:33:50.281400 134493687799808 run.py:695] Algo mst_prim step 6400 current loss 0.349156, current_train_items 130459.
I0827 17:33:50.290297 134493687799808 run.py:695] Algo naive_string_matcher step 6400 current loss 1.031574, current_train_items 87553.
I0827 17:33:50.302514 134493687799808 run.py:695] Algo optimal_bst step 6400 current loss 0.000000, current_train_items 39008.
I0827 17:33:50.380239 134493687799808 run.py:695] Algo quickselect step 6400 current loss 1.988557, current_train_items 15454.
I0827 17:33:50.390796 134493687799808 run.py:695] Algo quicksort step 6400 current loss 5.821959, current_train_items 9730.
I0827 17:33:50.408903 134493687799808 run.py:695] Algo segments_intersect step 6400 current loss 0.649211, current_train_items 163872.
I0827 17:33:50.419603 134493687799808 run.py:695] Algo strongly_connected_components step 6400 current loss 0.000000, current_train_items 7490.
I0827 17:33:50.437749 134493687799808 run.py:695] Algo task_scheduling step 6400 current loss 0.000000, current_train_items 39008.
I0827 17:33:50.450189 134493687799808 run.py:695] Algo topological_sort step 6400 current loss 1.671633, current_train_items 17826.
I0827 17:33:50.567171 134493687799808 run.py:730] (val) algo mst_kruskal step 6400: {'in_mst': 0.7746563060370593, 'score': 0.7746563060370593, 'examples_seen': 141388, 'step': 6400, 'algorithm': 'mst_kruskal'}
I0827 17:33:50.588202 134493687799808 run.py:730] (val) algo mst_prim step 6400: {'pi': 0.8349609375, 'score': 0.8349609375, 'examples_seen': 130459, 'step': 6400, 'algorithm': 'mst_prim'}
I0827 17:33:51.327033 134493687799808 run.py:730] (val) algo naive_string_matcher step 6400: {'match': 0.762939453125, 'score': 0.762939453125, 'examples_seen': 87553, 'step': 6400, 'algorithm': 'naive_string_matcher'}
I0827 17:33:51.375441 134493687799808 run.py:730] (val) algo optimal_bst step 6400: {'root': 0.9070069204152249, 'score': 0.9070069204152249, 'examples_seen': 39008, 'step': 6400, 'algorithm': 'optimal_bst'}
I0827 17:33:55.042256 134493687799808 run.py:730] (val) algo quickselect step 6400: {'median': 0.197021484375, 'score': 0.197021484375, 'examples_seen': 15454, 'step': 6400, 'algorithm': 'quickselect'}
I0827 17:33:55.188356 134493687799808 run.py:730] (val) algo quicksort step 6400: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 9730, 'step': 6400, 'algorithm': 'quicksort'}
I0827 17:33:55.677458 134493687799808 run.py:730] (val) algo segments_intersect step 6400: {'intersect': 0.5689802913453299, 'score': 0.5689802913453299, 'examples_seen': 163872, 'step': 6400, 'algorithm': 'segments_intersect'}
I0827 17:33:55.782370 134493687799808 run.py:730] (val) algo strongly_connected_components step 6400: {'scc_id': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 7490, 'step': 6400, 'algorithm': 'strongly_connected_components'}
I0827 17:33:55.796061 134493687799808 run.py:730] (val) algo task_scheduling step 6400: {'selected': 0.8946938775510205, 'score': 0.8946938775510205, 'examples_seen': 39008, 'step': 6400, 'algorithm': 'task_scheduling'}
I0827 17:33:55.849980 134493687799808 run.py:730] (val) algo topological_sort step 6400: {'topo': 0.6416015625, 'topo_head': 0.953125, 'score': 0.79736328125, 'examples_seen': 17826, 'step': 6400, 'algorithm': 'topological_sort'}
I0827 17:33:55.850139 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.744, val scores are: mst_kruskal: 0.775, mst_prim: 0.835, naive_string_matcher: 0.763, optimal_bst: 0.907, quickselect: 0.197, quicksort: 0.948, segments_intersect: 0.569, strongly_connected_components: 0.753, task_scheduling: 0.895, topological_sort: 0.797
I0827 17:34:13.663829 134493687799808 run.py:695] Algo mst_kruskal step 6450 current loss 0.112311, current_train_items 142519.
I0827 17:34:13.685389 134493687799808 run.py:695] Algo mst_prim step 6450 current loss 0.182918, current_train_items 131499.
I0827 17:34:13.703694 134493687799808 run.py:695] Algo naive_string_matcher step 6450 current loss 1.424056, current_train_items 88235.
I0827 17:34:13.726625 134493687799808 run.py:695] Algo optimal_bst step 6450 current loss 0.000000, current_train_items 39312.
I0827 17:34:13.800961 134493687799808 run.py:695] Algo quickselect step 6450 current loss 1.736022, current_train_items 15579.
I0827 17:34:13.811180 134493687799808 run.py:695] Algo quicksort step 6450 current loss 0.000000, current_train_items 9807.
I0827 17:34:13.828338 134493687799808 run.py:695] Algo segments_intersect step 6450 current loss 0.577361, current_train_items 165152.
I0827 17:34:13.839440 134493687799808 run.py:695] Algo strongly_connected_components step 6450 current loss 1.882076, current_train_items 7549.
I0827 17:34:13.857518 134493687799808 run.py:695] Algo task_scheduling step 6450 current loss 0.000000, current_train_items 39312.
I0827 17:34:13.876987 134493687799808 run.py:695] Algo topological_sort step 6450 current loss 1.862735, current_train_items 17965.
I0827 17:34:13.989439 134493687799808 run.py:730] (val) algo mst_kruskal step 6450: {'in_mst': 0.778540237055521, 'score': 0.778540237055521, 'examples_seen': 142519, 'step': 6450, 'algorithm': 'mst_kruskal'}
I0827 17:34:14.010532 134493687799808 run.py:730] (val) algo mst_prim step 6450: {'pi': 0.861328125, 'score': 0.861328125, 'examples_seen': 131499, 'step': 6450, 'algorithm': 'mst_prim'}
I0827 17:34:14.759902 134493687799808 run.py:730] (val) algo naive_string_matcher step 6450: {'match': 0.720703125, 'score': 0.720703125, 'examples_seen': 88235, 'step': 6450, 'algorithm': 'naive_string_matcher'}
I0827 17:34:14.808092 134493687799808 run.py:730] (val) algo optimal_bst step 6450: {'root': 0.8850562283737025, 'score': 0.8850562283737025, 'examples_seen': 39312, 'step': 6450, 'algorithm': 'optimal_bst'}
I0827 17:34:18.488998 134493687799808 run.py:730] (val) algo quickselect step 6450: {'median': 0.209716796875, 'score': 0.209716796875, 'examples_seen': 15579, 'step': 6450, 'algorithm': 'quickselect'}
I0827 17:34:18.634347 134493687799808 run.py:730] (val) algo quicksort step 6450: {'pred': 0.71484375, 'score': 0.71484375, 'examples_seen': 9807, 'step': 6450, 'algorithm': 'quicksort'}
I0827 17:34:19.147158 134493687799808 run.py:730] (val) algo segments_intersect step 6450: {'intersect': 0.6795871076469349, 'score': 0.6795871076469349, 'examples_seen': 165152, 'step': 6450, 'algorithm': 'segments_intersect'}
I0827 17:34:19.253069 134493687799808 run.py:730] (val) algo strongly_connected_components step 6450: {'scc_id': 0.689453125, 'score': 0.689453125, 'examples_seen': 7549, 'step': 6450, 'algorithm': 'strongly_connected_components'}
I0827 17:34:19.266762 134493687799808 run.py:730] (val) algo task_scheduling step 6450: {'selected': 0.9195219123505975, 'score': 0.9195219123505975, 'examples_seen': 39312, 'step': 6450, 'algorithm': 'task_scheduling'}
I0827 17:34:19.320183 134493687799808 run.py:730] (val) algo topological_sort step 6450: {'topo': 0.59765625, 'topo_head': 0.953125, 'score': 0.775390625, 'examples_seen': 17965, 'step': 6450, 'algorithm': 'topological_sort'}
I0827 17:34:19.320341 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.723, val scores are: mst_kruskal: 0.779, mst_prim: 0.861, naive_string_matcher: 0.721, optimal_bst: 0.885, quickselect: 0.210, quicksort: 0.715, segments_intersect: 0.680, strongly_connected_components: 0.689, task_scheduling: 0.920, topological_sort: 0.775
I0827 17:34:37.197125 134493687799808 run.py:695] Algo mst_kruskal step 6500 current loss 0.092504, current_train_items 143579.
I0827 17:34:37.217288 134493687799808 run.py:695] Algo mst_prim step 6500 current loss 0.233779, current_train_items 132499.
I0827 17:34:37.232917 134493687799808 run.py:695] Algo naive_string_matcher step 6500 current loss 1.618994, current_train_items 88914.
I0827 17:34:37.250831 134493687799808 run.py:695] Algo optimal_bst step 6500 current loss 0.000000, current_train_items 39616.
I0827 17:34:37.331084 134493687799808 run.py:695] Algo quickselect step 6500 current loss 1.469548, current_train_items 15697.
I0827 17:34:37.345515 134493687799808 run.py:695] Algo quicksort step 6500 current loss 0.000000, current_train_items 9883.
I0827 17:34:37.370346 134493687799808 run.py:695] Algo segments_intersect step 6500 current loss 0.649095, current_train_items 166432.
I0827 17:34:37.395477 134493687799808 run.py:695] Algo strongly_connected_components step 6500 current loss 1.741282, current_train_items 7607.
I0827 17:34:37.419887 134493687799808 run.py:695] Algo task_scheduling step 6500 current loss 0.000000, current_train_items 39616.
I0827 17:34:37.441135 134493687799808 run.py:695] Algo topological_sort step 6500 current loss 2.956244, current_train_items 18106.
I0827 17:34:37.596110 134493687799808 run.py:730] (val) algo mst_kruskal step 6500: {'in_mst': 0.8311170212765958, 'score': 0.8311170212765958, 'examples_seen': 143579, 'step': 6500, 'algorithm': 'mst_kruskal'}
I0827 17:34:37.618137 134493687799808 run.py:730] (val) algo mst_prim step 6500: {'pi': 0.8720703125, 'score': 0.8720703125, 'examples_seen': 132499, 'step': 6500, 'algorithm': 'mst_prim'}
I0827 17:34:38.381010 134493687799808 run.py:730] (val) algo naive_string_matcher step 6500: {'match': 0.747802734375, 'score': 0.747802734375, 'examples_seen': 88914, 'step': 6500, 'algorithm': 'naive_string_matcher'}
I0827 17:34:38.428692 134493687799808 run.py:730] (val) algo optimal_bst step 6500: {'root': 0.8907331314878892, 'score': 0.8907331314878892, 'examples_seen': 39616, 'step': 6500, 'algorithm': 'optimal_bst'}
I0827 17:34:42.103107 134493687799808 run.py:730] (val) algo quickselect step 6500: {'median': 0.21728515625, 'score': 0.21728515625, 'examples_seen': 15697, 'step': 6500, 'algorithm': 'quickselect'}
I0827 17:34:42.249017 134493687799808 run.py:730] (val) algo quicksort step 6500: {'pred': 0.9443359375, 'score': 0.9443359375, 'examples_seen': 9883, 'step': 6500, 'algorithm': 'quicksort'}
I0827 17:34:42.745946 134493687799808 run.py:730] (val) algo segments_intersect step 6500: {'intersect': 0.5403614457831326, 'score': 0.5403614457831326, 'examples_seen': 166432, 'step': 6500, 'algorithm': 'segments_intersect'}
I0827 17:34:42.851591 134493687799808 run.py:730] (val) algo strongly_connected_components step 6500: {'scc_id': 0.7509765625, 'score': 0.7509765625, 'examples_seen': 7607, 'step': 6500, 'algorithm': 'strongly_connected_components'}
I0827 17:34:42.865379 134493687799808 run.py:730] (val) algo task_scheduling step 6500: {'selected': 0.8866995073891627, 'score': 0.8866995073891627, 'examples_seen': 39616, 'step': 6500, 'algorithm': 'task_scheduling'}
I0827 17:34:42.921719 134493687799808 run.py:730] (val) algo topological_sort step 6500: {'topo': 0.6572265625, 'topo_head': 1.0, 'score': 0.82861328125, 'examples_seen': 18106, 'step': 6500, 'algorithm': 'topological_sort'}
I0827 17:34:42.921940 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.773, current avg val score is 0.751, val scores are: mst_kruskal: 0.831, mst_prim: 0.872, naive_string_matcher: 0.748, optimal_bst: 0.891, quickselect: 0.217, quicksort: 0.944, segments_intersect: 0.540, strongly_connected_components: 0.751, task_scheduling: 0.887, topological_sort: 0.829
W0827 17:34:50.795781 134493687799808 samplers.py:175] Increasing hint lengh from 145 to 159
I0827 17:34:59.771153 134493687799808 run.py:695] Algo mst_kruskal step 6550 current loss 0.132084, current_train_items 144674.
I0827 17:34:59.792380 134493687799808 run.py:695] Algo mst_prim step 6550 current loss 0.440715, current_train_items 133527.
I0827 17:34:59.810564 134493687799808 run.py:695] Algo naive_string_matcher step 6550 current loss 1.186958, current_train_items 89611.
I0827 17:34:59.829401 134493687799808 run.py:695] Algo optimal_bst step 6550 current loss 0.000000, current_train_items 39920.
I0827 17:34:59.908191 134493687799808 run.py:695] Algo quickselect step 6550 current loss 3.809892, current_train_items 15822.
I0827 17:34:59.928364 134493687799808 run.py:695] Algo quicksort step 6550 current loss 0.000000, current_train_items 9960.
I0827 17:34:59.952686 134493687799808 run.py:695] Algo segments_intersect step 6550 current loss 0.631618, current_train_items 167712.
I0827 17:34:59.979334 134493687799808 run.py:695] Algo strongly_connected_components step 6550 current loss 0.000000, current_train_items 7664.
I0827 17:35:00.001713 134493687799808 run.py:695] Algo task_scheduling step 6550 current loss 0.000000, current_train_items 39920.
I0827 17:35:00.022339 134493687799808 run.py:695] Algo topological_sort step 6550 current loss 1.191450, current_train_items 18246.
I0827 17:35:00.199784 134493687799808 run.py:730] (val) algo mst_kruskal step 6550: {'in_mst': 0.7933081489476524, 'score': 0.7933081489476524, 'examples_seen': 144674, 'step': 6550, 'algorithm': 'mst_kruskal'}
I0827 17:35:00.222694 134493687799808 run.py:730] (val) algo mst_prim step 6550: {'pi': 0.876953125, 'score': 0.876953125, 'examples_seen': 133527, 'step': 6550, 'algorithm': 'mst_prim'}
I0827 17:35:01.374454 134493687799808 run.py:730] (val) algo naive_string_matcher step 6550: {'match': 0.734619140625, 'score': 0.734619140625, 'examples_seen': 89611, 'step': 6550, 'algorithm': 'naive_string_matcher'}
I0827 17:35:01.423129 134493687799808 run.py:730] (val) algo optimal_bst step 6550: {'root': 0.886299740484429, 'score': 0.886299740484429, 'examples_seen': 39920, 'step': 6550, 'algorithm': 'optimal_bst'}
I0827 17:35:05.110824 134493687799808 run.py:730] (val) algo quickselect step 6550: {'median': 0.228271484375, 'score': 0.228271484375, 'examples_seen': 15822, 'step': 6550, 'algorithm': 'quickselect'}
I0827 17:35:05.257451 134493687799808 run.py:730] (val) algo quicksort step 6550: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 9960, 'step': 6550, 'algorithm': 'quicksort'}
I0827 17:35:05.758382 134493687799808 run.py:730] (val) algo segments_intersect step 6550: {'intersect': 0.5778032036613273, 'score': 0.5778032036613273, 'examples_seen': 167712, 'step': 6550, 'algorithm': 'segments_intersect'}
I0827 17:35:05.866607 134493687799808 run.py:730] (val) algo strongly_connected_components step 6550: {'scc_id': 0.7138671875, 'score': 0.7138671875, 'examples_seen': 7664, 'step': 6550, 'algorithm': 'strongly_connected_components'}
I0827 17:35:05.880233 134493687799808 run.py:730] (val) algo task_scheduling step 6550: {'selected': 0.9229559748427674, 'score': 0.9229559748427674, 'examples_seen': 39920, 'step': 6550, 'algorithm': 'task_scheduling'}
I0827 17:35:05.934222 134493687799808 run.py:730] (val) algo topological_sort step 6550: {'topo': 0.6337890625, 'topo_head': 1.0, 'score': 0.81689453125, 'examples_seen': 18246, 'step': 6550, 'algorithm': 'topological_sort'}
I0827 17:35:05.934376 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.750, val scores are: mst_kruskal: 0.793, mst_prim: 0.877, naive_string_matcher: 0.735, optimal_bst: 0.886, quickselect: 0.228, quicksort: 0.948, segments_intersect: 0.578, strongly_connected_components: 0.714, task_scheduling: 0.923, topological_sort: 0.817
I0827 17:35:23.615286 134493687799808 run.py:695] Algo mst_kruskal step 6600 current loss 0.134127, current_train_items 145773.
I0827 17:35:23.629404 134493687799808 run.py:695] Algo mst_prim step 6600 current loss 0.396303, current_train_items 134549.
I0827 17:35:23.650748 134493687799808 run.py:695] Algo naive_string_matcher step 6600 current loss 1.276442, current_train_items 90293.
I0827 17:35:23.677235 134493687799808 run.py:695] Algo optimal_bst step 6600 current loss 0.000000, current_train_items 40224.
I0827 17:35:23.761344 134493687799808 run.py:695] Algo quickselect step 6600 current loss 1.811705, current_train_items 15944.
I0827 17:35:23.782274 134493687799808 run.py:695] Algo quicksort step 6600 current loss 1.003782, current_train_items 10037.
I0827 17:35:23.804657 134493687799808 run.py:695] Algo segments_intersect step 6600 current loss 0.659612, current_train_items 168992.
I0827 17:35:23.829033 134493687799808 run.py:695] Algo strongly_connected_components step 6600 current loss 1.265103, current_train_items 7724.
I0827 17:35:23.846890 134493687799808 run.py:695] Algo task_scheduling step 6600 current loss 0.000000, current_train_items 40224.
I0827 17:35:23.866834 134493687799808 run.py:695] Algo topological_sort step 6600 current loss 2.390868, current_train_items 18387.
I0827 17:35:24.026765 134493687799808 run.py:730] (val) algo mst_kruskal step 6600: {'in_mst': 0.8260869565217391, 'score': 0.8260869565217391, 'examples_seen': 145773, 'step': 6600, 'algorithm': 'mst_kruskal'}
I0827 17:35:24.050343 134493687799808 run.py:730] (val) algo mst_prim step 6600: {'pi': 0.86328125, 'score': 0.86328125, 'examples_seen': 134549, 'step': 6600, 'algorithm': 'mst_prim'}
I0827 17:35:25.182955 134493687799808 run.py:730] (val) algo naive_string_matcher step 6600: {'match': 0.754638671875, 'score': 0.754638671875, 'examples_seen': 90293, 'step': 6600, 'algorithm': 'naive_string_matcher'}
I0827 17:35:25.232330 134493687799808 run.py:730] (val) algo optimal_bst step 6600: {'root': 0.894950259515571, 'score': 0.894950259515571, 'examples_seen': 40224, 'step': 6600, 'algorithm': 'optimal_bst'}
I0827 17:35:28.922294 134493687799808 run.py:730] (val) algo quickselect step 6600: {'median': 0.21923828125, 'score': 0.21923828125, 'examples_seen': 15944, 'step': 6600, 'algorithm': 'quickselect'}
I0827 17:35:29.068565 134493687799808 run.py:730] (val) algo quicksort step 6600: {'pred': 0.953125, 'score': 0.953125, 'examples_seen': 10037, 'step': 6600, 'algorithm': 'quicksort'}
I0827 17:35:29.570918 134493687799808 run.py:730] (val) algo segments_intersect step 6600: {'intersect': 0.6166109539727437, 'score': 0.6166109539727437, 'examples_seen': 168992, 'step': 6600, 'algorithm': 'segments_intersect'}
I0827 17:35:29.675827 134493687799808 run.py:730] (val) algo strongly_connected_components step 6600: {'scc_id': 0.755859375, 'score': 0.755859375, 'examples_seen': 7724, 'step': 6600, 'algorithm': 'strongly_connected_components'}
I0827 17:35:29.689540 134493687799808 run.py:730] (val) algo task_scheduling step 6600: {'selected': 0.9433384379785604, 'score': 0.9433384379785604, 'examples_seen': 40224, 'step': 6600, 'algorithm': 'task_scheduling'}
I0827 17:35:29.743840 134493687799808 run.py:730] (val) algo topological_sort step 6600: {'topo': 0.6162109375, 'topo_head': 0.984375, 'score': 0.80029296875, 'examples_seen': 18387, 'step': 6600, 'algorithm': 'topological_sort'}
I0827 17:35:29.744045 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.750, current avg val score is 0.763, val scores are: mst_kruskal: 0.826, mst_prim: 0.863, naive_string_matcher: 0.755, optimal_bst: 0.895, quickselect: 0.219, quicksort: 0.953, segments_intersect: 0.617, strongly_connected_components: 0.756, task_scheduling: 0.943, topological_sort: 0.800
I0827 17:35:46.771257 134493687799808 run.py:695] Algo mst_kruskal step 6650 current loss 0.068851, current_train_items 146890.
I0827 17:35:46.781531 134493687799808 run.py:695] Algo mst_prim step 6650 current loss 0.297071, current_train_items 135570.
I0827 17:35:46.790375 134493687799808 run.py:695] Algo naive_string_matcher step 6650 current loss 1.385839, current_train_items 91001.
I0827 17:35:46.802059 134493687799808 run.py:695] Algo optimal_bst step 6650 current loss 0.277956, current_train_items 40544.
I0827 17:35:46.879145 134493687799808 run.py:695] Algo quickselect step 6650 current loss 2.157472, current_train_items 16065.
I0827 17:35:46.889542 134493687799808 run.py:695] Algo quicksort step 6650 current loss 0.000000, current_train_items 10112.
I0827 17:35:46.907622 134493687799808 run.py:695] Algo segments_intersect step 6650 current loss 0.634663, current_train_items 170272.
I0827 17:35:46.918434 134493687799808 run.py:695] Algo strongly_connected_components step 6650 current loss 0.000000, current_train_items 7782.
I0827 17:35:46.936323 134493687799808 run.py:695] Algo task_scheduling step 6650 current loss 0.167147, current_train_items 40544.
I0827 17:35:46.948257 134493687799808 run.py:695] Algo topological_sort step 6650 current loss 5.563697, current_train_items 18522.
I0827 17:35:47.065205 134493687799808 run.py:730] (val) algo mst_kruskal step 6650: {'in_mst': 0.7928286852589641, 'score': 0.7928286852589641, 'examples_seen': 146890, 'step': 6650, 'algorithm': 'mst_kruskal'}
I0827 17:35:47.085939 134493687799808 run.py:730] (val) algo mst_prim step 6650: {'pi': 0.8818359375, 'score': 0.8818359375, 'examples_seen': 135570, 'step': 6650, 'algorithm': 'mst_prim'}
I0827 17:35:47.910016 134493687799808 run.py:730] (val) algo naive_string_matcher step 6650: {'match': 0.74462890625, 'score': 0.74462890625, 'examples_seen': 91001, 'step': 6650, 'algorithm': 'naive_string_matcher'}
I0827 17:35:47.959689 134493687799808 run.py:730] (val) algo optimal_bst step 6650: {'root': 0.9101427335640139, 'score': 0.9101427335640139, 'examples_seen': 40544, 'step': 6650, 'algorithm': 'optimal_bst'}
I0827 17:35:51.643961 134493687799808 run.py:730] (val) algo quickselect step 6650: {'median': 0.21142578125, 'score': 0.21142578125, 'examples_seen': 16065, 'step': 6650, 'algorithm': 'quickselect'}
I0827 17:35:51.789535 134493687799808 run.py:730] (val) algo quicksort step 6650: {'pred': 0.9306640625, 'score': 0.9306640625, 'examples_seen': 10112, 'step': 6650, 'algorithm': 'quicksort'}
I0827 17:35:52.277840 134493687799808 run.py:730] (val) algo segments_intersect step 6650: {'intersect': 0.552463768115942, 'score': 0.552463768115942, 'examples_seen': 170272, 'step': 6650, 'algorithm': 'segments_intersect'}
I0827 17:35:52.383186 134493687799808 run.py:730] (val) algo strongly_connected_components step 6650: {'scc_id': 0.78125, 'score': 0.78125, 'examples_seen': 7782, 'step': 6650, 'algorithm': 'strongly_connected_components'}
I0827 17:35:52.396797 134493687799808 run.py:730] (val) algo task_scheduling step 6650: {'selected': 0.918785890073831, 'score': 0.918785890073831, 'examples_seen': 40544, 'step': 6650, 'algorithm': 'task_scheduling'}
I0827 17:35:52.451509 134493687799808 run.py:730] (val) algo topological_sort step 6650: {'topo': 0.650390625, 'topo_head': 0.984375, 'score': 0.8173828125, 'examples_seen': 18522, 'step': 6650, 'algorithm': 'topological_sort'}
I0827 17:35:52.451799 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.763, current avg val score is 0.754, val scores are: mst_kruskal: 0.793, mst_prim: 0.882, naive_string_matcher: 0.745, optimal_bst: 0.910, quickselect: 0.211, quicksort: 0.931, segments_intersect: 0.552, strongly_connected_components: 0.781, task_scheduling: 0.919, topological_sort: 0.817
I0827 17:36:09.307008 134493687799808 run.py:695] Algo mst_kruskal step 6700 current loss 0.110129, current_train_items 147976.
I0827 17:36:09.317233 134493687799808 run.py:695] Algo mst_prim step 6700 current loss 0.487018, current_train_items 136613.
I0827 17:36:09.325690 134493687799808 run.py:695] Algo naive_string_matcher step 6700 current loss 1.203070, current_train_items 91691.
I0827 17:36:09.337062 134493687799808 run.py:695] Algo optimal_bst step 6700 current loss 0.317144, current_train_items 40848.
I0827 17:36:09.414931 134493687799808 run.py:695] Algo quickselect step 6700 current loss 0.946292, current_train_items 16183.
I0827 17:36:09.425497 134493687799808 run.py:695] Algo quicksort step 6700 current loss 7.790090, current_train_items 10187.
I0827 17:36:09.443353 134493687799808 run.py:695] Algo segments_intersect step 6700 current loss 0.610437, current_train_items 171552.
I0827 17:36:09.454839 134493687799808 run.py:695] Algo strongly_connected_components step 6700 current loss 0.751171, current_train_items 7840.
I0827 17:36:09.471906 134493687799808 run.py:695] Algo task_scheduling step 6700 current loss 0.126655, current_train_items 40848.
I0827 17:36:09.484125 134493687799808 run.py:695] Algo topological_sort step 6700 current loss 2.501784, current_train_items 18663.
I0827 17:36:09.600759 134493687799808 run.py:730] (val) algo mst_kruskal step 6700: {'in_mst': 0.8338001867413632, 'score': 0.8338001867413632, 'examples_seen': 147976, 'step': 6700, 'algorithm': 'mst_kruskal'}
I0827 17:36:09.621980 134493687799808 run.py:730] (val) algo mst_prim step 6700: {'pi': 0.8408203125, 'score': 0.8408203125, 'examples_seen': 136613, 'step': 6700, 'algorithm': 'mst_prim'}
I0827 17:36:10.366403 134493687799808 run.py:730] (val) algo naive_string_matcher step 6700: {'match': 0.759521484375, 'score': 0.759521484375, 'examples_seen': 91691, 'step': 6700, 'algorithm': 'naive_string_matcher'}
I0827 17:36:10.414341 134493687799808 run.py:730] (val) algo optimal_bst step 6700: {'root': 0.8960315743944637, 'score': 0.8960315743944637, 'examples_seen': 40848, 'step': 6700, 'algorithm': 'optimal_bst'}
I0827 17:36:14.108326 134493687799808 run.py:730] (val) algo quickselect step 6700: {'median': 0.2021484375, 'score': 0.2021484375, 'examples_seen': 16183, 'step': 6700, 'algorithm': 'quickselect'}
I0827 17:36:14.255209 134493687799808 run.py:730] (val) algo quicksort step 6700: {'pred': 0.9072265625, 'score': 0.9072265625, 'examples_seen': 10187, 'step': 6700, 'algorithm': 'quicksort'}
I0827 17:36:14.755178 134493687799808 run.py:730] (val) algo segments_intersect step 6700: {'intersect': 0.6929297117976363, 'score': 0.6929297117976363, 'examples_seen': 171552, 'step': 6700, 'algorithm': 'segments_intersect'}
I0827 17:36:14.860865 134493687799808 run.py:730] (val) algo strongly_connected_components step 6700: {'scc_id': 0.7705078125, 'score': 0.7705078125, 'examples_seen': 7840, 'step': 6700, 'algorithm': 'strongly_connected_components'}
I0827 17:36:14.874573 134493687799808 run.py:730] (val) algo task_scheduling step 6700: {'selected': 0.9027552674230145, 'score': 0.9027552674230145, 'examples_seen': 40848, 'step': 6700, 'algorithm': 'task_scheduling'}
I0827 17:36:14.928531 134493687799808 run.py:730] (val) algo topological_sort step 6700: {'topo': 0.6845703125, 'topo_head': 0.984375, 'score': 0.83447265625, 'examples_seen': 18663, 'step': 6700, 'algorithm': 'topological_sort'}
I0827 17:36:14.928760 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.763, current avg val score is 0.764, val scores are: mst_kruskal: 0.834, mst_prim: 0.841, naive_string_matcher: 0.760, optimal_bst: 0.896, quickselect: 0.202, quicksort: 0.907, segments_intersect: 0.693, strongly_connected_components: 0.771, task_scheduling: 0.903, topological_sort: 0.834
I0827 17:36:31.887551 134493687799808 run.py:695] Algo mst_kruskal step 6750 current loss 0.076006, current_train_items 149087.
I0827 17:36:31.898291 134493687799808 run.py:695] Algo mst_prim step 6750 current loss 0.431785, current_train_items 137637.
I0827 17:36:31.907069 134493687799808 run.py:695] Algo naive_string_matcher step 6750 current loss 0.909651, current_train_items 92358.
I0827 17:36:31.919204 134493687799808 run.py:695] Algo optimal_bst step 6750 current loss 0.324922, current_train_items 41152.
I0827 17:36:31.998654 134493687799808 run.py:695] Algo quickselect step 6750 current loss 1.852813, current_train_items 16307.
I0827 17:36:32.009296 134493687799808 run.py:695] Algo quicksort step 6750 current loss 2.680296, current_train_items 10262.
I0827 17:36:32.026828 134493687799808 run.py:695] Algo segments_intersect step 6750 current loss 0.606366, current_train_items 172832.
I0827 17:36:32.037816 134493687799808 run.py:695] Algo strongly_connected_components step 6750 current loss 0.716268, current_train_items 7899.
I0827 17:36:32.056311 134493687799808 run.py:695] Algo task_scheduling step 6750 current loss 0.167242, current_train_items 41152.
I0827 17:36:32.068387 134493687799808 run.py:695] Algo topological_sort step 6750 current loss 1.203345, current_train_items 18806.
I0827 17:36:32.188295 134493687799808 run.py:730] (val) algo mst_kruskal step 6750: {'in_mst': 0.7747747747747747, 'score': 0.7747747747747747, 'examples_seen': 149087, 'step': 6750, 'algorithm': 'mst_kruskal'}
I0827 17:36:32.209298 134493687799808 run.py:730] (val) algo mst_prim step 6750: {'pi': 0.830078125, 'score': 0.830078125, 'examples_seen': 137637, 'step': 6750, 'algorithm': 'mst_prim'}
I0827 17:36:32.961988 134493687799808 run.py:730] (val) algo naive_string_matcher step 6750: {'match': 0.7724609375, 'score': 0.7724609375, 'examples_seen': 92358, 'step': 6750, 'algorithm': 'naive_string_matcher'}
I0827 17:36:33.010411 134493687799808 run.py:730] (val) algo optimal_bst step 6750: {'root': 0.8960856401384083, 'score': 0.8960856401384083, 'examples_seen': 41152, 'step': 6750, 'algorithm': 'optimal_bst'}
I0827 17:36:36.723648 134493687799808 run.py:730] (val) algo quickselect step 6750: {'median': 0.189453125, 'score': 0.189453125, 'examples_seen': 16307, 'step': 6750, 'algorithm': 'quickselect'}
I0827 17:36:36.873617 134493687799808 run.py:730] (val) algo quicksort step 6750: {'pred': 0.947265625, 'score': 0.947265625, 'examples_seen': 10262, 'step': 6750, 'algorithm': 'quicksort'}
I0827 17:36:37.789277 134493687799808 run.py:730] (val) algo segments_intersect step 6750: {'intersect': 0.6555831265508685, 'score': 0.6555831265508685, 'examples_seen': 172832, 'step': 6750, 'algorithm': 'segments_intersect'}
I0827 17:36:37.895378 134493687799808 run.py:730] (val) algo strongly_connected_components step 6750: {'scc_id': 0.7783203125, 'score': 0.7783203125, 'examples_seen': 7899, 'step': 6750, 'algorithm': 'strongly_connected_components'}
I0827 17:36:37.908932 134493687799808 run.py:730] (val) algo task_scheduling step 6750: {'selected': 0.9338645418326693, 'score': 0.9338645418326693, 'examples_seen': 41152, 'step': 6750, 'algorithm': 'task_scheduling'}
I0827 17:36:37.962831 134493687799808 run.py:730] (val) algo topological_sort step 6750: {'topo': 0.6357421875, 'topo_head': 1.0, 'score': 0.81787109375, 'examples_seen': 18806, 'step': 6750, 'algorithm': 'topological_sort'}
I0827 17:36:37.962992 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.760, val scores are: mst_kruskal: 0.775, mst_prim: 0.830, naive_string_matcher: 0.772, optimal_bst: 0.896, quickselect: 0.189, quicksort: 0.947, segments_intersect: 0.656, strongly_connected_components: 0.778, task_scheduling: 0.934, topological_sort: 0.818
I0827 17:36:55.425448 134493687799808 run.py:695] Algo mst_kruskal step 6800 current loss 0.133387, current_train_items 150222.
I0827 17:36:55.435957 134493687799808 run.py:695] Algo mst_prim step 6800 current loss 0.333822, current_train_items 138643.
I0827 17:36:55.444479 134493687799808 run.py:695] Algo naive_string_matcher step 6800 current loss 1.039044, current_train_items 93041.
I0827 17:36:55.457089 134493687799808 run.py:695] Algo optimal_bst step 6800 current loss 0.262324, current_train_items 41456.
I0827 17:36:55.535328 134493687799808 run.py:695] Algo quickselect step 6800 current loss 2.612833, current_train_items 16428.
I0827 17:36:55.546400 134493687799808 run.py:695] Algo quicksort step 6800 current loss 1.760131, current_train_items 10339.
I0827 17:36:55.564142 134493687799808 run.py:695] Algo segments_intersect step 6800 current loss 0.766388, current_train_items 174112.
I0827 17:36:55.575227 134493687799808 run.py:695] Algo strongly_connected_components step 6800 current loss 1.358144, current_train_items 7959.
I0827 17:36:55.593210 134493687799808 run.py:695] Algo task_scheduling step 6800 current loss 0.154004, current_train_items 41456.
I0827 17:36:55.605819 134493687799808 run.py:695] Algo topological_sort step 6800 current loss 1.322943, current_train_items 18942.
I0827 17:36:55.715306 134493687799808 run.py:730] (val) algo mst_kruskal step 6800: {'in_mst': 0.7902924704418172, 'score': 0.7902924704418172, 'examples_seen': 150222, 'step': 6800, 'algorithm': 'mst_kruskal'}
I0827 17:36:55.736715 134493687799808 run.py:730] (val) algo mst_prim step 6800: {'pi': 0.8251953125, 'score': 0.8251953125, 'examples_seen': 138643, 'step': 6800, 'algorithm': 'mst_prim'}
I0827 17:36:56.482857 134493687799808 run.py:730] (val) algo naive_string_matcher step 6800: {'match': 0.757568359375, 'score': 0.757568359375, 'examples_seen': 93041, 'step': 6800, 'algorithm': 'naive_string_matcher'}
I0827 17:36:56.530767 134493687799808 run.py:730] (val) algo optimal_bst step 6800: {'root': 0.9016003460207612, 'score': 0.9016003460207612, 'examples_seen': 41456, 'step': 6800, 'algorithm': 'optimal_bst'}
I0827 17:37:00.266068 134493687799808 run.py:730] (val) algo quickselect step 6800: {'median': 0.216064453125, 'score': 0.216064453125, 'examples_seen': 16428, 'step': 6800, 'algorithm': 'quickselect'}
I0827 17:37:00.416494 134493687799808 run.py:730] (val) algo quicksort step 6800: {'pred': 0.9453125, 'score': 0.9453125, 'examples_seen': 10339, 'step': 6800, 'algorithm': 'quicksort'}
I0827 17:37:01.308335 134493687799808 run.py:730] (val) algo segments_intersect step 6800: {'intersect': 0.6828609986504725, 'score': 0.6828609986504725, 'examples_seen': 174112, 'step': 6800, 'algorithm': 'segments_intersect'}
I0827 17:37:01.416383 134493687799808 run.py:730] (val) algo strongly_connected_components step 6800: {'scc_id': 0.7763671875, 'score': 0.7763671875, 'examples_seen': 7959, 'step': 6800, 'algorithm': 'strongly_connected_components'}
I0827 17:37:01.440662 134493687799808 run.py:730] (val) algo task_scheduling step 6800: {'selected': 0.9350039154267816, 'score': 0.9350039154267816, 'examples_seen': 41456, 'step': 6800, 'algorithm': 'task_scheduling'}
I0827 17:37:01.494793 134493687799808 run.py:730] (val) algo topological_sort step 6800: {'topo': 0.6630859375, 'topo_head': 1.0, 'score': 0.83154296875, 'examples_seen': 18942, 'step': 6800, 'algorithm': 'topological_sort'}
I0827 17:37:01.495014 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.764, current avg val score is 0.766, val scores are: mst_kruskal: 0.790, mst_prim: 0.825, naive_string_matcher: 0.758, optimal_bst: 0.902, quickselect: 0.216, quicksort: 0.945, segments_intersect: 0.683, strongly_connected_components: 0.776, task_scheduling: 0.935, topological_sort: 0.832
I0827 17:37:18.460573 134493687799808 run.py:695] Algo mst_kruskal step 6850 current loss 0.133726, current_train_items 151346.
I0827 17:37:18.470969 134493687799808 run.py:695] Algo mst_prim step 6850 current loss 0.598543, current_train_items 139673.
I0827 17:37:18.479868 134493687799808 run.py:695] Algo naive_string_matcher step 6850 current loss 1.428709, current_train_items 93719.
I0827 17:37:18.492591 134493687799808 run.py:695] Algo optimal_bst step 6850 current loss 0.322134, current_train_items 41760.
I0827 17:37:18.569170 134493687799808 run.py:695] Algo quickselect step 6850 current loss 2.339873, current_train_items 16548.
I0827 17:37:18.580684 134493687799808 run.py:695] Algo quicksort step 6850 current loss 0.563983, current_train_items 10414.
I0827 17:37:18.601926 134493687799808 run.py:695] Algo segments_intersect step 6850 current loss 0.635618, current_train_items 175392.
I0827 17:37:18.613100 134493687799808 run.py:695] Algo strongly_connected_components step 6850 current loss 2.014772, current_train_items 8016.
I0827 17:37:18.630386 134493687799808 run.py:695] Algo task_scheduling step 6850 current loss 0.165205, current_train_items 41760.
I0827 17:37:18.641592 134493687799808 run.py:695] Algo topological_sort step 6850 current loss 1.231282, current_train_items 19082.
I0827 17:37:18.758186 134493687799808 run.py:730] (val) algo mst_kruskal step 6850: {'in_mst': 0.786273329319687, 'score': 0.786273329319687, 'examples_seen': 151346, 'step': 6850, 'algorithm': 'mst_kruskal'}
I0827 17:37:18.779140 134493687799808 run.py:730] (val) algo mst_prim step 6850: {'pi': 0.8291015625, 'score': 0.8291015625, 'examples_seen': 139673, 'step': 6850, 'algorithm': 'mst_prim'}
I0827 17:37:19.528167 134493687799808 run.py:730] (val) algo naive_string_matcher step 6850: {'match': 0.748779296875, 'score': 0.748779296875, 'examples_seen': 93719, 'step': 6850, 'algorithm': 'naive_string_matcher'}
I0827 17:37:19.576281 134493687799808 run.py:730] (val) algo optimal_bst step 6850: {'root': 0.9021410034602076, 'score': 0.9021410034602076, 'examples_seen': 41760, 'step': 6850, 'algorithm': 'optimal_bst'}
I0827 17:37:23.287140 134493687799808 run.py:730] (val) algo quickselect step 6850: {'median': 0.2041015625, 'score': 0.2041015625, 'examples_seen': 16548, 'step': 6850, 'algorithm': 'quickselect'}
I0827 17:37:23.432056 134493687799808 run.py:730] (val) algo quicksort step 6850: {'pred': 0.900390625, 'score': 0.900390625, 'examples_seen': 10414, 'step': 6850, 'algorithm': 'quicksort'}
I0827 17:37:24.075260 134493687799808 run.py:730] (val) algo segments_intersect step 6850: {'intersect': 0.6902654867256638, 'score': 0.6902654867256638, 'examples_seen': 175392, 'step': 6850, 'algorithm': 'segments_intersect'}
I0827 17:37:24.183194 134493687799808 run.py:730] (val) algo strongly_connected_components step 6850: {'scc_id': 0.763671875, 'score': 0.763671875, 'examples_seen': 8016, 'step': 6850, 'algorithm': 'strongly_connected_components'}
I0827 17:37:24.204923 134493687799808 run.py:730] (val) algo task_scheduling step 6850: {'selected': 0.9227053140096618, 'score': 0.9227053140096618, 'examples_seen': 41760, 'step': 6850, 'algorithm': 'task_scheduling'}
I0827 17:37:24.260222 134493687799808 run.py:730] (val) algo topological_sort step 6850: {'topo': 0.623046875, 'topo_head': 1.0, 'score': 0.8115234375, 'examples_seen': 19082, 'step': 6850, 'algorithm': 'topological_sort'}
I0827 17:37:24.260434 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.756, val scores are: mst_kruskal: 0.786, mst_prim: 0.829, naive_string_matcher: 0.749, optimal_bst: 0.902, quickselect: 0.204, quicksort: 0.900, segments_intersect: 0.690, strongly_connected_components: 0.764, task_scheduling: 0.923, topological_sort: 0.812
I0827 17:37:41.302170 134493687799808 run.py:695] Algo mst_kruskal step 6900 current loss 0.114401, current_train_items 152416.
I0827 17:37:41.312509 134493687799808 run.py:695] Algo mst_prim step 6900 current loss 0.304935, current_train_items 140708.
I0827 17:37:41.321062 134493687799808 run.py:695] Algo naive_string_matcher step 6900 current loss 1.063582, current_train_items 94419.
I0827 17:37:41.333097 134493687799808 run.py:695] Algo optimal_bst step 6900 current loss 0.343225, current_train_items 42064.
I0827 17:37:41.409975 134493687799808 run.py:695] Algo quickselect step 6900 current loss 2.172048, current_train_items 16673.
I0827 17:37:41.419775 134493687799808 run.py:695] Algo quicksort step 6900 current loss 12.360833, current_train_items 10489.
I0827 17:37:41.437019 134493687799808 run.py:695] Algo segments_intersect step 6900 current loss 0.663572, current_train_items 176672.
I0827 17:37:41.456359 134493687799808 run.py:695] Algo strongly_connected_components step 6900 current loss 0.000000, current_train_items 8073.
I0827 17:37:41.472268 134493687799808 run.py:695] Algo task_scheduling step 6900 current loss 0.213602, current_train_items 42064.
I0827 17:37:41.483366 134493687799808 run.py:695] Algo topological_sort step 6900 current loss 2.970944, current_train_items 19222.
I0827 17:37:41.599629 134493687799808 run.py:730] (val) algo mst_kruskal step 6900: {'in_mst': 0.76043673731535, 'score': 0.76043673731535, 'examples_seen': 152416, 'step': 6900, 'algorithm': 'mst_kruskal'}
I0827 17:37:41.620887 134493687799808 run.py:730] (val) algo mst_prim step 6900: {'pi': 0.8994140625, 'score': 0.8994140625, 'examples_seen': 140708, 'step': 6900, 'algorithm': 'mst_prim'}
I0827 17:37:42.367549 134493687799808 run.py:730] (val) algo naive_string_matcher step 6900: {'match': 0.754150390625, 'score': 0.754150390625, 'examples_seen': 94419, 'step': 6900, 'algorithm': 'naive_string_matcher'}
I0827 17:37:42.415647 134493687799808 run.py:730] (val) algo optimal_bst step 6900: {'root': 0.9074935121107266, 'score': 0.9074935121107266, 'examples_seen': 42064, 'step': 6900, 'algorithm': 'optimal_bst'}
I0827 17:37:46.095489 134493687799808 run.py:730] (val) algo quickselect step 6900: {'median': 0.211181640625, 'score': 0.211181640625, 'examples_seen': 16673, 'step': 6900, 'algorithm': 'quickselect'}
I0827 17:37:46.240766 134493687799808 run.py:730] (val) algo quicksort step 6900: {'pred': 0.9453125, 'score': 0.9453125, 'examples_seen': 10489, 'step': 6900, 'algorithm': 'quicksort'}
I0827 17:37:46.739855 134493687799808 run.py:730] (val) algo segments_intersect step 6900: {'intersect': 0.6652873563218391, 'score': 0.6652873563218391, 'examples_seen': 176672, 'step': 6900, 'algorithm': 'segments_intersect'}
I0827 17:37:46.845793 134493687799808 run.py:730] (val) algo strongly_connected_components step 6900: {'scc_id': 0.7392578125, 'score': 0.7392578125, 'examples_seen': 8073, 'step': 6900, 'algorithm': 'strongly_connected_components'}
I0827 17:37:46.859256 134493687799808 run.py:730] (val) algo task_scheduling step 6900: {'selected': 0.8525423728813559, 'score': 0.8525423728813559, 'examples_seen': 42064, 'step': 6900, 'algorithm': 'task_scheduling'}
I0827 17:37:46.913329 134493687799808 run.py:730] (val) algo topological_sort step 6900: {'topo': 0.6220703125, 'topo_head': 0.984375, 'score': 0.80322265625, 'examples_seen': 19222, 'step': 6900, 'algorithm': 'topological_sort'}
I0827 17:37:46.913550 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.754, val scores are: mst_kruskal: 0.760, mst_prim: 0.899, naive_string_matcher: 0.754, optimal_bst: 0.907, quickselect: 0.211, quicksort: 0.945, segments_intersect: 0.665, strongly_connected_components: 0.739, task_scheduling: 0.853, topological_sort: 0.803
I0827 17:38:04.877028 134493687799808 run.py:695] Algo mst_kruskal step 6950 current loss 0.148734, current_train_items 153535.
I0827 17:38:04.887362 134493687799808 run.py:695] Algo mst_prim step 6950 current loss 0.605697, current_train_items 141740.
I0827 17:38:04.895859 134493687799808 run.py:695] Algo naive_string_matcher step 6950 current loss 1.982827, current_train_items 95098.
I0827 17:38:04.907871 134493687799808 run.py:695] Algo optimal_bst step 6950 current loss 0.384695, current_train_items 42368.
I0827 17:38:04.985114 134493687799808 run.py:695] Algo quickselect step 6950 current loss 2.053834, current_train_items 16787.
I0827 17:38:04.995406 134493687799808 run.py:695] Algo quicksort step 6950 current loss 3.390938, current_train_items 10559.
I0827 17:38:05.013998 134493687799808 run.py:695] Algo segments_intersect step 6950 current loss 0.616423, current_train_items 177952.
I0827 17:38:05.024750 134493687799808 run.py:695] Algo strongly_connected_components step 6950 current loss 0.070235, current_train_items 8131.
I0827 17:38:05.042835 134493687799808 run.py:695] Algo task_scheduling step 6950 current loss 0.162808, current_train_items 42368.
I0827 17:38:05.054886 134493687799808 run.py:695] Algo topological_sort step 6950 current loss 1.065735, current_train_items 19363.
I0827 17:38:05.163634 134493687799808 run.py:730] (val) algo mst_kruskal step 6950: {'in_mst': 0.8573148705599037, 'score': 0.8573148705599037, 'examples_seen': 153535, 'step': 6950, 'algorithm': 'mst_kruskal'}
I0827 17:38:05.184754 134493687799808 run.py:730] (val) algo mst_prim step 6950: {'pi': 0.8583984375, 'score': 0.8583984375, 'examples_seen': 141740, 'step': 6950, 'algorithm': 'mst_prim'}
I0827 17:38:05.929322 134493687799808 run.py:730] (val) algo naive_string_matcher step 6950: {'match': 0.716796875, 'score': 0.716796875, 'examples_seen': 95098, 'step': 6950, 'algorithm': 'naive_string_matcher'}
I0827 17:38:05.977120 134493687799808 run.py:730] (val) algo optimal_bst step 6950: {'root': 0.8957612456747405, 'score': 0.8957612456747405, 'examples_seen': 42368, 'step': 6950, 'algorithm': 'optimal_bst'}
I0827 17:38:09.667069 134493687799808 run.py:730] (val) algo quickselect step 6950: {'median': 0.21875, 'score': 0.21875, 'examples_seen': 16787, 'step': 6950, 'algorithm': 'quickselect'}
I0827 17:38:09.811793 134493687799808 run.py:730] (val) algo quicksort step 6950: {'pred': 0.9443359375, 'score': 0.9443359375, 'examples_seen': 10559, 'step': 6950, 'algorithm': 'quicksort'}
I0827 17:38:10.313941 134493687799808 run.py:730] (val) algo segments_intersect step 6950: {'intersect': 0.614476386036961, 'score': 0.614476386036961, 'examples_seen': 177952, 'step': 6950, 'algorithm': 'segments_intersect'}
I0827 17:38:10.419229 134493687799808 run.py:730] (val) algo strongly_connected_components step 6950: {'scc_id': 0.765625, 'score': 0.765625, 'examples_seen': 8131, 'step': 6950, 'algorithm': 'strongly_connected_components'}
I0827 17:38:10.433055 134493687799808 run.py:730] (val) algo task_scheduling step 6950: {'selected': 0.9167340339531123, 'score': 0.9167340339531123, 'examples_seen': 42368, 'step': 6950, 'algorithm': 'task_scheduling'}
I0827 17:38:10.486727 134493687799808 run.py:730] (val) algo topological_sort step 6950: {'topo': 0.6484375, 'topo_head': 1.0, 'score': 0.82421875, 'examples_seen': 19363, 'step': 6950, 'algorithm': 'topological_sort'}
I0827 17:38:10.486930 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.761, val scores are: mst_kruskal: 0.857, mst_prim: 0.858, naive_string_matcher: 0.717, optimal_bst: 0.896, quickselect: 0.219, quicksort: 0.944, segments_intersect: 0.614, strongly_connected_components: 0.766, task_scheduling: 0.917, topological_sort: 0.824
I0827 17:38:28.070667 134493687799808 run.py:695] Algo mst_kruskal step 7000 current loss 0.071074, current_train_items 154632.
I0827 17:38:28.081730 134493687799808 run.py:695] Algo mst_prim step 7000 current loss 0.446745, current_train_items 142781.
I0827 17:38:28.090749 134493687799808 run.py:695] Algo naive_string_matcher step 7000 current loss 0.901679, current_train_items 95770.
I0827 17:38:28.102766 134493687799808 run.py:695] Algo optimal_bst step 7000 current loss 0.727553, current_train_items 42672.
I0827 17:38:28.180388 134493687799808 run.py:695] Algo quickselect step 7000 current loss 1.427219, current_train_items 16901.
I0827 17:38:28.191111 134493687799808 run.py:695] Algo quicksort step 7000 current loss 20.963064, current_train_items 10638.
I0827 17:38:28.210673 134493687799808 run.py:695] Algo segments_intersect step 7000 current loss 0.612661, current_train_items 179232.
I0827 17:38:28.225681 134493687799808 run.py:695] Algo strongly_connected_components step 7000 current loss 0.000000, current_train_items 8189.
I0827 17:38:28.241521 134493687799808 run.py:695] Algo task_scheduling step 7000 current loss 2.307028, current_train_items 42672.
I0827 17:38:28.253507 134493687799808 run.py:695] Algo topological_sort step 7000 current loss 1.920868, current_train_items 19500.
I0827 17:38:28.369430 134493687799808 run.py:730] (val) algo mst_kruskal step 7000: {'in_mst': 0.801556420233463, 'score': 0.801556420233463, 'examples_seen': 154632, 'step': 7000, 'algorithm': 'mst_kruskal'}
I0827 17:38:28.390619 134493687799808 run.py:730] (val) algo mst_prim step 7000: {'pi': 0.8740234375, 'score': 0.8740234375, 'examples_seen': 142781, 'step': 7000, 'algorithm': 'mst_prim'}
I0827 17:38:29.135458 134493687799808 run.py:730] (val) algo naive_string_matcher step 7000: {'match': 0.788818359375, 'score': 0.788818359375, 'examples_seen': 95770, 'step': 7000, 'algorithm': 'naive_string_matcher'}
I0827 17:38:29.183243 134493687799808 run.py:730] (val) algo optimal_bst step 7000: {'root': 0.888840830449827, 'score': 0.888840830449827, 'examples_seen': 42672, 'step': 7000, 'algorithm': 'optimal_bst'}
I0827 17:38:32.879754 134493687799808 run.py:730] (val) algo quickselect step 7000: {'median': 0.198486328125, 'score': 0.198486328125, 'examples_seen': 16901, 'step': 7000, 'algorithm': 'quickselect'}
I0827 17:38:33.024397 134493687799808 run.py:730] (val) algo quicksort step 7000: {'pred': 0.947265625, 'score': 0.947265625, 'examples_seen': 10638, 'step': 7000, 'algorithm': 'quicksort'}
I0827 17:38:33.543628 134493687799808 run.py:730] (val) algo segments_intersect step 7000: {'intersect': 0.5239852398523985, 'score': 0.5239852398523985, 'examples_seen': 179232, 'step': 7000, 'algorithm': 'segments_intersect'}
I0827 17:38:33.649888 134493687799808 run.py:730] (val) algo strongly_connected_components step 7000: {'scc_id': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 8189, 'step': 7000, 'algorithm': 'strongly_connected_components'}
I0827 17:38:33.663459 134493687799808 run.py:730] (val) algo task_scheduling step 7000: {'selected': 0.9054054054054055, 'score': 0.9054054054054055, 'examples_seen': 42672, 'step': 7000, 'algorithm': 'task_scheduling'}
I0827 17:38:33.717244 134493687799808 run.py:730] (val) algo topological_sort step 7000: {'topo': 0.5869140625, 'topo_head': 0.984375, 'score': 0.78564453125, 'examples_seen': 19500, 'step': 7000, 'algorithm': 'topological_sort'}
I0827 17:38:33.717421 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.747, val scores are: mst_kruskal: 0.802, mst_prim: 0.874, naive_string_matcher: 0.789, optimal_bst: 0.889, quickselect: 0.198, quicksort: 0.947, segments_intersect: 0.524, strongly_connected_components: 0.753, task_scheduling: 0.905, topological_sort: 0.786
W0827 17:38:35.840887 134493687799808 samplers.py:175] Increasing hint lengh from 138 to 141
I0827 17:38:51.492230 134493687799808 run.py:695] Algo mst_kruskal step 7050 current loss 0.072574, current_train_items 155717.
I0827 17:38:51.503702 134493687799808 run.py:695] Algo mst_prim step 7050 current loss 0.472603, current_train_items 143808.
I0827 17:38:51.513039 134493687799808 run.py:695] Algo naive_string_matcher step 7050 current loss 1.162222, current_train_items 96467.
I0827 17:38:51.525315 134493687799808 run.py:695] Algo optimal_bst step 7050 current loss 0.000000, current_train_items 42976.
I0827 17:38:51.602761 134493687799808 run.py:695] Algo quickselect step 7050 current loss 1.953350, current_train_items 17026.
I0827 17:38:51.614050 134493687799808 run.py:695] Algo quicksort step 7050 current loss 1.769144, current_train_items 10715.
I0827 17:38:51.632059 134493687799808 run.py:695] Algo segments_intersect step 7050 current loss 0.604668, current_train_items 180512.
I0827 17:38:51.643078 134493687799808 run.py:695] Algo strongly_connected_components step 7050 current loss 1.323378, current_train_items 8249.
I0827 17:38:51.661542 134493687799808 run.py:695] Algo task_scheduling step 7050 current loss 0.000000, current_train_items 42976.
I0827 17:38:51.674119 134493687799808 run.py:695] Algo topological_sort step 7050 current loss 0.783354, current_train_items 19639.
I0827 17:38:51.794249 134493687799808 run.py:730] (val) algo mst_kruskal step 7050: {'in_mst': 0.7946725860155383, 'score': 0.7946725860155383, 'examples_seen': 155717, 'step': 7050, 'algorithm': 'mst_kruskal'}
I0827 17:38:51.815894 134493687799808 run.py:730] (val) algo mst_prim step 7050: {'pi': 0.84375, 'score': 0.84375, 'examples_seen': 143808, 'step': 7050, 'algorithm': 'mst_prim'}
I0827 17:38:52.563930 134493687799808 run.py:730] (val) algo naive_string_matcher step 7050: {'match': 0.73388671875, 'score': 0.73388671875, 'examples_seen': 96467, 'step': 7050, 'algorithm': 'naive_string_matcher'}
I0827 17:38:52.612395 134493687799808 run.py:730] (val) algo optimal_bst step 7050: {'root': 0.8860294117647058, 'score': 0.8860294117647058, 'examples_seen': 42976, 'step': 7050, 'algorithm': 'optimal_bst'}
I0827 17:38:56.308787 134493687799808 run.py:730] (val) algo quickselect step 7050: {'median': 0.200927734375, 'score': 0.200927734375, 'examples_seen': 17026, 'step': 7050, 'algorithm': 'quickselect'}
I0827 17:38:56.455277 134493687799808 run.py:730] (val) algo quicksort step 7050: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 10715, 'step': 7050, 'algorithm': 'quicksort'}
I0827 17:38:56.955796 134493687799808 run.py:730] (val) algo segments_intersect step 7050: {'intersect': 0.558858501783591, 'score': 0.558858501783591, 'examples_seen': 180512, 'step': 7050, 'algorithm': 'segments_intersect'}
I0827 17:38:57.062597 134493687799808 run.py:730] (val) algo strongly_connected_components step 7050: {'scc_id': 0.71484375, 'score': 0.71484375, 'examples_seen': 8249, 'step': 7050, 'algorithm': 'strongly_connected_components'}
I0827 17:38:57.076050 134493687799808 run.py:730] (val) algo task_scheduling step 7050: {'selected': 0.9393223010244286, 'score': 0.9393223010244286, 'examples_seen': 42976, 'step': 7050, 'algorithm': 'task_scheduling'}
I0827 17:38:57.130225 134493687799808 run.py:730] (val) algo topological_sort step 7050: {'topo': 0.625, 'topo_head': 1.0, 'score': 0.8125, 'examples_seen': 19639, 'step': 7050, 'algorithm': 'topological_sort'}
I0827 17:38:57.130386 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.743, val scores are: mst_kruskal: 0.795, mst_prim: 0.844, naive_string_matcher: 0.734, optimal_bst: 0.886, quickselect: 0.201, quicksort: 0.948, segments_intersect: 0.559, strongly_connected_components: 0.715, task_scheduling: 0.939, topological_sort: 0.812
I0827 17:39:15.435517 134493687799808 run.py:695] Algo mst_kruskal step 7100 current loss 0.064514, current_train_items 156814.
I0827 17:39:15.445629 134493687799808 run.py:695] Algo mst_prim step 7100 current loss 0.343697, current_train_items 144842.
I0827 17:39:15.454303 134493687799808 run.py:695] Algo naive_string_matcher step 7100 current loss 2.162413, current_train_items 97165.
I0827 17:39:15.466226 134493687799808 run.py:695] Algo optimal_bst step 7100 current loss 0.000000, current_train_items 43280.
I0827 17:39:15.544404 134493687799808 run.py:695] Algo quickselect step 7100 current loss 2.438826, current_train_items 17145.
I0827 17:39:15.555416 134493687799808 run.py:695] Algo quicksort step 7100 current loss 5.568223, current_train_items 10789.
I0827 17:39:15.573463 134493687799808 run.py:695] Algo segments_intersect step 7100 current loss 0.679784, current_train_items 181792.
I0827 17:39:15.584056 134493687799808 run.py:695] Algo strongly_connected_components step 7100 current loss 2.239540, current_train_items 8307.
I0827 17:39:15.602519 134493687799808 run.py:695] Algo task_scheduling step 7100 current loss 0.000000, current_train_items 43280.
I0827 17:39:15.614784 134493687799808 run.py:695] Algo topological_sort step 7100 current loss 1.240491, current_train_items 19780.
I0827 17:39:15.732936 134493687799808 run.py:730] (val) algo mst_kruskal step 7100: {'in_mst': 0.7938034188034186, 'score': 0.7938034188034186, 'examples_seen': 156814, 'step': 7100, 'algorithm': 'mst_kruskal'}
I0827 17:39:15.754175 134493687799808 run.py:730] (val) algo mst_prim step 7100: {'pi': 0.8828125, 'score': 0.8828125, 'examples_seen': 144842, 'step': 7100, 'algorithm': 'mst_prim'}
I0827 17:39:16.498285 134493687799808 run.py:730] (val) algo naive_string_matcher step 7100: {'match': 0.724609375, 'score': 0.724609375, 'examples_seen': 97165, 'step': 7100, 'algorithm': 'naive_string_matcher'}
I0827 17:39:16.545951 134493687799808 run.py:730] (val) algo optimal_bst step 7100: {'root': 0.910413062283737, 'score': 0.910413062283737, 'examples_seen': 43280, 'step': 7100, 'algorithm': 'optimal_bst'}
I0827 17:39:20.234406 134493687799808 run.py:730] (val) algo quickselect step 7100: {'median': 0.221435546875, 'score': 0.221435546875, 'examples_seen': 17145, 'step': 7100, 'algorithm': 'quickselect'}
I0827 17:39:20.378712 134493687799808 run.py:730] (val) algo quicksort step 7100: {'pred': 0.826171875, 'score': 0.826171875, 'examples_seen': 10789, 'step': 7100, 'algorithm': 'quicksort'}
I0827 17:39:20.874093 134493687799808 run.py:730] (val) algo segments_intersect step 7100: {'intersect': 0.5766836445953594, 'score': 0.5766836445953594, 'examples_seen': 181792, 'step': 7100, 'algorithm': 'segments_intersect'}
I0827 17:39:20.979201 134493687799808 run.py:730] (val) algo strongly_connected_components step 7100: {'scc_id': 0.73046875, 'score': 0.73046875, 'examples_seen': 8307, 'step': 7100, 'algorithm': 'strongly_connected_components'}
I0827 17:39:20.992547 134493687799808 run.py:730] (val) algo task_scheduling step 7100: {'selected': 0.9333333333333333, 'score': 0.9333333333333333, 'examples_seen': 43280, 'step': 7100, 'algorithm': 'task_scheduling'}
I0827 17:39:21.045817 134493687799808 run.py:730] (val) algo topological_sort step 7100: {'topo': 0.58984375, 'topo_head': 0.984375, 'score': 0.787109375, 'examples_seen': 19780, 'step': 7100, 'algorithm': 'topological_sort'}
I0827 17:39:21.045993 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.743, current avg val score is 0.739, val scores are: mst_kruskal: 0.794, mst_prim: 0.883, naive_string_matcher: 0.725, optimal_bst: 0.910, quickselect: 0.221, quicksort: 0.826, segments_intersect: 0.577, strongly_connected_components: 0.730, task_scheduling: 0.933, topological_sort: 0.787
I0827 17:39:38.580793 134493687799808 run.py:695] Algo mst_kruskal step 7150 current loss 0.090398, current_train_items 157876.
I0827 17:39:38.590300 134493687799808 run.py:695] Algo mst_prim step 7150 current loss 0.256866, current_train_items 145864.
I0827 17:39:38.598676 134493687799808 run.py:695] Algo naive_string_matcher step 7150 current loss 1.081105, current_train_items 97850.
I0827 17:39:38.610527 134493687799808 run.py:695] Algo optimal_bst step 7150 current loss 0.000000, current_train_items 43584.
I0827 17:39:38.687224 134493687799808 run.py:695] Algo quickselect step 7150 current loss 2.275753, current_train_items 17271.
I0827 17:39:38.698091 134493687799808 run.py:695] Algo quicksort step 7150 current loss 12.922260, current_train_items 10867.
I0827 17:39:38.716153 134493687799808 run.py:695] Algo segments_intersect step 7150 current loss 0.685187, current_train_items 183072.
I0827 17:39:38.727453 134493687799808 run.py:695] Algo strongly_connected_components step 7150 current loss 0.131517, current_train_items 8367.
I0827 17:39:38.745939 134493687799808 run.py:695] Algo task_scheduling step 7150 current loss 0.000000, current_train_items 43584.
I0827 17:39:38.758392 134493687799808 run.py:695] Algo topological_sort step 7150 current loss 0.724800, current_train_items 19920.
I0827 17:39:38.879834 134493687799808 run.py:730] (val) algo mst_kruskal step 7150: {'in_mst': 0.6794871794871794, 'score': 0.6794871794871794, 'examples_seen': 157876, 'step': 7150, 'algorithm': 'mst_kruskal'}
I0827 17:39:38.901661 134493687799808 run.py:730] (val) algo mst_prim step 7150: {'pi': 0.869140625, 'score': 0.869140625, 'examples_seen': 145864, 'step': 7150, 'algorithm': 'mst_prim'}
I0827 17:39:39.647979 134493687799808 run.py:730] (val) algo naive_string_matcher step 7150: {'match': 0.75439453125, 'score': 0.75439453125, 'examples_seen': 97850, 'step': 7150, 'algorithm': 'naive_string_matcher'}
I0827 17:39:39.696076 134493687799808 run.py:730] (val) algo optimal_bst step 7150: {'root': 0.8885705017301038, 'score': 0.8885705017301038, 'examples_seen': 43584, 'step': 7150, 'algorithm': 'optimal_bst'}
I0827 17:39:43.373698 134493687799808 run.py:730] (val) algo quickselect step 7150: {'median': 0.182861328125, 'score': 0.182861328125, 'examples_seen': 17271, 'step': 7150, 'algorithm': 'quickselect'}
I0827 17:39:43.519953 134493687799808 run.py:730] (val) algo quicksort step 7150: {'pred': 0.8671875, 'score': 0.8671875, 'examples_seen': 10867, 'step': 7150, 'algorithm': 'quicksort'}
I0827 17:39:44.044818 134493687799808 run.py:730] (val) algo segments_intersect step 7150: {'intersect': 0.6863021989106314, 'score': 0.6863021989106314, 'examples_seen': 183072, 'step': 7150, 'algorithm': 'segments_intersect'}
I0827 17:39:44.150654 134493687799808 run.py:730] (val) algo strongly_connected_components step 7150: {'scc_id': 0.7802734375, 'score': 0.7802734375, 'examples_seen': 8367, 'step': 7150, 'algorithm': 'strongly_connected_components'}
I0827 17:39:44.164402 134493687799808 run.py:730] (val) algo task_scheduling step 7150: {'selected': 0.9090909090909091, 'score': 0.9090909090909091, 'examples_seen': 43584, 'step': 7150, 'algorithm': 'task_scheduling'}
I0827 17:39:44.217972 134493687799808 run.py:730] (val) algo topological_sort step 7150: {'topo': 0.6689453125, 'topo_head': 1.0, 'score': 0.83447265625, 'examples_seen': 19920, 'step': 7150, 'algorithm': 'topological_sort'}
I0827 17:39:44.218140 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.743, current avg val score is 0.745, val scores are: mst_kruskal: 0.679, mst_prim: 0.869, naive_string_matcher: 0.754, optimal_bst: 0.889, quickselect: 0.183, quicksort: 0.867, segments_intersect: 0.686, strongly_connected_components: 0.780, task_scheduling: 0.909, topological_sort: 0.834
I0827 17:40:01.530007 134493687799808 run.py:695] Algo mst_kruskal step 7200 current loss 0.084120, current_train_items 158975.
I0827 17:40:01.540307 134493687799808 run.py:695] Algo mst_prim step 7200 current loss 0.482216, current_train_items 146874.
I0827 17:40:01.549262 134493687799808 run.py:695] Algo naive_string_matcher step 7200 current loss 1.614341, current_train_items 98537.
I0827 17:40:01.560974 134493687799808 run.py:695] Algo optimal_bst step 7200 current loss 0.000000, current_train_items 43888.
I0827 17:40:01.638092 134493687799808 run.py:695] Algo quickselect step 7200 current loss 2.467039, current_train_items 17392.
I0827 17:40:01.648847 134493687799808 run.py:695] Algo quicksort step 7200 current loss 6.542783, current_train_items 10942.
I0827 17:40:01.670328 134493687799808 run.py:695] Algo segments_intersect step 7200 current loss 0.653124, current_train_items 184352.
I0827 17:40:01.694949 134493687799808 run.py:695] Algo strongly_connected_components step 7200 current loss 0.672340, current_train_items 8424.
I0827 17:40:01.710561 134493687799808 run.py:695] Algo task_scheduling step 7200 current loss 0.000000, current_train_items 43888.
I0827 17:40:01.722312 134493687799808 run.py:695] Algo topological_sort step 7200 current loss 2.298608, current_train_items 20061.
I0827 17:40:01.845143 134493687799808 run.py:730] (val) algo mst_kruskal step 7200: {'in_mst': 0.7657004830917874, 'score': 0.7657004830917874, 'examples_seen': 158975, 'step': 7200, 'algorithm': 'mst_kruskal'}
I0827 17:40:01.865866 134493687799808 run.py:730] (val) algo mst_prim step 7200: {'pi': 0.8349609375, 'score': 0.8349609375, 'examples_seen': 146874, 'step': 7200, 'algorithm': 'mst_prim'}
I0827 17:40:02.609865 134493687799808 run.py:730] (val) algo naive_string_matcher step 7200: {'match': 0.751708984375, 'score': 0.751708984375, 'examples_seen': 98537, 'step': 7200, 'algorithm': 'naive_string_matcher'}
I0827 17:40:02.657725 134493687799808 run.py:730] (val) algo optimal_bst step 7200: {'root': 0.8999783737024222, 'score': 0.8999783737024222, 'examples_seen': 43888, 'step': 7200, 'algorithm': 'optimal_bst'}
I0827 17:40:06.348605 134493687799808 run.py:730] (val) algo quickselect step 7200: {'median': 0.21630859375, 'score': 0.21630859375, 'examples_seen': 17392, 'step': 7200, 'algorithm': 'quickselect'}
I0827 17:40:06.493621 134493687799808 run.py:730] (val) algo quicksort step 7200: {'pred': 0.8505859375, 'score': 0.8505859375, 'examples_seen': 10942, 'step': 7200, 'algorithm': 'quicksort'}
I0827 17:40:06.985409 134493687799808 run.py:730] (val) algo segments_intersect step 7200: {'intersect': 0.6082924168030552, 'score': 0.6082924168030552, 'examples_seen': 184352, 'step': 7200, 'algorithm': 'segments_intersect'}
I0827 17:40:07.090312 134493687799808 run.py:730] (val) algo strongly_connected_components step 7200: {'scc_id': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 8424, 'step': 7200, 'algorithm': 'strongly_connected_components'}
I0827 17:40:07.104047 134493687799808 run.py:730] (val) algo task_scheduling step 7200: {'selected': 0.8991869918699186, 'score': 0.8991869918699186, 'examples_seen': 43888, 'step': 7200, 'algorithm': 'task_scheduling'}
I0827 17:40:07.157850 134493687799808 run.py:730] (val) algo topological_sort step 7200: {'topo': 0.6064453125, 'topo_head': 0.984375, 'score': 0.79541015625, 'examples_seen': 20061, 'step': 7200, 'algorithm': 'topological_sort'}
I0827 17:40:07.158014 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.745, current avg val score is 0.738, val scores are: mst_kruskal: 0.766, mst_prim: 0.835, naive_string_matcher: 0.752, optimal_bst: 0.900, quickselect: 0.216, quicksort: 0.851, segments_intersect: 0.608, strongly_connected_components: 0.753, task_scheduling: 0.899, topological_sort: 0.795
I0827 17:40:24.564542 134493687799808 run.py:695] Algo mst_kruskal step 7250 current loss 0.154984, current_train_items 160000.
I0827 17:40:24.582873 134493687799808 run.py:695] Algo mst_prim step 7250 current loss 0.167381, current_train_items 147880.
I0827 17:40:24.598481 134493687799808 run.py:695] Algo naive_string_matcher step 7250 current loss 1.204510, current_train_items 99216.
I0827 17:40:24.615554 134493687799808 run.py:695] Algo optimal_bst step 7250 current loss 0.000000, current_train_items 44192.
I0827 17:40:24.700090 134493687799808 run.py:695] Algo quickselect step 7250 current loss 2.378355, current_train_items 17505.
I0827 17:40:24.718127 134493687799808 run.py:695] Algo quicksort step 7250 current loss 1.152046, current_train_items 11016.
I0827 17:40:24.741055 134493687799808 run.py:695] Algo segments_intersect step 7250 current loss 0.620917, current_train_items 185632.
I0827 17:40:24.757645 134493687799808 run.py:695] Algo strongly_connected_components step 7250 current loss 0.000000, current_train_items 8483.
I0827 17:40:24.776204 134493687799808 run.py:695] Algo task_scheduling step 7250 current loss 0.000000, current_train_items 44192.
I0827 17:40:24.796363 134493687799808 run.py:695] Algo topological_sort step 7250 current loss 1.522070, current_train_items 20200.
I0827 17:40:24.943374 134493687799808 run.py:730] (val) algo mst_kruskal step 7250: {'in_mst': 0.4643150123051682, 'score': 0.4643150123051682, 'examples_seen': 160000, 'step': 7250, 'algorithm': 'mst_kruskal'}
I0827 17:40:24.967078 134493687799808 run.py:730] (val) algo mst_prim step 7250: {'pi': 0.849609375, 'score': 0.849609375, 'examples_seen': 147880, 'step': 7250, 'algorithm': 'mst_prim'}
I0827 17:40:25.839768 134493687799808 run.py:730] (val) algo naive_string_matcher step 7250: {'match': 0.73828125, 'score': 0.73828125, 'examples_seen': 99216, 'step': 7250, 'algorithm': 'naive_string_matcher'}
I0827 17:40:25.887329 134493687799808 run.py:730] (val) algo optimal_bst step 7250: {'root': 0.9006271626297578, 'score': 0.9006271626297578, 'examples_seen': 44192, 'step': 7250, 'algorithm': 'optimal_bst'}
I0827 17:40:29.564724 134493687799808 run.py:730] (val) algo quickselect step 7250: {'median': 0.207763671875, 'score': 0.207763671875, 'examples_seen': 17505, 'step': 7250, 'algorithm': 'quickselect'}
I0827 17:40:29.710905 134493687799808 run.py:730] (val) algo quicksort step 7250: {'pred': 0.927734375, 'score': 0.927734375, 'examples_seen': 11016, 'step': 7250, 'algorithm': 'quicksort'}
I0827 17:40:30.201052 134493687799808 run.py:730] (val) algo segments_intersect step 7250: {'intersect': 0.6900584795321638, 'score': 0.6900584795321638, 'examples_seen': 185632, 'step': 7250, 'algorithm': 'segments_intersect'}
I0827 17:40:30.306412 134493687799808 run.py:730] (val) algo strongly_connected_components step 7250: {'scc_id': 0.771484375, 'score': 0.771484375, 'examples_seen': 8483, 'step': 7250, 'algorithm': 'strongly_connected_components'}
I0827 17:40:30.320096 134493687799808 run.py:730] (val) algo task_scheduling step 7250: {'selected': 0.9341500765696784, 'score': 0.9341500765696784, 'examples_seen': 44192, 'step': 7250, 'algorithm': 'task_scheduling'}
I0827 17:40:30.374329 134493687799808 run.py:730] (val) algo topological_sort step 7250: {'topo': 0.6279296875, 'topo_head': 0.96875, 'score': 0.79833984375, 'examples_seen': 20200, 'step': 7250, 'algorithm': 'topological_sort'}
I0827 17:40:30.374544 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.745, current avg val score is 0.728, val scores are: mst_kruskal: 0.464, mst_prim: 0.850, naive_string_matcher: 0.738, optimal_bst: 0.901, quickselect: 0.208, quicksort: 0.928, segments_intersect: 0.690, strongly_connected_components: 0.771, task_scheduling: 0.934, topological_sort: 0.798
I0827 17:40:47.969495 134493687799808 run.py:695] Algo mst_kruskal step 7300 current loss 0.099407, current_train_items 161073.
I0827 17:40:47.988426 134493687799808 run.py:695] Algo mst_prim step 7300 current loss 0.464611, current_train_items 148942.
I0827 17:40:48.004265 134493687799808 run.py:695] Algo naive_string_matcher step 7300 current loss 1.797750, current_train_items 99905.
I0827 17:40:48.022135 134493687799808 run.py:695] Algo optimal_bst step 7300 current loss 0.000000, current_train_items 44496.
I0827 17:40:48.103566 134493687799808 run.py:695] Algo quickselect step 7300 current loss 1.652357, current_train_items 17621.
I0827 17:40:48.123424 134493687799808 run.py:695] Algo quicksort step 7300 current loss 0.000000, current_train_items 11091.
I0827 17:40:48.145411 134493687799808 run.py:695] Algo segments_intersect step 7300 current loss 0.697476, current_train_items 186912.
I0827 17:40:48.167886 134493687799808 run.py:695] Algo strongly_connected_components step 7300 current loss 1.551695, current_train_items 8543.
I0827 17:40:48.190722 134493687799808 run.py:695] Algo task_scheduling step 7300 current loss 0.000000, current_train_items 44496.
I0827 17:40:48.210089 134493687799808 run.py:695] Algo topological_sort step 7300 current loss 0.979182, current_train_items 20339.
I0827 17:40:48.376814 134493687799808 run.py:730] (val) algo mst_kruskal step 7300: {'in_mst': 0.7291268323773104, 'score': 0.7291268323773104, 'examples_seen': 161073, 'step': 7300, 'algorithm': 'mst_kruskal'}
I0827 17:40:48.403867 134493687799808 run.py:730] (val) algo mst_prim step 7300: {'pi': 0.861328125, 'score': 0.861328125, 'examples_seen': 148942, 'step': 7300, 'algorithm': 'mst_prim'}
I0827 17:40:49.421479 134493687799808 run.py:730] (val) algo naive_string_matcher step 7300: {'match': 0.753173828125, 'score': 0.753173828125, 'examples_seen': 99905, 'step': 7300, 'algorithm': 'naive_string_matcher'}
I0827 17:40:49.469171 134493687799808 run.py:730] (val) algo optimal_bst step 7300: {'root': 0.891976643598616, 'score': 0.891976643598616, 'examples_seen': 44496, 'step': 7300, 'algorithm': 'optimal_bst'}
I0827 17:40:53.155416 134493687799808 run.py:730] (val) algo quickselect step 7300: {'median': 0.222412109375, 'score': 0.222412109375, 'examples_seen': 17621, 'step': 7300, 'algorithm': 'quickselect'}
I0827 17:40:53.300344 134493687799808 run.py:730] (val) algo quicksort step 7300: {'pred': 0.8564453125, 'score': 0.8564453125, 'examples_seen': 11091, 'step': 7300, 'algorithm': 'quicksort'}
I0827 17:40:53.816024 134493687799808 run.py:730] (val) algo segments_intersect step 7300: {'intersect': 0.559627690517743, 'score': 0.559627690517743, 'examples_seen': 186912, 'step': 7300, 'algorithm': 'segments_intersect'}
I0827 17:40:53.921428 134493687799808 run.py:730] (val) algo strongly_connected_components step 7300: {'scc_id': 0.7548828125, 'score': 0.7548828125, 'examples_seen': 8543, 'step': 7300, 'algorithm': 'strongly_connected_components'}
I0827 17:40:53.935088 134493687799808 run.py:730] (val) algo task_scheduling step 7300: {'selected': 0.8786610878661087, 'score': 0.8786610878661087, 'examples_seen': 44496, 'step': 7300, 'algorithm': 'task_scheduling'}
I0827 17:40:53.988534 134493687799808 run.py:730] (val) algo topological_sort step 7300: {'topo': 0.6298828125, 'topo_head': 0.96875, 'score': 0.79931640625, 'examples_seen': 20339, 'step': 7300, 'algorithm': 'topological_sort'}
I0827 17:40:53.988748 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.745, current avg val score is 0.731, val scores are: mst_kruskal: 0.729, mst_prim: 0.861, naive_string_matcher: 0.753, optimal_bst: 0.892, quickselect: 0.222, quicksort: 0.856, segments_intersect: 0.560, strongly_connected_components: 0.755, task_scheduling: 0.879, topological_sort: 0.799
I0827 17:41:11.128430 134493687799808 run.py:695] Algo mst_kruskal step 7350 current loss 0.072907, current_train_items 162193.
I0827 17:41:11.139722 134493687799808 run.py:695] Algo mst_prim step 7350 current loss 0.431776, current_train_items 149939.
I0827 17:41:11.148487 134493687799808 run.py:695] Algo naive_string_matcher step 7350 current loss 1.505452, current_train_items 100580.
I0827 17:41:11.160255 134493687799808 run.py:695] Algo optimal_bst step 7350 current loss 0.000000, current_train_items 44800.
I0827 17:41:11.241566 134493687799808 run.py:695] Algo quickselect step 7350 current loss 2.273072, current_train_items 17750.
I0827 17:41:11.260073 134493687799808 run.py:695] Algo quicksort step 7350 current loss 15.229461, current_train_items 11169.
I0827 17:41:11.277763 134493687799808 run.py:695] Algo segments_intersect step 7350 current loss 0.592250, current_train_items 188192.
I0827 17:41:11.291294 134493687799808 run.py:695] Algo strongly_connected_components step 7350 current loss 1.126277, current_train_items 8600.
I0827 17:41:11.311131 134493687799808 run.py:695] Algo task_scheduling step 7350 current loss 0.000000, current_train_items 44800.
I0827 17:41:11.329824 134493687799808 run.py:695] Algo topological_sort step 7350 current loss 1.247146, current_train_items 20480.
I0827 17:41:11.508182 134493687799808 run.py:730] (val) algo mst_kruskal step 7350: {'in_mst': 0.7820965842167256, 'score': 0.7820965842167256, 'examples_seen': 162193, 'step': 7350, 'algorithm': 'mst_kruskal'}
I0827 17:41:11.531572 134493687799808 run.py:730] (val) algo mst_prim step 7350: {'pi': 0.82421875, 'score': 0.82421875, 'examples_seen': 149939, 'step': 7350, 'algorithm': 'mst_prim'}
I0827 17:41:12.710064 134493687799808 run.py:730] (val) algo naive_string_matcher step 7350: {'match': 0.751220703125, 'score': 0.751220703125, 'examples_seen': 100580, 'step': 7350, 'algorithm': 'naive_string_matcher'}
I0827 17:41:12.760020 134493687799808 run.py:730] (val) algo optimal_bst step 7350: {'root': 0.9051146193771626, 'score': 0.9051146193771626, 'examples_seen': 44800, 'step': 7350, 'algorithm': 'optimal_bst'}
I0827 17:41:16.439300 134493687799808 run.py:730] (val) algo quickselect step 7350: {'median': 0.21142578125, 'score': 0.21142578125, 'examples_seen': 17750, 'step': 7350, 'algorithm': 'quickselect'}
I0827 17:41:16.583983 134493687799808 run.py:730] (val) algo quicksort step 7350: {'pred': 0.9228515625, 'score': 0.9228515625, 'examples_seen': 11169, 'step': 7350, 'algorithm': 'quicksort'}
I0827 17:41:17.074925 134493687799808 run.py:730] (val) algo segments_intersect step 7350: {'intersect': 0.6921348314606742, 'score': 0.6921348314606742, 'examples_seen': 188192, 'step': 7350, 'algorithm': 'segments_intersect'}
I0827 17:41:17.179765 134493687799808 run.py:730] (val) algo strongly_connected_components step 7350: {'scc_id': 0.765625, 'score': 0.765625, 'examples_seen': 8600, 'step': 7350, 'algorithm': 'strongly_connected_components'}
I0827 17:41:17.193418 134493687799808 run.py:730] (val) algo task_scheduling step 7350: {'selected': 0.9310344827586206, 'score': 0.9310344827586206, 'examples_seen': 44800, 'step': 7350, 'algorithm': 'task_scheduling'}
I0827 17:41:17.248036 134493687799808 run.py:730] (val) algo topological_sort step 7350: {'topo': 0.634765625, 'topo_head': 1.0, 'score': 0.8173828125, 'examples_seen': 20480, 'step': 7350, 'algorithm': 'topological_sort'}
I0827 17:41:17.248199 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.745, current avg val score is 0.760, val scores are: mst_kruskal: 0.782, mst_prim: 0.824, naive_string_matcher: 0.751, optimal_bst: 0.905, quickselect: 0.211, quicksort: 0.923, segments_intersect: 0.692, strongly_connected_components: 0.766, task_scheduling: 0.931, topological_sort: 0.817
I0827 17:41:34.521053 134493687799808 run.py:695] Algo mst_kruskal step 7400 current loss 0.087613, current_train_items 163336.
I0827 17:41:34.530356 134493687799808 run.py:695] Algo mst_prim step 7400 current loss 0.436788, current_train_items 150967.
I0827 17:41:34.539593 134493687799808 run.py:695] Algo naive_string_matcher step 7400 current loss 1.187421, current_train_items 101262.
I0827 17:41:34.551107 134493687799808 run.py:695] Algo optimal_bst step 7400 current loss 0.000000, current_train_items 45104.
I0827 17:41:34.630494 134493687799808 run.py:695] Algo quickselect step 7400 current loss 2.472775, current_train_items 17862.
I0827 17:41:34.642304 134493687799808 run.py:695] Algo quicksort step 7400 current loss 2.419678, current_train_items 11244.
I0827 17:41:34.660608 134493687799808 run.py:695] Algo segments_intersect step 7400 current loss 0.661241, current_train_items 189472.
I0827 17:41:34.672612 134493687799808 run.py:695] Algo strongly_connected_components step 7400 current loss 0.000000, current_train_items 8659.
I0827 17:41:34.690742 134493687799808 run.py:695] Algo task_scheduling step 7400 current loss 0.000000, current_train_items 45104.
I0827 17:41:34.703329 134493687799808 run.py:695] Algo topological_sort step 7400 current loss 0.736363, current_train_items 20620.
I0827 17:41:34.818540 134493687799808 run.py:730] (val) algo mst_kruskal step 7400: {'in_mst': 0.7619047619047618, 'score': 0.7619047619047618, 'examples_seen': 163336, 'step': 7400, 'algorithm': 'mst_kruskal'}
I0827 17:41:34.839876 134493687799808 run.py:730] (val) algo mst_prim step 7400: {'pi': 0.837890625, 'score': 0.837890625, 'examples_seen': 150967, 'step': 7400, 'algorithm': 'mst_prim'}
I0827 17:41:35.758257 134493687799808 run.py:730] (val) algo naive_string_matcher step 7400: {'match': 0.753662109375, 'score': 0.753662109375, 'examples_seen': 101262, 'step': 7400, 'algorithm': 'naive_string_matcher'}
I0827 17:41:35.808296 134493687799808 run.py:730] (val) algo optimal_bst step 7400: {'root': 0.8976535467128027, 'score': 0.8976535467128027, 'examples_seen': 45104, 'step': 7400, 'algorithm': 'optimal_bst'}
I0827 17:41:39.496777 134493687799808 run.py:730] (val) algo quickselect step 7400: {'median': 0.218994140625, 'score': 0.218994140625, 'examples_seen': 17862, 'step': 7400, 'algorithm': 'quickselect'}
I0827 17:41:39.642603 134493687799808 run.py:730] (val) algo quicksort step 7400: {'pred': 0.962890625, 'score': 0.962890625, 'examples_seen': 11244, 'step': 7400, 'algorithm': 'quicksort'}
I0827 17:41:40.129095 134493687799808 run.py:730] (val) algo segments_intersect step 7400: {'intersect': 0.6725132702515578, 'score': 0.6725132702515578, 'examples_seen': 189472, 'step': 7400, 'algorithm': 'segments_intersect'}
I0827 17:41:40.233990 134493687799808 run.py:730] (val) algo strongly_connected_components step 7400: {'scc_id': 0.7587890625, 'score': 0.7587890625, 'examples_seen': 8659, 'step': 7400, 'algorithm': 'strongly_connected_components'}
I0827 17:41:40.247262 134493687799808 run.py:730] (val) algo task_scheduling step 7400: {'selected': 0.9005059021922428, 'score': 0.9005059021922428, 'examples_seen': 45104, 'step': 7400, 'algorithm': 'task_scheduling'}
I0827 17:41:40.301509 134493687799808 run.py:730] (val) algo topological_sort step 7400: {'topo': 0.6748046875, 'topo_head': 0.96875, 'score': 0.82177734375, 'examples_seen': 20620, 'step': 7400, 'algorithm': 'topological_sort'}
I0827 17:41:40.301701 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.760, current avg val score is 0.759, val scores are: mst_kruskal: 0.762, mst_prim: 0.838, naive_string_matcher: 0.754, optimal_bst: 0.898, quickselect: 0.219, quicksort: 0.963, segments_intersect: 0.673, strongly_connected_components: 0.759, task_scheduling: 0.901, topological_sort: 0.822
I0827 17:41:57.438584 134493687799808 run.py:695] Algo mst_kruskal step 7450 current loss 0.118693, current_train_items 164451.
I0827 17:41:57.449292 134493687799808 run.py:695] Algo mst_prim step 7450 current loss 0.399982, current_train_items 151994.
I0827 17:41:57.458488 134493687799808 run.py:695] Algo naive_string_matcher step 7450 current loss 1.007464, current_train_items 101933.
I0827 17:41:57.470975 134493687799808 run.py:695] Algo optimal_bst step 7450 current loss 0.000000, current_train_items 45408.
I0827 17:41:57.550221 134493687799808 run.py:695] Algo quickselect step 7450 current loss 1.825627, current_train_items 17985.
I0827 17:41:57.560963 134493687799808 run.py:695] Algo quicksort step 7450 current loss 11.160647, current_train_items 11319.
I0827 17:41:57.579319 134493687799808 run.py:695] Algo segments_intersect step 7450 current loss 0.626253, current_train_items 190752.
I0827 17:41:57.591102 134493687799808 run.py:695] Algo strongly_connected_components step 7450 current loss 2.851948, current_train_items 8718.
I0827 17:41:57.609296 134493687799808 run.py:695] Algo task_scheduling step 7450 current loss 0.000000, current_train_items 45408.
I0827 17:41:57.621746 134493687799808 run.py:695] Algo topological_sort step 7450 current loss 1.413968, current_train_items 20759.
I0827 17:41:57.739845 134493687799808 run.py:730] (val) algo mst_kruskal step 7450: {'in_mst': 0.8498614958448754, 'score': 0.8498614958448754, 'examples_seen': 164451, 'step': 7450, 'algorithm': 'mst_kruskal'}
I0827 17:41:57.760921 134493687799808 run.py:730] (val) algo mst_prim step 7450: {'pi': 0.8525390625, 'score': 0.8525390625, 'examples_seen': 151994, 'step': 7450, 'algorithm': 'mst_prim'}
I0827 17:41:58.506796 134493687799808 run.py:730] (val) algo naive_string_matcher step 7450: {'match': 0.673828125, 'score': 0.673828125, 'examples_seen': 101933, 'step': 7450, 'algorithm': 'naive_string_matcher'}
I0827 17:41:58.554968 134493687799808 run.py:730] (val) algo optimal_bst step 7450: {'root': 0.9010056228373703, 'score': 0.9010056228373703, 'examples_seen': 45408, 'step': 7450, 'algorithm': 'optimal_bst'}
I0827 17:42:02.254021 134493687799808 run.py:730] (val) algo quickselect step 7450: {'median': 0.220703125, 'score': 0.220703125, 'examples_seen': 17985, 'step': 7450, 'algorithm': 'quickselect'}
I0827 17:42:02.399817 134493687799808 run.py:730] (val) algo quicksort step 7450: {'pred': 0.9638671875, 'score': 0.9638671875, 'examples_seen': 11319, 'step': 7450, 'algorithm': 'quicksort'}
I0827 17:42:02.906800 134493687799808 run.py:730] (val) algo segments_intersect step 7450: {'intersect': 0.6883817427385892, 'score': 0.6883817427385892, 'examples_seen': 190752, 'step': 7450, 'algorithm': 'segments_intersect'}
I0827 17:42:03.012845 134493687799808 run.py:730] (val) algo strongly_connected_components step 7450: {'scc_id': 0.7646484375, 'score': 0.7646484375, 'examples_seen': 8718, 'step': 7450, 'algorithm': 'strongly_connected_components'}
I0827 17:42:03.026167 134493687799808 run.py:730] (val) algo task_scheduling step 7450: {'selected': 0.9098497495826376, 'score': 0.9098497495826376, 'examples_seen': 45408, 'step': 7450, 'algorithm': 'task_scheduling'}
I0827 17:42:03.080135 134493687799808 run.py:730] (val) algo topological_sort step 7450: {'topo': 0.6630859375, 'topo_head': 1.0, 'score': 0.83154296875, 'examples_seen': 20759, 'step': 7450, 'algorithm': 'topological_sort'}
I0827 17:42:03.080337 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.760, current avg val score is 0.766, val scores are: mst_kruskal: 0.850, mst_prim: 0.853, naive_string_matcher: 0.674, optimal_bst: 0.901, quickselect: 0.221, quicksort: 0.964, segments_intersect: 0.688, strongly_connected_components: 0.765, task_scheduling: 0.910, topological_sort: 0.832
I0827 17:42:19.961747 134493687799808 run.py:695] Algo mst_kruskal step 7500 current loss 0.107287, current_train_items 165537.
I0827 17:42:19.972378 134493687799808 run.py:695] Algo mst_prim step 7500 current loss 0.466420, current_train_items 152999.
I0827 17:42:19.981106 134493687799808 run.py:695] Algo naive_string_matcher step 7500 current loss 1.928094, current_train_items 102600.
I0827 17:42:19.993074 134493687799808 run.py:695] Algo optimal_bst step 7500 current loss 0.000000, current_train_items 45712.
I0827 17:42:20.071614 134493687799808 run.py:695] Algo quickselect step 7500 current loss 0.000000, current_train_items 18102.
I0827 17:42:20.082377 134493687799808 run.py:695] Algo quicksort step 7500 current loss 3.134957, current_train_items 11393.
I0827 17:42:20.100568 134493687799808 run.py:695] Algo segments_intersect step 7500 current loss 0.635076, current_train_items 192032.
I0827 17:42:20.112423 134493687799808 run.py:695] Algo strongly_connected_components step 7500 current loss 2.006397, current_train_items 8777.
I0827 17:42:20.129981 134493687799808 run.py:695] Algo task_scheduling step 7500 current loss 0.000000, current_train_items 45712.
I0827 17:42:20.140799 134493687799808 run.py:695] Algo topological_sort step 7500 current loss 0.923465, current_train_items 20897.
I0827 17:42:20.259198 134493687799808 run.py:730] (val) algo mst_kruskal step 7500: {'in_mst': 0.7028360049321825, 'score': 0.7028360049321825, 'examples_seen': 165537, 'step': 7500, 'algorithm': 'mst_kruskal'}
I0827 17:42:20.280683 134493687799808 run.py:730] (val) algo mst_prim step 7500: {'pi': 0.818359375, 'score': 0.818359375, 'examples_seen': 152999, 'step': 7500, 'algorithm': 'mst_prim'}
I0827 17:42:21.028249 134493687799808 run.py:730] (val) algo naive_string_matcher step 7500: {'match': 0.759765625, 'score': 0.759765625, 'examples_seen': 102600, 'step': 7500, 'algorithm': 'naive_string_matcher'}
I0827 17:42:21.076070 134493687799808 run.py:730] (val) algo optimal_bst step 7500: {'root': 0.8981942041522492, 'score': 0.8981942041522492, 'examples_seen': 45712, 'step': 7500, 'algorithm': 'optimal_bst'}
I0827 17:42:24.800381 134493687799808 run.py:730] (val) algo quickselect step 7500: {'median': 0.185302734375, 'score': 0.185302734375, 'examples_seen': 18102, 'step': 7500, 'algorithm': 'quickselect'}
I0827 17:42:24.951981 134493687799808 run.py:730] (val) algo quicksort step 7500: {'pred': 0.9296875, 'score': 0.9296875, 'examples_seen': 11393, 'step': 7500, 'algorithm': 'quicksort'}
I0827 17:42:25.568960 134493687799808 run.py:730] (val) algo segments_intersect step 7500: {'intersect': 0.6429101707498144, 'score': 0.6429101707498144, 'examples_seen': 192032, 'step': 7500, 'algorithm': 'segments_intersect'}
I0827 17:42:25.674188 134493687799808 run.py:730] (val) algo strongly_connected_components step 7500: {'scc_id': 0.7470703125, 'score': 0.7470703125, 'examples_seen': 8777, 'step': 7500, 'algorithm': 'strongly_connected_components'}
I0827 17:42:25.687641 134493687799808 run.py:730] (val) algo task_scheduling step 7500: {'selected': 0.910299003322259, 'score': 0.910299003322259, 'examples_seen': 45712, 'step': 7500, 'algorithm': 'task_scheduling'}
I0827 17:42:25.742323 134493687799808 run.py:730] (val) algo topological_sort step 7500: {'topo': 0.6689453125, 'topo_head': 0.984375, 'score': 0.82666015625, 'examples_seen': 20897, 'step': 7500, 'algorithm': 'topological_sort'}
I0827 17:42:25.742536 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.742, val scores are: mst_kruskal: 0.703, mst_prim: 0.818, naive_string_matcher: 0.760, optimal_bst: 0.898, quickselect: 0.185, quicksort: 0.930, segments_intersect: 0.643, strongly_connected_components: 0.747, task_scheduling: 0.910, topological_sort: 0.827
I0827 17:42:43.031061 134493687799808 run.py:695] Algo mst_kruskal step 7550 current loss 0.084527, current_train_items 166626.
I0827 17:42:43.041115 134493687799808 run.py:695] Algo mst_prim step 7550 current loss 0.185020, current_train_items 154012.
I0827 17:42:43.049710 134493687799808 run.py:695] Algo naive_string_matcher step 7550 current loss 1.395684, current_train_items 103287.
I0827 17:42:43.062022 134493687799808 run.py:695] Algo optimal_bst step 7550 current loss 0.000000, current_train_items 46016.
I0827 17:42:43.141734 134493687799808 run.py:695] Algo quickselect step 7550 current loss 4.431656, current_train_items 18222.
I0827 17:42:43.151857 134493687799808 run.py:695] Algo quicksort step 7550 current loss 0.000000, current_train_items 11468.
I0827 17:42:43.169409 134493687799808 run.py:695] Algo segments_intersect step 7550 current loss 0.609892, current_train_items 193312.
I0827 17:42:43.180170 134493687799808 run.py:695] Algo strongly_connected_components step 7550 current loss 0.941084, current_train_items 8834.
I0827 17:42:43.198851 134493687799808 run.py:695] Algo task_scheduling step 7550 current loss 0.000000, current_train_items 46016.
I0827 17:42:43.210347 134493687799808 run.py:695] Algo topological_sort step 7550 current loss 1.339653, current_train_items 21036.
I0827 17:42:43.328295 134493687799808 run.py:730] (val) algo mst_kruskal step 7550: {'in_mst': 0.8226281673541544, 'score': 0.8226281673541544, 'examples_seen': 166626, 'step': 7550, 'algorithm': 'mst_kruskal'}
I0827 17:42:43.349605 134493687799808 run.py:730] (val) algo mst_prim step 7550: {'pi': 0.8388671875, 'score': 0.8388671875, 'examples_seen': 154012, 'step': 7550, 'algorithm': 'mst_prim'}
I0827 17:42:44.095613 134493687799808 run.py:730] (val) algo naive_string_matcher step 7550: {'match': 0.734375, 'score': 0.734375, 'examples_seen': 103287, 'step': 7550, 'algorithm': 'naive_string_matcher'}
I0827 17:42:44.143708 134493687799808 run.py:730] (val) algo optimal_bst step 7550: {'root': 0.8980860726643599, 'score': 0.8980860726643599, 'examples_seen': 46016, 'step': 7550, 'algorithm': 'optimal_bst'}
I0827 17:42:47.864888 134493687799808 run.py:730] (val) algo quickselect step 7550: {'median': 0.21484375, 'score': 0.21484375, 'examples_seen': 18222, 'step': 7550, 'algorithm': 'quickselect'}
I0827 17:42:48.020340 134493687799808 run.py:730] (val) algo quicksort step 7550: {'pred': 0.8583984375, 'score': 0.8583984375, 'examples_seen': 11468, 'step': 7550, 'algorithm': 'quicksort'}
I0827 17:42:48.929900 134493687799808 run.py:730] (val) algo segments_intersect step 7550: {'intersect': 0.6938037087290819, 'score': 0.6938037087290819, 'examples_seen': 193312, 'step': 7550, 'algorithm': 'segments_intersect'}
I0827 17:42:49.041707 134493687799808 run.py:730] (val) algo strongly_connected_components step 7550: {'scc_id': 0.72265625, 'score': 0.72265625, 'examples_seen': 8834, 'step': 7550, 'algorithm': 'strongly_connected_components'}
I0827 17:42:49.065802 134493687799808 run.py:730] (val) algo task_scheduling step 7550: {'selected': 0.9042735042735043, 'score': 0.9042735042735043, 'examples_seen': 46016, 'step': 7550, 'algorithm': 'task_scheduling'}
I0827 17:42:49.119939 134493687799808 run.py:730] (val) algo topological_sort step 7550: {'topo': 0.6552734375, 'topo_head': 0.984375, 'score': 0.81982421875, 'examples_seen': 21036, 'step': 7550, 'algorithm': 'topological_sort'}
I0827 17:42:49.120231 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.751, val scores are: mst_kruskal: 0.823, mst_prim: 0.839, naive_string_matcher: 0.734, optimal_bst: 0.898, quickselect: 0.215, quicksort: 0.858, segments_intersect: 0.694, strongly_connected_components: 0.723, task_scheduling: 0.904, topological_sort: 0.820
I0827 17:43:06.310052 134493687799808 run.py:695] Algo mst_kruskal step 7600 current loss 0.089968, current_train_items 167761.
I0827 17:43:06.320412 134493687799808 run.py:695] Algo mst_prim step 7600 current loss 0.367525, current_train_items 155029.
I0827 17:43:06.329409 134493687799808 run.py:695] Algo naive_string_matcher step 7600 current loss 1.629267, current_train_items 103980.
I0827 17:43:06.342291 134493687799808 run.py:695] Algo optimal_bst step 7600 current loss 0.000000, current_train_items 46320.
I0827 17:43:06.422105 134493687799808 run.py:695] Algo quickselect step 7600 current loss 2.033766, current_train_items 18344.
I0827 17:43:06.433322 134493687799808 run.py:695] Algo quicksort step 7600 current loss 0.181061, current_train_items 11544.
I0827 17:43:06.450518 134493687799808 run.py:695] Algo segments_intersect step 7600 current loss 0.649882, current_train_items 194592.
I0827 17:43:06.461105 134493687799808 run.py:695] Algo strongly_connected_components step 7600 current loss 1.344406, current_train_items 8894.
I0827 17:43:06.479088 134493687799808 run.py:695] Algo task_scheduling step 7600 current loss 0.000000, current_train_items 46320.
I0827 17:43:06.491408 134493687799808 run.py:695] Algo topological_sort step 7600 current loss 1.032834, current_train_items 21175.
I0827 17:43:06.612771 134493687799808 run.py:730] (val) algo mst_kruskal step 7600: {'in_mst': 0.7590643274853801, 'score': 0.7590643274853801, 'examples_seen': 167761, 'step': 7600, 'algorithm': 'mst_kruskal'}
I0827 17:43:06.634134 134493687799808 run.py:730] (val) algo mst_prim step 7600: {'pi': 0.8271484375, 'score': 0.8271484375, 'examples_seen': 155029, 'step': 7600, 'algorithm': 'mst_prim'}
I0827 17:43:07.382404 134493687799808 run.py:730] (val) algo naive_string_matcher step 7600: {'match': 0.768798828125, 'score': 0.768798828125, 'examples_seen': 103980, 'step': 7600, 'algorithm': 'naive_string_matcher'}
I0827 17:43:07.430914 134493687799808 run.py:730] (val) algo optimal_bst step 7600: {'root': 0.8868403979238755, 'score': 0.8868403979238755, 'examples_seen': 46320, 'step': 7600, 'algorithm': 'optimal_bst'}
I0827 17:43:11.135606 134493687799808 run.py:730] (val) algo quickselect step 7600: {'median': 0.220703125, 'score': 0.220703125, 'examples_seen': 18344, 'step': 7600, 'algorithm': 'quickselect'}
I0827 17:43:11.281074 134493687799808 run.py:730] (val) algo quicksort step 7600: {'pred': 0.953125, 'score': 0.953125, 'examples_seen': 11544, 'step': 7600, 'algorithm': 'quicksort'}
I0827 17:43:12.041841 134493687799808 run.py:730] (val) algo segments_intersect step 7600: {'intersect': 0.5720022948938611, 'score': 0.5720022948938611, 'examples_seen': 194592, 'step': 7600, 'algorithm': 'segments_intersect'}
I0827 17:43:12.150368 134493687799808 run.py:730] (val) algo strongly_connected_components step 7600: {'scc_id': 0.71484375, 'score': 0.71484375, 'examples_seen': 8894, 'step': 7600, 'algorithm': 'strongly_connected_components'}
I0827 17:43:12.173527 134493687799808 run.py:730] (val) algo task_scheduling step 7600: {'selected': 0.9370078740157479, 'score': 0.9370078740157479, 'examples_seen': 46320, 'step': 7600, 'algorithm': 'task_scheduling'}
I0827 17:43:12.227894 134493687799808 run.py:730] (val) algo topological_sort step 7600: {'topo': 0.63671875, 'topo_head': 0.984375, 'score': 0.810546875, 'examples_seen': 21175, 'step': 7600, 'algorithm': 'topological_sort'}
I0827 17:43:12.228132 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.745, val scores are: mst_kruskal: 0.759, mst_prim: 0.827, naive_string_matcher: 0.769, optimal_bst: 0.887, quickselect: 0.221, quicksort: 0.953, segments_intersect: 0.572, strongly_connected_components: 0.715, task_scheduling: 0.937, topological_sort: 0.811
I0827 17:43:30.354863 134493687799808 run.py:695] Algo mst_kruskal step 7650 current loss 0.081440, current_train_items 168890.
I0827 17:43:30.365063 134493687799808 run.py:695] Algo mst_prim step 7650 current loss 0.465471, current_train_items 156065.
I0827 17:43:30.373681 134493687799808 run.py:695] Algo naive_string_matcher step 7650 current loss 1.300715, current_train_items 104665.
I0827 17:43:30.385484 134493687799808 run.py:695] Algo optimal_bst step 7650 current loss 0.000000, current_train_items 46624.
I0827 17:43:30.462297 134493687799808 run.py:695] Algo quickselect step 7650 current loss 1.847032, current_train_items 18461.
I0827 17:43:30.472804 134493687799808 run.py:695] Algo quicksort step 7650 current loss 19.321775, current_train_items 11619.
I0827 17:43:30.495986 134493687799808 run.py:695] Algo segments_intersect step 7650 current loss 0.712593, current_train_items 195872.
I0827 17:43:30.528640 134493687799808 run.py:695] Algo strongly_connected_components step 7650 current loss 1.064876, current_train_items 8952.
I0827 17:43:30.550234 134493687799808 run.py:695] Algo task_scheduling step 7650 current loss 0.000000, current_train_items 46624.
I0827 17:43:30.569978 134493687799808 run.py:695] Algo topological_sort step 7650 current loss 1.599625, current_train_items 21314.
I0827 17:43:30.684194 134493687799808 run.py:730] (val) algo mst_kruskal step 7650: {'in_mst': 0.7835382148583645, 'score': 0.7835382148583645, 'examples_seen': 168890, 'step': 7650, 'algorithm': 'mst_kruskal'}
I0827 17:43:30.705455 134493687799808 run.py:730] (val) algo mst_prim step 7650: {'pi': 0.859375, 'score': 0.859375, 'examples_seen': 156065, 'step': 7650, 'algorithm': 'mst_prim'}
I0827 17:43:31.447560 134493687799808 run.py:730] (val) algo naive_string_matcher step 7650: {'match': 0.767333984375, 'score': 0.767333984375, 'examples_seen': 104665, 'step': 7650, 'algorithm': 'naive_string_matcher'}
I0827 17:43:31.495576 134493687799808 run.py:730] (val) algo optimal_bst step 7650: {'root': 0.8972210207612457, 'score': 0.8972210207612457, 'examples_seen': 46624, 'step': 7650, 'algorithm': 'optimal_bst'}
I0827 17:43:35.173020 134493687799808 run.py:730] (val) algo quickselect step 7650: {'median': 0.188232421875, 'score': 0.188232421875, 'examples_seen': 18461, 'step': 7650, 'algorithm': 'quickselect'}
I0827 17:43:35.318329 134493687799808 run.py:730] (val) algo quicksort step 7650: {'pred': 0.939453125, 'score': 0.939453125, 'examples_seen': 11619, 'step': 7650, 'algorithm': 'quicksort'}
I0827 17:43:35.984023 134493687799808 run.py:730] (val) algo segments_intersect step 7650: {'intersect': 0.6650998824911869, 'score': 0.6650998824911869, 'examples_seen': 195872, 'step': 7650, 'algorithm': 'segments_intersect'}
I0827 17:43:36.091515 134493687799808 run.py:730] (val) algo strongly_connected_components step 7650: {'scc_id': 0.7705078125, 'score': 0.7705078125, 'examples_seen': 8952, 'step': 7650, 'algorithm': 'strongly_connected_components'}
I0827 17:43:36.112611 134493687799808 run.py:730] (val) algo task_scheduling step 7650: {'selected': 0.899830220713073, 'score': 0.899830220713073, 'examples_seen': 46624, 'step': 7650, 'algorithm': 'task_scheduling'}
I0827 17:43:36.168871 134493687799808 run.py:730] (val) algo topological_sort step 7650: {'topo': 0.6865234375, 'topo_head': 1.0, 'score': 0.84326171875, 'examples_seen': 21314, 'step': 7650, 'algorithm': 'topological_sort'}
I0827 17:43:36.169084 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.761, val scores are: mst_kruskal: 0.784, mst_prim: 0.859, naive_string_matcher: 0.767, optimal_bst: 0.897, quickselect: 0.188, quicksort: 0.939, segments_intersect: 0.665, strongly_connected_components: 0.771, task_scheduling: 0.900, topological_sort: 0.843
I0827 17:43:53.369054 134493687799808 run.py:695] Algo mst_kruskal step 7700 current loss 0.111103, current_train_items 169948.
I0827 17:43:53.388609 134493687799808 run.py:695] Algo mst_prim step 7700 current loss 0.511436, current_train_items 157078.
I0827 17:43:53.397950 134493687799808 run.py:695] Algo naive_string_matcher step 7700 current loss 0.861545, current_train_items 105351.
I0827 17:43:53.409310 134493687799808 run.py:695] Algo optimal_bst step 7700 current loss 0.290319, current_train_items 46944.
I0827 17:43:53.486933 134493687799808 run.py:695] Algo quickselect step 7700 current loss 2.546925, current_train_items 18582.
I0827 17:43:53.498858 134493687799808 run.py:695] Algo quicksort step 7700 current loss 0.796385, current_train_items 11697.
I0827 17:43:53.515879 134493687799808 run.py:695] Algo segments_intersect step 7700 current loss 0.718260, current_train_items 197152.
I0827 17:43:53.526324 134493687799808 run.py:695] Algo strongly_connected_components step 7700 current loss 0.803663, current_train_items 9010.
I0827 17:43:53.544606 134493687799808 run.py:695] Algo task_scheduling step 7700 current loss 0.165118, current_train_items 46944.
I0827 17:43:53.556549 134493687799808 run.py:695] Algo topological_sort step 7700 current loss 0.000000, current_train_items 21450.
I0827 17:43:53.671758 134493687799808 run.py:730] (val) algo mst_kruskal step 7700: {'in_mst': 0.7980295566502463, 'score': 0.7980295566502463, 'examples_seen': 169948, 'step': 7700, 'algorithm': 'mst_kruskal'}
I0827 17:43:53.693056 134493687799808 run.py:730] (val) algo mst_prim step 7700: {'pi': 0.84765625, 'score': 0.84765625, 'examples_seen': 157078, 'step': 7700, 'algorithm': 'mst_prim'}
I0827 17:43:54.459141 134493687799808 run.py:730] (val) algo naive_string_matcher step 7700: {'match': 0.758544921875, 'score': 0.758544921875, 'examples_seen': 105351, 'step': 7700, 'algorithm': 'naive_string_matcher'}
I0827 17:43:54.506833 134493687799808 run.py:730] (val) algo optimal_bst step 7700: {'root': 0.9000324394463668, 'score': 0.9000324394463668, 'examples_seen': 46944, 'step': 7700, 'algorithm': 'optimal_bst'}
I0827 17:43:58.194587 134493687799808 run.py:730] (val) algo quickselect step 7700: {'median': 0.220458984375, 'score': 0.220458984375, 'examples_seen': 18582, 'step': 7700, 'algorithm': 'quickselect'}
I0827 17:43:58.341775 134493687799808 run.py:730] (val) algo quicksort step 7700: {'pred': 0.912109375, 'score': 0.912109375, 'examples_seen': 11697, 'step': 7700, 'algorithm': 'quicksort'}
I0827 17:43:58.846895 134493687799808 run.py:730] (val) algo segments_intersect step 7700: {'intersect': 0.5211009174311927, 'score': 0.5211009174311927, 'examples_seen': 197152, 'step': 7700, 'algorithm': 'segments_intersect'}
I0827 17:43:58.952250 134493687799808 run.py:730] (val) algo strongly_connected_components step 7700: {'scc_id': 0.7705078125, 'score': 0.7705078125, 'examples_seen': 9010, 'step': 7700, 'algorithm': 'strongly_connected_components'}
I0827 17:43:58.966088 134493687799808 run.py:730] (val) algo task_scheduling step 7700: {'selected': 0.9358081979891725, 'score': 0.9358081979891725, 'examples_seen': 46944, 'step': 7700, 'algorithm': 'task_scheduling'}
I0827 17:43:59.019882 134493687799808 run.py:730] (val) algo topological_sort step 7700: {'topo': 0.640625, 'topo_head': 1.0, 'score': 0.8203125, 'examples_seen': 21450, 'step': 7700, 'algorithm': 'topological_sort'}
I0827 17:43:59.020051 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.748, val scores are: mst_kruskal: 0.798, mst_prim: 0.848, naive_string_matcher: 0.759, optimal_bst: 0.900, quickselect: 0.220, quicksort: 0.912, segments_intersect: 0.521, strongly_connected_components: 0.771, task_scheduling: 0.936, topological_sort: 0.820
I0827 17:44:16.852844 134493687799808 run.py:695] Algo mst_kruskal step 7750 current loss 0.061374, current_train_items 171050.
I0827 17:44:16.863041 134493687799808 run.py:695] Algo mst_prim step 7750 current loss 0.531459, current_train_items 158102.
I0827 17:44:16.871917 134493687799808 run.py:695] Algo naive_string_matcher step 7750 current loss 1.830696, current_train_items 106024.
I0827 17:44:16.883524 134493687799808 run.py:695] Algo optimal_bst step 7750 current loss 0.293560, current_train_items 47248.
I0827 17:44:16.961143 134493687799808 run.py:695] Algo quickselect step 7750 current loss 1.543179, current_train_items 18698.
I0827 17:44:16.971365 134493687799808 run.py:695] Algo quicksort step 7750 current loss 5.742325, current_train_items 11775.
I0827 17:44:16.989531 134493687799808 run.py:695] Algo segments_intersect step 7750 current loss 0.766347, current_train_items 198432.
I0827 17:44:17.000860 134493687799808 run.py:695] Algo strongly_connected_components step 7750 current loss 0.559412, current_train_items 9070.
I0827 17:44:17.017875 134493687799808 run.py:695] Algo task_scheduling step 7750 current loss 0.155226, current_train_items 47248.
I0827 17:44:17.029939 134493687799808 run.py:695] Algo topological_sort step 7750 current loss 1.231074, current_train_items 21592.
I0827 17:44:17.142069 134493687799808 run.py:730] (val) algo mst_kruskal step 7750: {'in_mst': 0.8101123595505617, 'score': 0.8101123595505617, 'examples_seen': 171050, 'step': 7750, 'algorithm': 'mst_kruskal'}
I0827 17:44:17.163154 134493687799808 run.py:730] (val) algo mst_prim step 7750: {'pi': 0.8193359375, 'score': 0.8193359375, 'examples_seen': 158102, 'step': 7750, 'algorithm': 'mst_prim'}
I0827 17:44:17.909008 134493687799808 run.py:730] (val) algo naive_string_matcher step 7750: {'match': 0.76708984375, 'score': 0.76708984375, 'examples_seen': 106024, 'step': 7750, 'algorithm': 'naive_string_matcher'}
I0827 17:44:17.957088 134493687799808 run.py:730] (val) algo optimal_bst step 7750: {'root': 0.9036007785467128, 'score': 0.9036007785467128, 'examples_seen': 47248, 'step': 7750, 'algorithm': 'optimal_bst'}
I0827 17:44:21.635907 134493687799808 run.py:730] (val) algo quickselect step 7750: {'median': 0.2138671875, 'score': 0.2138671875, 'examples_seen': 18698, 'step': 7750, 'algorithm': 'quickselect'}
I0827 17:44:21.780737 134493687799808 run.py:730] (val) algo quicksort step 7750: {'pred': 0.9453125, 'score': 0.9453125, 'examples_seen': 11775, 'step': 7750, 'algorithm': 'quicksort'}
I0827 17:44:22.284998 134493687799808 run.py:730] (val) algo segments_intersect step 7750: {'intersect': 0.6347527109230362, 'score': 0.6347527109230362, 'examples_seen': 198432, 'step': 7750, 'algorithm': 'segments_intersect'}
I0827 17:44:22.390948 134493687799808 run.py:730] (val) algo strongly_connected_components step 7750: {'scc_id': 0.7392578125, 'score': 0.7392578125, 'examples_seen': 9070, 'step': 7750, 'algorithm': 'strongly_connected_components'}
I0827 17:44:22.405037 134493687799808 run.py:730] (val) algo task_scheduling step 7750: {'selected': 0.9358081979891725, 'score': 0.9358081979891725, 'examples_seen': 47248, 'step': 7750, 'algorithm': 'task_scheduling'}
I0827 17:44:22.461524 134493687799808 run.py:730] (val) algo topological_sort step 7750: {'topo': 0.6318359375, 'topo_head': 0.984375, 'score': 0.80810546875, 'examples_seen': 21592, 'step': 7750, 'algorithm': 'topological_sort'}
I0827 17:44:22.461756 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.766, current avg val score is 0.758, val scores are: mst_kruskal: 0.810, mst_prim: 0.819, naive_string_matcher: 0.767, optimal_bst: 0.904, quickselect: 0.214, quicksort: 0.945, segments_intersect: 0.635, strongly_connected_components: 0.739, task_scheduling: 0.936, topological_sort: 0.808
W0827 17:44:29.187275 134493687799808 samplers.py:175] Increasing hint lengh from 138 to 147
I0827 17:44:40.881095 134493687799808 run.py:695] Algo mst_kruskal step 7800 current loss 0.118608, current_train_items 172160.
I0827 17:44:40.891927 134493687799808 run.py:695] Algo mst_prim step 7800 current loss 0.409858, current_train_items 159129.
I0827 17:44:40.900274 134493687799808 run.py:695] Algo naive_string_matcher step 7800 current loss 1.793198, current_train_items 106698.
I0827 17:44:40.912326 134493687799808 run.py:695] Algo optimal_bst step 7800 current loss 0.323769, current_train_items 47552.
I0827 17:44:40.989649 134493687799808 run.py:695] Algo quickselect step 7800 current loss 2.976374, current_train_items 18813.
I0827 17:44:41.000305 134493687799808 run.py:695] Algo quicksort step 7800 current loss 0.582028, current_train_items 11852.
I0827 17:44:41.018341 134493687799808 run.py:695] Algo segments_intersect step 7800 current loss 0.669024, current_train_items 199712.
I0827 17:44:41.028930 134493687799808 run.py:695] Algo strongly_connected_components step 7800 current loss 1.119394, current_train_items 9126.
I0827 17:44:41.047845 134493687799808 run.py:695] Algo task_scheduling step 7800 current loss 0.179509, current_train_items 47552.
I0827 17:44:41.060690 134493687799808 run.py:695] Algo topological_sort step 7800 current loss 0.000000, current_train_items 21728.
I0827 17:44:41.177570 134493687799808 run.py:730] (val) algo mst_kruskal step 7800: {'in_mst': 0.7838334353949786, 'score': 0.7838334353949786, 'examples_seen': 172160, 'step': 7800, 'algorithm': 'mst_kruskal'}
I0827 17:44:41.198666 134493687799808 run.py:730] (val) algo mst_prim step 7800: {'pi': 0.8310546875, 'score': 0.8310546875, 'examples_seen': 159129, 'step': 7800, 'algorithm': 'mst_prim'}
I0827 17:44:41.944765 134493687799808 run.py:730] (val) algo naive_string_matcher step 7800: {'match': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 106698, 'step': 7800, 'algorithm': 'naive_string_matcher'}
I0827 17:44:41.993082 134493687799808 run.py:730] (val) algo optimal_bst step 7800: {'root': 0.8954368512110726, 'score': 0.8954368512110726, 'examples_seen': 47552, 'step': 7800, 'algorithm': 'optimal_bst'}
I0827 17:44:45.676996 134493687799808 run.py:730] (val) algo quickselect step 7800: {'median': 0.227294921875, 'score': 0.227294921875, 'examples_seen': 18813, 'step': 7800, 'algorithm': 'quickselect'}
I0827 17:44:45.822668 134493687799808 run.py:730] (val) algo quicksort step 7800: {'pred': 0.8720703125, 'score': 0.8720703125, 'examples_seen': 11852, 'step': 7800, 'algorithm': 'quicksort'}
I0827 17:44:46.322942 134493687799808 run.py:730] (val) algo segments_intersect step 7800: {'intersect': 0.6987099459009571, 'score': 0.6987099459009571, 'examples_seen': 199712, 'step': 7800, 'algorithm': 'segments_intersect'}
I0827 17:44:46.427850 134493687799808 run.py:730] (val) algo strongly_connected_components step 7800: {'scc_id': 0.7744140625, 'score': 0.7744140625, 'examples_seen': 9126, 'step': 7800, 'algorithm': 'strongly_connected_components'}
I0827 17:44:46.441651 134493687799808 run.py:730] (val) algo task_scheduling step 7800: {'selected': 0.8816666666666665, 'score': 0.8816666666666665, 'examples_seen': 47552, 'step': 7800, 'algorithm': 'task_scheduling'}
I0827 17:44:46.495260 134493687799808 run.py:730] (val) algo topological_sort step 7800: {'topo': 0.576171875, 'topo_head': 0.96875, 'score': 0.7724609375, 'examples_seen': 21728, 'step': 7800, 'algorithm': 'topological_sort'}
I0827 17:44:46.495418 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.749, val scores are: mst_kruskal: 0.784, mst_prim: 0.831, naive_string_matcher: 0.753, optimal_bst: 0.895, quickselect: 0.227, quicksort: 0.872, segments_intersect: 0.699, strongly_connected_components: 0.774, task_scheduling: 0.882, topological_sort: 0.772
I0827 17:45:03.770143 134493687799808 run.py:695] Algo mst_kruskal step 7850 current loss 0.081224, current_train_items 173306.
I0827 17:45:03.781265 134493687799808 run.py:695] Algo mst_prim step 7850 current loss 0.414668, current_train_items 160137.
I0827 17:45:03.790283 134493687799808 run.py:695] Algo naive_string_matcher step 7850 current loss 1.077265, current_train_items 107362.
I0827 17:45:03.802874 134493687799808 run.py:695] Algo optimal_bst step 7850 current loss 0.289327, current_train_items 47856.
I0827 17:45:03.880054 134493687799808 run.py:695] Algo quickselect step 7850 current loss 1.721380, current_train_items 18925.
I0827 17:45:03.890773 134493687799808 run.py:695] Algo quicksort step 7850 current loss 22.689672, current_train_items 11927.
I0827 17:45:03.911041 134493687799808 run.py:695] Algo segments_intersect step 7850 current loss 0.618578, current_train_items 200992.
I0827 17:45:03.929110 134493687799808 run.py:695] Algo strongly_connected_components step 7850 current loss 0.000000, current_train_items 9184.
I0827 17:45:03.944366 134493687799808 run.py:695] Algo task_scheduling step 7850 current loss 0.156088, current_train_items 47856.
I0827 17:45:03.956205 134493687799808 run.py:695] Algo topological_sort step 7850 current loss 1.201203, current_train_items 21869.
I0827 17:45:04.068384 134493687799808 run.py:730] (val) algo mst_kruskal step 7850: {'in_mst': 0.748995983935743, 'score': 0.748995983935743, 'examples_seen': 173306, 'step': 7850, 'algorithm': 'mst_kruskal'}
I0827 17:45:04.089167 134493687799808 run.py:730] (val) algo mst_prim step 7850: {'pi': 0.8505859375, 'score': 0.8505859375, 'examples_seen': 160137, 'step': 7850, 'algorithm': 'mst_prim'}
I0827 17:45:04.834271 134493687799808 run.py:730] (val) algo naive_string_matcher step 7850: {'match': 0.73193359375, 'score': 0.73193359375, 'examples_seen': 107362, 'step': 7850, 'algorithm': 'naive_string_matcher'}
I0827 17:45:04.882186 134493687799808 run.py:730] (val) algo optimal_bst step 7850: {'root': 0.9066825259515571, 'score': 0.9066825259515571, 'examples_seen': 47856, 'step': 7850, 'algorithm': 'optimal_bst'}
I0827 17:45:08.557526 134493687799808 run.py:730] (val) algo quickselect step 7850: {'median': 0.2197265625, 'score': 0.2197265625, 'examples_seen': 18925, 'step': 7850, 'algorithm': 'quickselect'}
I0827 17:45:08.704113 134493687799808 run.py:730] (val) algo quicksort step 7850: {'pred': 0.904296875, 'score': 0.904296875, 'examples_seen': 11927, 'step': 7850, 'algorithm': 'quicksort'}
I0827 17:45:09.219352 134493687799808 run.py:730] (val) algo segments_intersect step 7850: {'intersect': 0.6159675236806496, 'score': 0.6159675236806496, 'examples_seen': 200992, 'step': 7850, 'algorithm': 'segments_intersect'}
I0827 17:45:09.324704 134493687799808 run.py:730] (val) algo strongly_connected_components step 7850: {'scc_id': 0.7958984375, 'score': 0.7958984375, 'examples_seen': 9184, 'step': 7850, 'algorithm': 'strongly_connected_components'}
I0827 17:45:09.338228 134493687799808 run.py:730] (val) algo task_scheduling step 7850: {'selected': 0.9157808667211774, 'score': 0.9157808667211774, 'examples_seen': 47856, 'step': 7850, 'algorithm': 'task_scheduling'}
I0827 17:45:09.392103 134493687799808 run.py:730] (val) algo topological_sort step 7850: {'topo': 0.6455078125, 'topo_head': 0.96875, 'score': 0.80712890625, 'examples_seen': 21869, 'step': 7850, 'algorithm': 'topological_sort'}
I0827 17:45:09.392301 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.749, current avg val score is 0.750, val scores are: mst_kruskal: 0.749, mst_prim: 0.851, naive_string_matcher: 0.732, optimal_bst: 0.907, quickselect: 0.220, quicksort: 0.904, segments_intersect: 0.616, strongly_connected_components: 0.796, task_scheduling: 0.916, topological_sort: 0.807
I0827 17:45:27.034119 134493687799808 run.py:695] Algo mst_kruskal step 7900 current loss 0.095216, current_train_items 174351.
I0827 17:45:27.044625 134493687799808 run.py:695] Algo mst_prim step 7900 current loss 0.474969, current_train_items 161166.
I0827 17:45:27.053497 134493687799808 run.py:695] Algo naive_string_matcher step 7900 current loss 1.223742, current_train_items 108035.
I0827 17:45:27.066226 134493687799808 run.py:695] Algo optimal_bst step 7900 current loss 0.314337, current_train_items 48160.
I0827 17:45:27.143015 134493687799808 run.py:695] Algo quickselect step 7900 current loss 3.028363, current_train_items 19046.
I0827 17:45:27.154084 134493687799808 run.py:695] Algo quicksort step 7900 current loss 2.688638, current_train_items 12005.
I0827 17:45:27.172450 134493687799808 run.py:695] Algo segments_intersect step 7900 current loss 0.659024, current_train_items 202272.
I0827 17:45:27.182945 134493687799808 run.py:695] Algo strongly_connected_components step 7900 current loss 0.000000, current_train_items 9244.
I0827 17:45:27.201011 134493687799808 run.py:695] Algo task_scheduling step 7900 current loss 0.114071, current_train_items 48160.
I0827 17:45:27.213361 134493687799808 run.py:695] Algo topological_sort step 7900 current loss 3.147461, current_train_items 22005.
I0827 17:45:27.326328 134493687799808 run.py:730] (val) algo mst_kruskal step 7900: {'in_mst': 0.7875201721355568, 'score': 0.7875201721355568, 'examples_seen': 174351, 'step': 7900, 'algorithm': 'mst_kruskal'}
I0827 17:45:27.347220 134493687799808 run.py:730] (val) algo mst_prim step 7900: {'pi': 0.8525390625, 'score': 0.8525390625, 'examples_seen': 161166, 'step': 7900, 'algorithm': 'mst_prim'}
I0827 17:45:28.092678 134493687799808 run.py:730] (val) algo naive_string_matcher step 7900: {'match': 0.7431640625, 'score': 0.7431640625, 'examples_seen': 108035, 'step': 7900, 'algorithm': 'naive_string_matcher'}
I0827 17:45:28.140859 134493687799808 run.py:730] (val) algo optimal_bst step 7900: {'root': 0.8988429930795848, 'score': 0.8988429930795848, 'examples_seen': 48160, 'step': 7900, 'algorithm': 'optimal_bst'}
I0827 17:45:31.849800 134493687799808 run.py:730] (val) algo quickselect step 7900: {'median': 0.202392578125, 'score': 0.202392578125, 'examples_seen': 19046, 'step': 7900, 'algorithm': 'quickselect'}
I0827 17:45:31.993825 134493687799808 run.py:730] (val) algo quicksort step 7900: {'pred': 0.9697265625, 'score': 0.9697265625, 'examples_seen': 12005, 'step': 7900, 'algorithm': 'quicksort'}
I0827 17:45:32.487929 134493687799808 run.py:730] (val) algo segments_intersect step 7900: {'intersect': 0.695124691080656, 'score': 0.695124691080656, 'examples_seen': 202272, 'step': 7900, 'algorithm': 'segments_intersect'}
I0827 17:45:32.593297 134493687799808 run.py:730] (val) algo strongly_connected_components step 7900: {'scc_id': 0.76953125, 'score': 0.76953125, 'examples_seen': 9244, 'step': 7900, 'algorithm': 'strongly_connected_components'}
I0827 17:45:32.606816 134493687799808 run.py:730] (val) algo task_scheduling step 7900: {'selected': 0.9250197316495659, 'score': 0.9250197316495659, 'examples_seen': 48160, 'step': 7900, 'algorithm': 'task_scheduling'}
I0827 17:45:32.660336 134493687799808 run.py:730] (val) algo topological_sort step 7900: {'topo': 0.5556640625, 'topo_head': 0.921875, 'score': 0.73876953125, 'examples_seen': 22005, 'step': 7900, 'algorithm': 'topological_sort'}
I0827 17:45:32.660556 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.750, current avg val score is 0.758, val scores are: mst_kruskal: 0.788, mst_prim: 0.853, naive_string_matcher: 0.743, optimal_bst: 0.899, quickselect: 0.202, quicksort: 0.970, segments_intersect: 0.695, strongly_connected_components: 0.770, task_scheduling: 0.925, topological_sort: 0.739
I0827 17:45:50.380984 134493687799808 run.py:695] Algo mst_kruskal step 7950 current loss 0.118362, current_train_items 175477.
I0827 17:45:50.392085 134493687799808 run.py:695] Algo mst_prim step 7950 current loss 0.576444, current_train_items 162187.
I0827 17:45:50.400674 134493687799808 run.py:695] Algo naive_string_matcher step 7950 current loss 1.289515, current_train_items 108690.
I0827 17:45:50.413171 134493687799808 run.py:695] Algo optimal_bst step 7950 current loss 0.352631, current_train_items 48464.
I0827 17:45:50.490923 134493687799808 run.py:695] Algo quickselect step 7950 current loss 1.970370, current_train_items 19162.
I0827 17:45:50.501202 134493687799808 run.py:695] Algo quicksort step 7950 current loss 5.649007, current_train_items 12078.
I0827 17:45:50.519171 134493687799808 run.py:695] Algo segments_intersect step 7950 current loss 0.599715, current_train_items 203552.
I0827 17:45:50.530615 134493687799808 run.py:695] Algo strongly_connected_components step 7950 current loss 0.577678, current_train_items 9302.
I0827 17:45:50.548113 134493687799808 run.py:695] Algo task_scheduling step 7950 current loss 0.140006, current_train_items 48464.
I0827 17:45:50.560142 134493687799808 run.py:695] Algo topological_sort step 7950 current loss 2.461833, current_train_items 22144.
I0827 17:45:50.691133 134493687799808 run.py:730] (val) algo mst_kruskal step 7950: {'in_mst': 0.8238396624472574, 'score': 0.8238396624472574, 'examples_seen': 175477, 'step': 7950, 'algorithm': 'mst_kruskal'}
I0827 17:45:50.712281 134493687799808 run.py:730] (val) algo mst_prim step 7950: {'pi': 0.8408203125, 'score': 0.8408203125, 'examples_seen': 162187, 'step': 7950, 'algorithm': 'mst_prim'}
I0827 17:45:51.454607 134493687799808 run.py:730] (val) algo naive_string_matcher step 7950: {'match': 0.750732421875, 'score': 0.750732421875, 'examples_seen': 108690, 'step': 7950, 'algorithm': 'naive_string_matcher'}
I0827 17:45:51.502399 134493687799808 run.py:730] (val) algo optimal_bst step 7950: {'root': 0.884083044982699, 'score': 0.884083044982699, 'examples_seen': 48464, 'step': 7950, 'algorithm': 'optimal_bst'}
I0827 17:45:55.179090 134493687799808 run.py:730] (val) algo quickselect step 7950: {'median': 0.208251953125, 'score': 0.208251953125, 'examples_seen': 19162, 'step': 7950, 'algorithm': 'quickselect'}
I0827 17:45:55.323819 134493687799808 run.py:730] (val) algo quicksort step 7950: {'pred': 0.9443359375, 'score': 0.9443359375, 'examples_seen': 12078, 'step': 7950, 'algorithm': 'quicksort'}
I0827 17:45:55.833716 134493687799808 run.py:730] (val) algo segments_intersect step 7950: {'intersect': 0.707718623048963, 'score': 0.707718623048963, 'examples_seen': 203552, 'step': 7950, 'algorithm': 'segments_intersect'}
I0827 17:45:55.938988 134493687799808 run.py:730] (val) algo strongly_connected_components step 7950: {'scc_id': 0.775390625, 'score': 0.775390625, 'examples_seen': 9302, 'step': 7950, 'algorithm': 'strongly_connected_components'}
I0827 17:45:55.952365 134493687799808 run.py:730] (val) algo task_scheduling step 7950: {'selected': 0.8911055694098088, 'score': 0.8911055694098088, 'examples_seen': 48464, 'step': 7950, 'algorithm': 'task_scheduling'}
I0827 17:45:56.005409 134493687799808 run.py:730] (val) algo topological_sort step 7950: {'topo': 0.69921875, 'topo_head': 1.0, 'score': 0.849609375, 'examples_seen': 22144, 'step': 7950, 'algorithm': 'topological_sort'}
I0827 17:45:56.005623 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.758, current avg val score is 0.768, val scores are: mst_kruskal: 0.824, mst_prim: 0.841, naive_string_matcher: 0.751, optimal_bst: 0.884, quickselect: 0.208, quicksort: 0.944, segments_intersect: 0.708, strongly_connected_components: 0.775, task_scheduling: 0.891, topological_sort: 0.850
I0827 17:46:14.060258 134493687799808 run.py:695] Algo mst_kruskal step 8000 current loss 0.065172, current_train_items 176578.
I0827 17:46:14.070871 134493687799808 run.py:695] Algo mst_prim step 8000 current loss 0.425402, current_train_items 163216.
I0827 17:46:14.079804 134493687799808 run.py:695] Algo naive_string_matcher step 8000 current loss 1.215079, current_train_items 109376.
I0827 17:46:14.091877 134493687799808 run.py:695] Algo optimal_bst step 8000 current loss 0.378360, current_train_items 48768.
I0827 17:46:14.169239 134493687799808 run.py:695] Algo quickselect step 8000 current loss 2.717815, current_train_items 19283.
I0827 17:46:14.179679 134493687799808 run.py:695] Algo quicksort step 8000 current loss 3.523234, current_train_items 12156.
I0827 17:46:14.197245 134493687799808 run.py:695] Algo segments_intersect step 8000 current loss 0.623707, current_train_items 204832.
I0827 17:46:14.208109 134493687799808 run.py:695] Algo strongly_connected_components step 8000 current loss 1.781350, current_train_items 9360.
I0827 17:46:14.226539 134493687799808 run.py:695] Algo task_scheduling step 8000 current loss 0.145779, current_train_items 48768.
I0827 17:46:14.238572 134493687799808 run.py:695] Algo topological_sort step 8000 current loss 0.000000, current_train_items 22281.
I0827 17:46:14.349502 134493687799808 run.py:730] (val) algo mst_kruskal step 8000: {'in_mst': 0.8192307692307692, 'score': 0.8192307692307692, 'examples_seen': 176578, 'step': 8000, 'algorithm': 'mst_kruskal'}
I0827 17:46:14.370798 134493687799808 run.py:730] (val) algo mst_prim step 8000: {'pi': 0.859375, 'score': 0.859375, 'examples_seen': 163216, 'step': 8000, 'algorithm': 'mst_prim'}
I0827 17:46:15.119174 134493687799808 run.py:730] (val) algo naive_string_matcher step 8000: {'match': 0.73828125, 'score': 0.73828125, 'examples_seen': 109376, 'step': 8000, 'algorithm': 'naive_string_matcher'}
I0827 17:46:15.167322 134493687799808 run.py:730] (val) algo optimal_bst step 8000: {'root': 0.8962478373702422, 'score': 0.8962478373702422, 'examples_seen': 48768, 'step': 8000, 'algorithm': 'optimal_bst'}
I0827 17:46:18.837787 134493687799808 run.py:730] (val) algo quickselect step 8000: {'median': 0.220458984375, 'score': 0.220458984375, 'examples_seen': 19283, 'step': 8000, 'algorithm': 'quickselect'}
I0827 17:46:18.983520 134493687799808 run.py:730] (val) algo quicksort step 8000: {'pred': 0.931640625, 'score': 0.931640625, 'examples_seen': 12156, 'step': 8000, 'algorithm': 'quicksort'}
I0827 17:46:19.473685 134493687799808 run.py:730] (val) algo segments_intersect step 8000: {'intersect': 0.6224024328433857, 'score': 0.6224024328433857, 'examples_seen': 204832, 'step': 8000, 'algorithm': 'segments_intersect'}
I0827 17:46:19.579871 134493687799808 run.py:730] (val) algo strongly_connected_components step 8000: {'scc_id': 0.7646484375, 'score': 0.7646484375, 'examples_seen': 9360, 'step': 8000, 'algorithm': 'strongly_connected_components'}
I0827 17:46:19.594186 134493687799808 run.py:730] (val) algo task_scheduling step 8000: {'selected': 0.9433656957928803, 'score': 0.9433656957928803, 'examples_seen': 48768, 'step': 8000, 'algorithm': 'task_scheduling'}
I0827 17:46:19.648311 134493687799808 run.py:730] (val) algo topological_sort step 8000: {'topo': 0.5859375, 'topo_head': 0.984375, 'score': 0.78515625, 'examples_seen': 22281, 'step': 8000, 'algorithm': 'topological_sort'}
I0827 17:46:19.648545 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.768, current avg val score is 0.758, val scores are: mst_kruskal: 0.819, mst_prim: 0.859, naive_string_matcher: 0.738, optimal_bst: 0.896, quickselect: 0.220, quicksort: 0.932, segments_intersect: 0.622, strongly_connected_components: 0.765, task_scheduling: 0.943, topological_sort: 0.785
I0827 17:46:37.304668 134493687799808 run.py:695] Algo mst_kruskal step 8050 current loss 0.066758, current_train_items 177682.
I0827 17:46:37.315083 134493687799808 run.py:695] Algo mst_prim step 8050 current loss 0.157455, current_train_items 164236.
I0827 17:46:37.324196 134493687799808 run.py:695] Algo naive_string_matcher step 8050 current loss 0.873842, current_train_items 110052.
I0827 17:46:37.338923 134493687799808 run.py:695] Algo optimal_bst step 8050 current loss 0.718973, current_train_items 49072.
I0827 17:46:37.415244 134493687799808 run.py:695] Algo quickselect step 8050 current loss 2.179698, current_train_items 19399.
I0827 17:46:37.425524 134493687799808 run.py:695] Algo quicksort step 8050 current loss 1.119721, current_train_items 12232.
I0827 17:46:37.443096 134493687799808 run.py:695] Algo segments_intersect step 8050 current loss 0.661968, current_train_items 206112.
I0827 17:46:37.454662 134493687799808 run.py:695] Algo strongly_connected_components step 8050 current loss 0.000000, current_train_items 9420.
I0827 17:46:37.472901 134493687799808 run.py:695] Algo task_scheduling step 8050 current loss 2.556020, current_train_items 49072.
I0827 17:46:37.485479 134493687799808 run.py:695] Algo topological_sort step 8050 current loss 7.736396, current_train_items 22422.
I0827 17:46:37.600680 134493687799808 run.py:730] (val) algo mst_kruskal step 8050: {'in_mst': 0.8165771297006907, 'score': 0.8165771297006907, 'examples_seen': 177682, 'step': 8050, 'algorithm': 'mst_kruskal'}
I0827 17:46:37.622073 134493687799808 run.py:730] (val) algo mst_prim step 8050: {'pi': 0.8330078125, 'score': 0.8330078125, 'examples_seen': 164236, 'step': 8050, 'algorithm': 'mst_prim'}
I0827 17:46:38.383410 134493687799808 run.py:730] (val) algo naive_string_matcher step 8050: {'match': 0.7431640625, 'score': 0.7431640625, 'examples_seen': 110052, 'step': 8050, 'algorithm': 'naive_string_matcher'}
I0827 17:46:38.431404 134493687799808 run.py:730] (val) algo optimal_bst step 8050: {'root': 0.8999243079584776, 'score': 0.8999243079584776, 'examples_seen': 49072, 'step': 8050, 'algorithm': 'optimal_bst'}
I0827 17:46:42.127493 134493687799808 run.py:730] (val) algo quickselect step 8050: {'median': 0.21337890625, 'score': 0.21337890625, 'examples_seen': 19399, 'step': 8050, 'algorithm': 'quickselect'}
I0827 17:46:42.273821 134493687799808 run.py:730] (val) algo quicksort step 8050: {'pred': 0.931640625, 'score': 0.931640625, 'examples_seen': 12232, 'step': 8050, 'algorithm': 'quicksort'}
I0827 17:46:42.787184 134493687799808 run.py:730] (val) algo segments_intersect step 8050: {'intersect': 0.5841726618705035, 'score': 0.5841726618705035, 'examples_seen': 206112, 'step': 8050, 'algorithm': 'segments_intersect'}
I0827 17:46:42.893038 134493687799808 run.py:730] (val) algo strongly_connected_components step 8050: {'scc_id': 0.771484375, 'score': 0.771484375, 'examples_seen': 9420, 'step': 8050, 'algorithm': 'strongly_connected_components'}
I0827 17:46:42.906435 134493687799808 run.py:730] (val) algo task_scheduling step 8050: {'selected': 0.9337490257209664, 'score': 0.9337490257209664, 'examples_seen': 49072, 'step': 8050, 'algorithm': 'task_scheduling'}
I0827 17:46:42.960443 134493687799808 run.py:730] (val) algo topological_sort step 8050: {'topo': 0.654296875, 'topo_head': 0.984375, 'score': 0.8193359375, 'examples_seen': 22422, 'step': 8050, 'algorithm': 'topological_sort'}
I0827 17:46:42.960666 134493687799808 run.py:751] Checkpointing best model, best avg val score was -0.100, current avg val score is 0.755, val scores are: mst_kruskal: 0.817, mst_prim: 0.833, naive_string_matcher: 0.743, optimal_bst: 0.900, quickselect: 0.213, quicksort: 0.932, segments_intersect: 0.584, strongly_connected_components: 0.771, task_scheduling: 0.934, topological_sort: 0.819
I0827 17:47:00.290629 134493687799808 run.py:695] Algo mst_kruskal step 8100 current loss 0.104022, current_train_items 178773.
I0827 17:47:00.309358 134493687799808 run.py:695] Algo mst_prim step 8100 current loss 0.631165, current_train_items 165246.
I0827 17:47:00.325580 134493687799808 run.py:695] Algo naive_string_matcher step 8100 current loss 1.556455, current_train_items 110748.
I0827 17:47:00.343346 134493687799808 run.py:695] Algo optimal_bst step 8100 current loss 0.000000, current_train_items 49376.
I0827 17:47:00.427902 134493687799808 run.py:695] Algo quickselect step 8100 current loss 1.850952, current_train_items 19524.
I0827 17:47:00.448512 134493687799808 run.py:695] Algo quicksort step 8100 current loss 3.529333, current_train_items 12306.
I0827 17:47:00.472110 134493687799808 run.py:695] Algo segments_intersect step 8100 current loss 0.645265, current_train_items 207392.
I0827 17:47:00.497583 134493687799808 run.py:695] Algo strongly_connected_components step 8100 current loss 0.000000, current_train_items 9476.
I0827 17:47:00.519640 134493687799808 run.py:695] Algo task_scheduling step 8100 current loss 0.000000, current_train_items 49376.
I0827 17:47:00.539641 134493687799808 run.py:695] Algo topological_sort step 8100 current loss 4.606040, current_train_items 22559.
I0827 17:47:00.706581 134493687799808 run.py:730] (val) algo mst_kruskal step 8100: {'in_mst': 0.8582043343653251, 'score': 0.8582043343653251, 'examples_seen': 178773, 'step': 8100, 'algorithm': 'mst_kruskal'}
I0827 17:47:00.732098 134493687799808 run.py:730] (val) algo mst_prim step 8100: {'pi': 0.859375, 'score': 0.859375, 'examples_seen': 165246, 'step': 8100, 'algorithm': 'mst_prim'}
I0827 17:47:01.588032 134493687799808 run.py:730] (val) algo naive_string_matcher step 8100: {'match': 0.74365234375, 'score': 0.74365234375, 'examples_seen': 110748, 'step': 8100, 'algorithm': 'naive_string_matcher'}
I0827 17:47:01.636277 134493687799808 run.py:730] (val) algo optimal_bst step 8100: {'root': 0.8849480968858131, 'score': 0.8849480968858131, 'examples_seen': 49376, 'step': 8100, 'algorithm': 'optimal_bst'}
I0827 17:47:05.309806 134493687799808 run.py:730] (val) algo quickselect step 8100: {'median': 0.2412109375, 'score': 0.2412109375, 'examples_seen': 19524, 'step': 8100, 'algorithm': 'quickselect'}
I0827 17:47:05.455748 134493687799808 run.py:730] (val) algo quicksort step 8100: {'pred': 0.9755859375, 'score': 0.9755859375, 'examples_seen': 12306, 'step': 8100, 'algorithm': 'quicksort'}
I0827 17:47:05.949336 134493687799808 run.py:730] (val) algo segments_intersect step 8100: {'intersect': 0.4566088117489987, 'score': 0.4566088117489987, 'examples_seen': 207392, 'step': 8100, 'algorithm': 'segments_intersect'}
I0827 17:47:06.054791 134493687799808 run.py:730] (val) algo strongly_connected_components step 8100: {'scc_id': 0.7890625, 'score': 0.7890625, 'examples_seen': 9476, 'step': 8100, 'algorithm': 'strongly_connected_components'}
I0827 17:47:06.068132 134493687799808 run.py:730] (val) algo task_scheduling step 8100: {'selected': 0.9179784589892295, 'score': 0.9179784589892295, 'examples_seen': 49376, 'step': 8100, 'algorithm': 'task_scheduling'}
I0827 17:47:06.121852 134493687799808 run.py:730] (val) algo topological_sort step 8100: {'topo': 0.6005859375, 'topo_head': 0.96875, 'score': 0.78466796875, 'examples_seen': 22559, 'step': 8100, 'algorithm': 'topological_sort'}
I0827 17:47:06.122036 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.755, current avg val score is 0.751, val scores are: mst_kruskal: 0.858, mst_prim: 0.859, naive_string_matcher: 0.744, optimal_bst: 0.885, quickselect: 0.241, quicksort: 0.976, segments_intersect: 0.457, strongly_connected_components: 0.789, task_scheduling: 0.918, topological_sort: 0.785
I0827 17:47:23.847409 134493687799808 run.py:695] Algo mst_kruskal step 8150 current loss 0.080037, current_train_items 179877.
I0827 17:47:23.866555 134493687799808 run.py:695] Algo mst_prim step 8150 current loss 0.385397, current_train_items 166259.
I0827 17:47:23.881704 134493687799808 run.py:695] Algo naive_string_matcher step 8150 current loss 1.330559, current_train_items 111435.
I0827 17:47:23.898896 134493687799808 run.py:695] Algo optimal_bst step 8150 current loss 0.000000, current_train_items 49680.
I0827 17:47:23.983221 134493687799808 run.py:695] Algo quickselect step 8150 current loss 0.000000, current_train_items 19644.
I0827 17:47:24.000456 134493687799808 run.py:695] Algo quicksort step 8150 current loss 1.867174, current_train_items 12382.
I0827 17:47:24.027261 134493687799808 run.py:695] Algo segments_intersect step 8150 current loss 0.651239, current_train_items 208672.
I0827 17:47:24.058316 134493687799808 run.py:695] Algo strongly_connected_components step 8150 current loss 0.790279, current_train_items 9535.
I0827 17:47:24.076898 134493687799808 run.py:695] Algo task_scheduling step 8150 current loss 0.000000, current_train_items 49680.
I0827 17:47:24.096759 134493687799808 run.py:695] Algo topological_sort step 8150 current loss 1.684768, current_train_items 22698.
I0827 17:47:24.269245 134493687799808 run.py:730] (val) algo mst_kruskal step 8150: {'in_mst': 0.6857887874837028, 'score': 0.6857887874837028, 'examples_seen': 179877, 'step': 8150, 'algorithm': 'mst_kruskal'}
I0827 17:47:24.293667 134493687799808 run.py:730] (val) algo mst_prim step 8150: {'pi': 0.845703125, 'score': 0.845703125, 'examples_seen': 166259, 'step': 8150, 'algorithm': 'mst_prim'}
I0827 17:47:25.243633 134493687799808 run.py:730] (val) algo naive_string_matcher step 8150: {'match': 0.72998046875, 'score': 0.72998046875, 'examples_seen': 111435, 'step': 8150, 'algorithm': 'naive_string_matcher'}
I0827 17:47:25.291014 134493687799808 run.py:730] (val) algo optimal_bst step 8150: {'root': 0.9009515570934256, 'score': 0.9009515570934256, 'examples_seen': 49680, 'step': 8150, 'algorithm': 'optimal_bst'}
I0827 17:47:28.971233 134493687799808 run.py:730] (val) algo quickselect step 8150: {'median': 0.21240234375, 'score': 0.21240234375, 'examples_seen': 19644, 'step': 8150, 'algorithm': 'quickselect'}
I0827 17:47:29.116171 134493687799808 run.py:730] (val) algo quicksort step 8150: {'pred': 0.94140625, 'score': 0.94140625, 'examples_seen': 12382, 'step': 8150, 'algorithm': 'quicksort'}
I0827 17:47:29.634309 134493687799808 run.py:730] (val) algo segments_intersect step 8150: {'intersect': 0.6584905660377359, 'score': 0.6584905660377359, 'examples_seen': 208672, 'step': 8150, 'algorithm': 'segments_intersect'}
I0827 17:47:29.739674 134493687799808 run.py:730] (val) algo strongly_connected_components step 8150: {'scc_id': 0.7275390625, 'score': 0.7275390625, 'examples_seen': 9535, 'step': 8150, 'algorithm': 'strongly_connected_components'}
I0827 17:47:29.752941 134493687799808 run.py:730] (val) algo task_scheduling step 8150: {'selected': 0.921951219512195, 'score': 0.921951219512195, 'examples_seen': 49680, 'step': 8150, 'algorithm': 'task_scheduling'}
I0827 17:47:29.806518 134493687799808 run.py:730] (val) algo topological_sort step 8150: {'topo': 0.580078125, 'topo_head': 1.0, 'score': 0.7900390625, 'examples_seen': 22698, 'step': 8150, 'algorithm': 'topological_sort'}
I0827 17:47:29.806696 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.755, current avg val score is 0.741, val scores are: mst_kruskal: 0.686, mst_prim: 0.846, naive_string_matcher: 0.730, optimal_bst: 0.901, quickselect: 0.212, quicksort: 0.941, segments_intersect: 0.658, strongly_connected_components: 0.728, task_scheduling: 0.922, topological_sort: 0.790
I0827 17:47:46.770861 134493687799808 run.py:695] Algo mst_kruskal step 8200 current loss 0.082954, current_train_items 180968.
I0827 17:47:46.781008 134493687799808 run.py:695] Algo mst_prim step 8200 current loss 0.485110, current_train_items 167277.
I0827 17:47:46.789972 134493687799808 run.py:695] Algo naive_string_matcher step 8200 current loss 1.538992, current_train_items 112112.
I0827 17:47:46.801159 134493687799808 run.py:695] Algo optimal_bst step 8200 current loss 0.000000, current_train_items 49984.
I0827 17:47:46.881442 134493687799808 run.py:695] Algo quickselect step 8200 current loss 3.629946, current_train_items 19761.
I0827 17:47:46.892312 134493687799808 run.py:695] Algo quicksort step 8200 current loss 13.747427, current_train_items 12461.
I0827 17:47:46.910041 134493687799808 run.py:695] Algo segments_intersect step 8200 current loss 0.685418, current_train_items 209952.
I0827 17:47:46.920648 134493687799808 run.py:695] Algo strongly_connected_components step 8200 current loss 2.850332, current_train_items 9595.
I0827 17:47:46.938677 134493687799808 run.py:695] Algo task_scheduling step 8200 current loss 0.000000, current_train_items 49984.
I0827 17:47:46.950966 134493687799808 run.py:695] Algo topological_sort step 8200 current loss 1.256134, current_train_items 22836.
I0827 17:47:47.085826 134493687799808 run.py:730] (val) algo mst_kruskal step 8200: {'in_mst': 0.87, 'score': 0.87, 'examples_seen': 180968, 'step': 8200, 'algorithm': 'mst_kruskal'}
I0827 17:47:47.109042 134493687799808 run.py:730] (val) algo mst_prim step 8200: {'pi': 0.849609375, 'score': 0.849609375, 'examples_seen': 167277, 'step': 8200, 'algorithm': 'mst_prim'}
I0827 17:47:48.242150 134493687799808 run.py:730] (val) algo naive_string_matcher step 8200: {'match': 0.712890625, 'score': 0.712890625, 'examples_seen': 112112, 'step': 8200, 'algorithm': 'naive_string_matcher'}
I0827 17:47:48.292176 134493687799808 run.py:730] (val) algo optimal_bst step 8200: {'root': 0.8701340830449827, 'score': 0.8701340830449827, 'examples_seen': 49984, 'step': 8200, 'algorithm': 'optimal_bst'}
I0827 17:47:51.968575 134493687799808 run.py:730] (val) algo quickselect step 8200: {'median': 0.198486328125, 'score': 0.198486328125, 'examples_seen': 19761, 'step': 8200, 'algorithm': 'quickselect'}
I0827 17:47:52.113216 134493687799808 run.py:730] (val) algo quicksort step 8200: {'pred': 0.951171875, 'score': 0.951171875, 'examples_seen': 12461, 'step': 8200, 'algorithm': 'quicksort'}
I0827 17:47:52.616351 134493687799808 run.py:730] (val) algo segments_intersect step 8200: {'intersect': 0.48736228127025283, 'score': 0.48736228127025283, 'examples_seen': 209952, 'step': 8200, 'algorithm': 'segments_intersect'}
I0827 17:47:52.720941 134493687799808 run.py:730] (val) algo strongly_connected_components step 8200: {'scc_id': 0.7705078125, 'score': 0.7705078125, 'examples_seen': 9595, 'step': 8200, 'algorithm': 'strongly_connected_components'}
I0827 17:47:52.734642 134493687799808 run.py:730] (val) algo task_scheduling step 8200: {'selected': 0.852659110723627, 'score': 0.852659110723627, 'examples_seen': 49984, 'step': 8200, 'algorithm': 'task_scheduling'}
I0827 17:47:52.789049 134493687799808 run.py:730] (val) algo topological_sort step 8200: {'topo': 0.66015625, 'topo_head': 1.0, 'score': 0.830078125, 'examples_seen': 22836, 'step': 8200, 'algorithm': 'topological_sort'}
I0827 17:47:52.789214 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.755, current avg val score is 0.739, val scores are: mst_kruskal: 0.870, mst_prim: 0.850, naive_string_matcher: 0.713, optimal_bst: 0.870, quickselect: 0.198, quicksort: 0.951, segments_intersect: 0.487, strongly_connected_components: 0.771, task_scheduling: 0.853, topological_sort: 0.830
I0827 17:48:09.527662 134493687799808 run.py:695] Algo mst_kruskal step 8250 current loss 0.097101, current_train_items 182072.
I0827 17:48:09.538815 134493687799808 run.py:695] Algo mst_prim step 8250 current loss 0.396866, current_train_items 168287.
I0827 17:48:09.547735 134493687799808 run.py:695] Algo naive_string_matcher step 8250 current loss 1.261141, current_train_items 112812.
I0827 17:48:09.560142 134493687799808 run.py:695] Algo optimal_bst step 8250 current loss 0.000000, current_train_items 50288.
I0827 17:48:09.638150 134493687799808 run.py:695] Algo quickselect step 8250 current loss 2.644124, current_train_items 19881.
I0827 17:48:09.648379 134493687799808 run.py:695] Algo quicksort step 8250 current loss 0.000000, current_train_items 12535.
I0827 17:48:09.665778 134493687799808 run.py:695] Algo segments_intersect step 8250 current loss 0.635799, current_train_items 211232.
I0827 17:48:09.679130 134493687799808 run.py:695] Algo strongly_connected_components step 8250 current loss 0.670555, current_train_items 9652.
I0827 17:48:09.698377 134493687799808 run.py:695] Algo task_scheduling step 8250 current loss 0.000000, current_train_items 50288.
I0827 17:48:09.710717 134493687799808 run.py:695] Algo topological_sort step 8250 current loss 2.691632, current_train_items 22977.
I0827 17:48:09.825127 134493687799808 run.py:730] (val) algo mst_kruskal step 8250: {'in_mst': 0.8490456911509543, 'score': 0.8490456911509543, 'examples_seen': 182072, 'step': 8250, 'algorithm': 'mst_kruskal'}
I0827 17:48:09.846189 134493687799808 run.py:730] (val) algo mst_prim step 8250: {'pi': 0.8349609375, 'score': 0.8349609375, 'examples_seen': 168287, 'step': 8250, 'algorithm': 'mst_prim'}
I0827 17:48:10.596251 134493687799808 run.py:730] (val) algo naive_string_matcher step 8250: {'match': 0.70068359375, 'score': 0.70068359375, 'examples_seen': 112812, 'step': 8250, 'algorithm': 'naive_string_matcher'}
I0827 17:48:10.644189 134493687799808 run.py:730] (val) algo optimal_bst step 8250: {'root': 0.8970588235294118, 'score': 0.8970588235294118, 'examples_seen': 50288, 'step': 8250, 'algorithm': 'optimal_bst'}
I0827 17:48:14.338738 134493687799808 run.py:730] (val) algo quickselect step 8250: {'median': 0.212646484375, 'score': 0.212646484375, 'examples_seen': 19881, 'step': 8250, 'algorithm': 'quickselect'}
I0827 17:48:14.483972 134493687799808 run.py:730] (val) algo quicksort step 8250: {'pred': 0.951171875, 'score': 0.951171875, 'examples_seen': 12535, 'step': 8250, 'algorithm': 'quicksort'}
I0827 17:48:14.993540 134493687799808 run.py:730] (val) algo segments_intersect step 8250: {'intersect': 0.5065996228786926, 'score': 0.5065996228786926, 'examples_seen': 211232, 'step': 8250, 'algorithm': 'segments_intersect'}
I0827 17:48:15.098647 134493687799808 run.py:730] (val) algo strongly_connected_components step 8250: {'scc_id': 0.701171875, 'score': 0.701171875, 'examples_seen': 9652, 'step': 8250, 'algorithm': 'strongly_connected_components'}
I0827 17:48:15.112113 134493687799808 run.py:730] (val) algo task_scheduling step 8250: {'selected': 0.9305993690851734, 'score': 0.9305993690851734, 'examples_seen': 50288, 'step': 8250, 'algorithm': 'task_scheduling'}
I0827 17:48:15.167059 134493687799808 run.py:730] (val) algo topological_sort step 8250: {'topo': 0.6572265625, 'topo_head': 1.0, 'score': 0.82861328125, 'examples_seen': 22977, 'step': 8250, 'algorithm': 'topological_sort'}
I0827 17:48:15.167251 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.755, current avg val score is 0.741, val scores are: mst_kruskal: 0.849, mst_prim: 0.835, naive_string_matcher: 0.701, optimal_bst: 0.897, quickselect: 0.213, quicksort: 0.951, segments_intersect: 0.507, strongly_connected_components: 0.701, task_scheduling: 0.931, topological_sort: 0.829
I0827 17:48:31.934288 134493687799808 run.py:695] Algo mst_kruskal step 8300 current loss 0.089657, current_train_items 183153.
I0827 17:48:31.944968 134493687799808 run.py:695] Algo mst_prim step 8300 current loss 0.320040, current_train_items 169315.
I0827 17:48:31.954063 134493687799808 run.py:695] Algo naive_string_matcher step 8300 current loss 1.075748, current_train_items 113500.
I0827 17:48:31.966496 134493687799808 run.py:695] Algo optimal_bst step 8300 current loss 0.000000, current_train_items 50592.
I0827 17:48:32.044236 134493687799808 run.py:695] Algo quickselect step 8300 current loss 4.522503, current_train_items 20006.
I0827 17:48:32.054204 134493687799808 run.py:695] Algo quicksort step 8300 current loss 0.230236, current_train_items 12613.
I0827 17:48:32.072213 134493687799808 run.py:695] Algo segments_intersect step 8300 current loss 0.638819, current_train_items 212512.
I0827 17:48:32.083276 134493687799808 run.py:695] Algo strongly_connected_components step 8300 current loss 1.383402, current_train_items 9711.
I0827 17:48:32.101477 134493687799808 run.py:695] Algo task_scheduling step 8300 current loss 0.000000, current_train_items 50592.
I0827 17:48:32.113904 134493687799808 run.py:695] Algo topological_sort step 8300 current loss 1.910011, current_train_items 23113.
I0827 17:48:32.232974 134493687799808 run.py:730] (val) algo mst_kruskal step 8300: {'in_mst': 0.8795098706603132, 'score': 0.8795098706603132, 'examples_seen': 183153, 'step': 8300, 'algorithm': 'mst_kruskal'}
I0827 17:48:32.253893 134493687799808 run.py:730] (val) algo mst_prim step 8300: {'pi': 0.841796875, 'score': 0.841796875, 'examples_seen': 169315, 'step': 8300, 'algorithm': 'mst_prim'}
I0827 17:48:33.000983 134493687799808 run.py:730] (val) algo naive_string_matcher step 8300: {'match': 0.736083984375, 'score': 0.736083984375, 'examples_seen': 113500, 'step': 8300, 'algorithm': 'naive_string_matcher'}
I0827 17:48:33.049385 134493687799808 run.py:730] (val) algo optimal_bst step 8300: {'root': 0.9066825259515571, 'score': 0.9066825259515571, 'examples_seen': 50592, 'step': 8300, 'algorithm': 'optimal_bst'}
I0827 17:48:36.790057 134493687799808 run.py:730] (val) algo quickselect step 8300: {'median': 0.17333984375, 'score': 0.17333984375, 'examples_seen': 20006, 'step': 8300, 'algorithm': 'quickselect'}
I0827 17:48:36.941982 134493687799808 run.py:730] (val) algo quicksort step 8300: {'pred': 0.94140625, 'score': 0.94140625, 'examples_seen': 12613, 'step': 8300, 'algorithm': 'quicksort'}
I0827 17:48:37.434943 134493687799808 run.py:730] (val) algo segments_intersect step 8300: {'intersect': 0.6638009049773754, 'score': 0.6638009049773754, 'examples_seen': 212512, 'step': 8300, 'algorithm': 'segments_intersect'}
I0827 17:48:37.540329 134493687799808 run.py:730] (val) algo strongly_connected_components step 8300: {'scc_id': 0.7431640625, 'score': 0.7431640625, 'examples_seen': 9711, 'step': 8300, 'algorithm': 'strongly_connected_components'}
I0827 17:48:37.554106 134493687799808 run.py:730] (val) algo task_scheduling step 8300: {'selected': 0.9375, 'score': 0.9375, 'examples_seen': 50592, 'step': 8300, 'algorithm': 'task_scheduling'}
I0827 17:48:37.607880 134493687799808 run.py:730] (val) algo topological_sort step 8300: {'topo': 0.6337890625, 'topo_head': 1.0, 'score': 0.81689453125, 'examples_seen': 23113, 'step': 8300, 'algorithm': 'topological_sort'}
I0827 17:48:37.608095 134493687799808 run.py:751] Checkpointing best model, best avg val score was 0.755, current avg val score is 0.764, val scores are: mst_kruskal: 0.880, mst_prim: 0.842, naive_string_matcher: 0.736, optimal_bst: 0.907, quickselect: 0.173, quicksort: 0.941, segments_intersect: 0.664, strongly_connected_components: 0.743, task_scheduling: 0.938, topological_sort: 0.817
I0827 17:48:55.134529 134493687799808 run.py:695] Algo mst_kruskal step 8350 current loss 0.126619, current_train_items 184187.
I0827 17:48:55.144153 134493687799808 run.py:695] Algo mst_prim step 8350 current loss 0.280917, current_train_items 170332.
I0827 17:48:55.152521 134493687799808 run.py:695] Algo naive_string_matcher step 8350 current loss 1.214877, current_train_items 114176.
I0827 17:48:55.164535 134493687799808 run.py:695] Algo optimal_bst step 8350 current loss 0.000000, current_train_items 50896.
I0827 17:48:55.242950 134493687799808 run.py:695] Algo quickselect step 8350 current loss 2.539717, current_train_items 20130.
I0827 17:48:55.253398 134493687799808 run.py:695] Algo quicksort step 8350 current loss 2.679508, current_train_items 12687.
I0827 17:48:55.271041 134493687799808 run.py:695] Algo segments_intersect step 8350 current loss 0.684269, current_train_items 213792.
I0827 17:48:55.282711 134493687799808 run.py:695] Algo strongly_connected_components step 8350 current loss 0.000000, current_train_items 9771.
I0827 17:48:55.300441 134493687799808 run.py:695] Algo task_scheduling step 8350 current loss 0.000000, current_train_items 50896.
I0827 17:48:55.312029 134493687799808 run.py:695] Algo topological_sort step 8350 current loss 2.101032, current_train_items 23252.
I0827 17:48:55.426431 134493687799808 run.py:730] (val) algo mst_kruskal step 8350: {'in_mst': 0.8618266978922716, 'score': 0.8618266978922716, 'examples_seen': 184187, 'step': 8350, 'algorithm': 'mst_kruskal'}
I0827 17:48:55.447645 134493687799808 run.py:730] (val) algo mst_prim step 8350: {'pi': 0.7861328125, 'score': 0.7861328125, 'examples_seen': 170332, 'step': 8350, 'algorithm': 'mst_prim'}
I0827 17:48:56.197069 134493687799808 run.py:730] (val) algo naive_string_matcher step 8350: {'match': 0.756591796875, 'score': 0.756591796875, 'examples_seen': 114176, 'step': 8350, 'algorithm': 'naive_string_matcher'}
I0827 17:48:56.245254 134493687799808 run.py:730] (val) algo optimal_bst step 8350: {'root': 0.8974913494809689, 'score': 0.8974913494809689, 'examples_seen': 50896, 'step': 8350, 'algorithm': 'optimal_bst'}
I0827 17:48:59.958966 134493687799808 run.py:730] (val) algo quickselect step 8350: {'median': 0.196044921875, 'score': 0.196044921875, 'examples_seen': 20130, 'step': 8350, 'algorithm': 'quickselect'}
I0827 17:49:00.109148 134493687799808 run.py:730] (val) algo quicksort step 8350: {'pred': 0.919921875, 'score': 0.919921875, 'examples_seen': 12687, 'step': 8350, 'algorithm': 'quicksort'}
I0827 17:49:01.030134 134493687799808 run.py:730] (val) algo segments_intersect step 8350: {'intersect': 0.6577017114914425, 'score': 0.6577017114914425, 'examples_seen': 213792, 'step': 8350, 'algorithm': 'segments_intersect'}
I0827 17:49:01.134720 134493687799808 run.py:730] (val) algo strongly_connected_components step 8350: {'scc_id': 0.765625, 'score': 0.765625, 'examples_seen': 9771, 'step': 8350, 'algorithm': 'strongly_connected_components'}
I0827 17:49:01.148447 134493687799808 run.py:730] (val) algo task_scheduling step 8350: {'selected': 0.897822445561139, 'score': 0.897822445561139, 'examples_seen': 50896, 'step': 8350, 'algorithm': 'task_scheduling'}
I0827 17:49:01.202809 134493687799808 run.py:730] (val) algo topological_sort step 8350: {'topo': 0.6474609375, 'topo_head': 1.0, 'score': 0.82373046875, 'examples_seen': 23252, 'step': 8350, 'algorithm': 'topological_sort'}
I0827 17:49:01.202970 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.756, val scores are: mst_kruskal: 0.862, mst_prim: 0.786, naive_string_matcher: 0.757, optimal_bst: 0.897, quickselect: 0.196, quicksort: 0.920, segments_intersect: 0.658, strongly_connected_components: 0.766, task_scheduling: 0.898, topological_sort: 0.824
I0827 17:49:18.329542 134493687799808 run.py:695] Algo mst_kruskal step 8400 current loss 0.185501, current_train_items 185259.
I0827 17:49:18.339827 134493687799808 run.py:695] Algo mst_prim step 8400 current loss 0.601475, current_train_items 171339.
I0827 17:49:18.348038 134493687799808 run.py:695] Algo naive_string_matcher step 8400 current loss 1.349787, current_train_items 114887.
I0827 17:49:18.360503 134493687799808 run.py:695] Algo optimal_bst step 8400 current loss 0.000000, current_train_items 51200.
I0827 17:49:18.438028 134493687799808 run.py:695] Algo quickselect step 8400 current loss 3.336626, current_train_items 20254.
I0827 17:49:18.447943 134493687799808 run.py:695] Algo quicksort step 8400 current loss 0.000000, current_train_items 12764.
I0827 17:49:18.465649 134493687799808 run.py:695] Algo segments_intersect step 8400 current loss 0.628796, current_train_items 215072.
I0827 17:49:18.476510 134493687799808 run.py:695] Algo strongly_connected_components step 8400 current loss 0.437671, current_train_items 9827.
I0827 17:49:18.495483 134493687799808 run.py:695] Algo task_scheduling step 8400 current loss 0.000000, current_train_items 51200.
I0827 17:49:18.507294 134493687799808 run.py:695] Algo topological_sort step 8400 current loss 1.275867, current_train_items 23391.
I0827 17:49:18.618763 134493687799808 run.py:730] (val) algo mst_kruskal step 8400: {'in_mst': 0.7850725639253628, 'score': 0.7850725639253628, 'examples_seen': 185259, 'step': 8400, 'algorithm': 'mst_kruskal'}
I0827 17:49:18.640150 134493687799808 run.py:730] (val) algo mst_prim step 8400: {'pi': 0.853515625, 'score': 0.853515625, 'examples_seen': 171339, 'step': 8400, 'algorithm': 'mst_prim'}
I0827 17:49:19.381351 134493687799808 run.py:730] (val) algo naive_string_matcher step 8400: {'match': 0.7333984375, 'score': 0.7333984375, 'examples_seen': 114887, 'step': 8400, 'algorithm': 'naive_string_matcher'}
I0827 17:49:19.433282 134493687799808 run.py:730] (val) algo optimal_bst step 8400: {'root': 0.8895977508650519, 'score': 0.8895977508650519, 'examples_seen': 51200, 'step': 8400, 'algorithm': 'optimal_bst'}
I0827 17:49:23.154624 134493687799808 run.py:730] (val) algo quickselect step 8400: {'median': 0.219482421875, 'score': 0.219482421875, 'examples_seen': 20254, 'step': 8400, 'algorithm': 'quickselect'}
I0827 17:49:23.304258 134493687799808 run.py:730] (val) algo quicksort step 8400: {'pred': 0.861328125, 'score': 0.861328125, 'examples_seen': 12764, 'step': 8400, 'algorithm': 'quicksort'}
I0827 17:49:24.221783 134493687799808 run.py:730] (val) algo segments_intersect step 8400: {'intersect': 0.5422900763358779, 'score': 0.5422900763358779, 'examples_seen': 215072, 'step': 8400, 'algorithm': 'segments_intersect'}
I0827 17:49:24.329962 134493687799808 run.py:730] (val) algo strongly_connected_components step 8400: {'scc_id': 0.751953125, 'score': 0.751953125, 'examples_seen': 9827, 'step': 8400, 'algorithm': 'strongly_connected_components'}
I0827 17:49:24.349921 134493687799808 run.py:730] (val) algo task_scheduling step 8400: {'selected': 0.9257781324820432, 'score': 0.9257781324820432, 'examples_seen': 51200, 'step': 8400, 'algorithm': 'task_scheduling'}
I0827 17:49:24.405412 134493687799808 run.py:730] (val) algo topological_sort step 8400: {'topo': 0.6572265625, 'topo_head': 1.0, 'score': 0.82861328125, 'examples_seen': 23391, 'step': 8400, 'algorithm': 'topological_sort'}
I0827 17:49:24.405719 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.739, val scores are: mst_kruskal: 0.785, mst_prim: 0.854, naive_string_matcher: 0.733, optimal_bst: 0.890, quickselect: 0.219, quicksort: 0.861, segments_intersect: 0.542, strongly_connected_components: 0.752, task_scheduling: 0.926, topological_sort: 0.829
I0827 17:49:41.286164 134493687799808 run.py:695] Algo mst_kruskal step 8450 current loss 0.066807, current_train_items 186323.
I0827 17:49:41.297596 134493687799808 run.py:695] Algo mst_prim step 8450 current loss 0.184210, current_train_items 172370.
I0827 17:49:41.306916 134493687799808 run.py:695] Algo naive_string_matcher step 8450 current loss 1.002182, current_train_items 115567.
I0827 17:49:41.318769 134493687799808 run.py:695] Algo optimal_bst step 8450 current loss 0.000000, current_train_items 51504.
I0827 17:49:41.396676 134493687799808 run.py:695] Algo quickselect step 8450 current loss 2.341570, current_train_items 20382.
I0827 17:49:41.406561 134493687799808 run.py:695] Algo quicksort step 8450 current loss 3.176574, current_train_items 12843.
I0827 17:49:41.425217 134493687799808 run.py:695] Algo segments_intersect step 8450 current loss 0.654342, current_train_items 216352.
I0827 17:49:41.435700 134493687799808 run.py:695] Algo strongly_connected_components step 8450 current loss 1.268283, current_train_items 9885.
I0827 17:49:41.454122 134493687799808 run.py:695] Algo task_scheduling step 8450 current loss 0.000000, current_train_items 51504.
I0827 17:49:41.466122 134493687799808 run.py:695] Algo topological_sort step 8450 current loss 1.376222, current_train_items 23533.
I0827 17:49:41.584710 134493687799808 run.py:730] (val) algo mst_kruskal step 8450: {'in_mst': 0.8331595411887383, 'score': 0.8331595411887383, 'examples_seen': 186323, 'step': 8450, 'algorithm': 'mst_kruskal'}
I0827 17:49:41.605576 134493687799808 run.py:730] (val) algo mst_prim step 8450: {'pi': 0.8310546875, 'score': 0.8310546875, 'examples_seen': 172370, 'step': 8450, 'algorithm': 'mst_prim'}
I0827 17:49:42.359719 134493687799808 run.py:730] (val) algo naive_string_matcher step 8450: {'match': 0.7412109375, 'score': 0.7412109375, 'examples_seen': 115567, 'step': 8450, 'algorithm': 'naive_string_matcher'}
I0827 17:49:42.407651 134493687799808 run.py:730] (val) algo optimal_bst step 8450: {'root': 0.8957612456747405, 'score': 0.8957612456747405, 'examples_seen': 51504, 'step': 8450, 'algorithm': 'optimal_bst'}
I0827 17:49:46.097346 134493687799808 run.py:730] (val) algo quickselect step 8450: {'median': 0.221923828125, 'score': 0.221923828125, 'examples_seen': 20382, 'step': 8450, 'algorithm': 'quickselect'}
I0827 17:49:46.242858 134493687799808 run.py:730] (val) algo quicksort step 8450: {'pred': 0.9306640625, 'score': 0.9306640625, 'examples_seen': 12843, 'step': 8450, 'algorithm': 'quicksort'}
I0827 17:49:46.738928 134493687799808 run.py:730] (val) algo segments_intersect step 8450: {'intersect': 0.6096314231907451, 'score': 0.6096314231907451, 'examples_seen': 216352, 'step': 8450, 'algorithm': 'segments_intersect'}
I0827 17:49:46.844639 134493687799808 run.py:730] (val) algo strongly_connected_components step 8450: {'scc_id': 0.8056640625, 'score': 0.8056640625, 'examples_seen': 9885, 'step': 8450, 'algorithm': 'strongly_connected_components'}
I0827 17:49:46.858038 134493687799808 run.py:730] (val) algo task_scheduling step 8450: {'selected': 0.9265536723163843, 'score': 0.9265536723163843, 'examples_seen': 51504, 'step': 8450, 'algorithm': 'task_scheduling'}
I0827 17:49:46.911918 134493687799808 run.py:730] (val) algo topological_sort step 8450: {'topo': 0.626953125, 'topo_head': 0.984375, 'score': 0.8056640625, 'examples_seen': 23533, 'step': 8450, 'algorithm': 'topological_sort'}
I0827 17:49:46.912178 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.760, val scores are: mst_kruskal: 0.833, mst_prim: 0.831, naive_string_matcher: 0.741, optimal_bst: 0.896, quickselect: 0.222, quicksort: 0.931, segments_intersect: 0.610, strongly_connected_components: 0.806, task_scheduling: 0.927, topological_sort: 0.806
I0827 17:50:04.676706 134493687799808 run.py:695] Algo mst_kruskal step 8500 current loss 0.098152, current_train_items 187462.
I0827 17:50:04.686614 134493687799808 run.py:695] Algo mst_prim step 8500 current loss 0.550508, current_train_items 173369.
I0827 17:50:04.695875 134493687799808 run.py:695] Algo naive_string_matcher step 8500 current loss 1.286565, current_train_items 116237.
I0827 17:50:04.707909 134493687799808 run.py:695] Algo optimal_bst step 8500 current loss 0.000000, current_train_items 51808.
I0827 17:50:04.785161 134493687799808 run.py:695] Algo quickselect step 8500 current loss 3.249321, current_train_items 20504.
I0827 17:50:04.795781 134493687799808 run.py:695] Algo quicksort step 8500 current loss 4.860460, current_train_items 12918.
I0827 17:50:04.815265 134493687799808 run.py:695] Algo segments_intersect step 8500 current loss 0.732514, current_train_items 217632.
I0827 17:50:04.826700 134493687799808 run.py:695] Algo strongly_connected_components step 8500 current loss 2.137380, current_train_items 9946.
I0827 17:50:04.843938 134493687799808 run.py:695] Algo task_scheduling step 8500 current loss 0.000000, current_train_items 51808.
I0827 17:50:04.855548 134493687799808 run.py:695] Algo topological_sort step 8500 current loss 2.946480, current_train_items 23671.
I0827 17:50:04.965082 134493687799808 run.py:730] (val) algo mst_kruskal step 8500: {'in_mst': 0.7941015838339704, 'score': 0.7941015838339704, 'examples_seen': 187462, 'step': 8500, 'algorithm': 'mst_kruskal'}
I0827 17:50:04.986029 134493687799808 run.py:730] (val) algo mst_prim step 8500: {'pi': 0.8466796875, 'score': 0.8466796875, 'examples_seen': 173369, 'step': 8500, 'algorithm': 'mst_prim'}
I0827 17:50:05.739604 134493687799808 run.py:730] (val) algo naive_string_matcher step 8500: {'match': 0.7431640625, 'score': 0.7431640625, 'examples_seen': 116237, 'step': 8500, 'algorithm': 'naive_string_matcher'}
I0827 17:50:05.787354 134493687799808 run.py:730] (val) algo optimal_bst step 8500: {'root': 0.9048442906574394, 'score': 0.9048442906574394, 'examples_seen': 51808, 'step': 8500, 'algorithm': 'optimal_bst'}
I0827 17:50:09.475832 134493687799808 run.py:730] (val) algo quickselect step 8500: {'median': 0.235595703125, 'score': 0.235595703125, 'examples_seen': 20504, 'step': 8500, 'algorithm': 'quickselect'}
I0827 17:50:09.620788 134493687799808 run.py:730] (val) algo quicksort step 8500: {'pred': 0.947265625, 'score': 0.947265625, 'examples_seen': 12918, 'step': 8500, 'algorithm': 'quicksort'}
I0827 17:50:10.119120 134493687799808 run.py:730] (val) algo segments_intersect step 8500: {'intersect': 0.639344262295082, 'score': 0.639344262295082, 'examples_seen': 217632, 'step': 8500, 'algorithm': 'segments_intersect'}
I0827 17:50:10.224233 134493687799808 run.py:730] (val) algo strongly_connected_components step 8500: {'scc_id': 0.759765625, 'score': 0.759765625, 'examples_seen': 9946, 'step': 8500, 'algorithm': 'strongly_connected_components'}
I0827 17:50:10.237701 134493687799808 run.py:730] (val) algo task_scheduling step 8500: {'selected': 0.9043624161073827, 'score': 0.9043624161073827, 'examples_seen': 51808, 'step': 8500, 'algorithm': 'task_scheduling'}
I0827 17:50:10.291248 134493687799808 run.py:730] (val) algo topological_sort step 8500: {'topo': 0.642578125, 'topo_head': 1.0, 'score': 0.8212890625, 'examples_seen': 23671, 'step': 8500, 'algorithm': 'topological_sort'}
I0827 17:50:10.291442 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.760, val scores are: mst_kruskal: 0.794, mst_prim: 0.847, naive_string_matcher: 0.743, optimal_bst: 0.905, quickselect: 0.236, quicksort: 0.947, segments_intersect: 0.639, strongly_connected_components: 0.760, task_scheduling: 0.904, topological_sort: 0.821
I0827 17:50:28.058901 134493687799808 run.py:695] Algo mst_kruskal step 8550 current loss 0.086795, current_train_items 188582.
I0827 17:50:28.068950 134493687799808 run.py:695] Algo mst_prim step 8550 current loss 0.235068, current_train_items 174374.
I0827 17:50:28.077013 134493687799808 run.py:695] Algo naive_string_matcher step 8550 current loss 1.529677, current_train_items 116916.
I0827 17:50:28.089045 134493687799808 run.py:695] Algo optimal_bst step 8550 current loss 0.000000, current_train_items 52112.
I0827 17:50:28.166398 134493687799808 run.py:695] Algo quickselect step 8550 current loss 2.518221, current_train_items 20625.
I0827 17:50:28.177190 134493687799808 run.py:695] Algo quicksort step 8550 current loss 0.000000, current_train_items 12991.
I0827 17:50:28.195241 134493687799808 run.py:695] Algo segments_intersect step 8550 current loss 0.668420, current_train_items 218912.
I0827 17:50:28.206234 134493687799808 run.py:695] Algo strongly_connected_components step 8550 current loss 0.000000, current_train_items 9999.
I0827 17:50:28.224505 134493687799808 run.py:695] Algo task_scheduling step 8550 current loss 0.000000, current_train_items 52112.
I0827 17:50:28.236200 134493687799808 run.py:695] Algo topological_sort step 8550 current loss 1.205635, current_train_items 23811.
I0827 17:50:28.348572 134493687799808 run.py:730] (val) algo mst_kruskal step 8550: {'in_mst': 0.7793533749290981, 'score': 0.7793533749290981, 'examples_seen': 188582, 'step': 8550, 'algorithm': 'mst_kruskal'}
I0827 17:50:28.369682 134493687799808 run.py:730] (val) algo mst_prim step 8550: {'pi': 0.8359375, 'score': 0.8359375, 'examples_seen': 174374, 'step': 8550, 'algorithm': 'mst_prim'}
I0827 17:50:29.115208 134493687799808 run.py:730] (val) algo naive_string_matcher step 8550: {'match': 0.736328125, 'score': 0.736328125, 'examples_seen': 116916, 'step': 8550, 'algorithm': 'naive_string_matcher'}
I0827 17:50:29.164245 134493687799808 run.py:730] (val) algo optimal_bst step 8550: {'root': 0.8958693771626297, 'score': 0.8958693771626297, 'examples_seen': 52112, 'step': 8550, 'algorithm': 'optimal_bst'}
I0827 17:50:32.843244 134493687799808 run.py:730] (val) algo quickselect step 8550: {'median': 0.1923828125, 'score': 0.1923828125, 'examples_seen': 20625, 'step': 8550, 'algorithm': 'quickselect'}
I0827 17:50:32.987946 134493687799808 run.py:730] (val) algo quicksort step 8550: {'pred': 0.9267578125, 'score': 0.9267578125, 'examples_seen': 12991, 'step': 8550, 'algorithm': 'quicksort'}
I0827 17:50:33.503831 134493687799808 run.py:730] (val) algo segments_intersect step 8550: {'intersect': 0.6028502285560634, 'score': 0.6028502285560634, 'examples_seen': 218912, 'step': 8550, 'algorithm': 'segments_intersect'}
I0827 17:50:33.609056 134493687799808 run.py:730] (val) algo strongly_connected_components step 8550: {'scc_id': 0.6953125, 'score': 0.6953125, 'examples_seen': 9999, 'step': 8550, 'algorithm': 'strongly_connected_components'}
I0827 17:50:33.622805 134493687799808 run.py:730] (val) algo task_scheduling step 8550: {'selected': 0.8937908496732025, 'score': 0.8937908496732025, 'examples_seen': 52112, 'step': 8550, 'algorithm': 'task_scheduling'}
I0827 17:50:33.676733 134493687799808 run.py:730] (val) algo topological_sort step 8550: {'topo': 0.6044921875, 'topo_head': 1.0, 'score': 0.80224609375, 'examples_seen': 23811, 'step': 8550, 'algorithm': 'topological_sort'}
I0827 17:50:33.676913 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.736, val scores are: mst_kruskal: 0.779, mst_prim: 0.836, naive_string_matcher: 0.736, optimal_bst: 0.896, quickselect: 0.192, quicksort: 0.927, segments_intersect: 0.603, strongly_connected_components: 0.695, task_scheduling: 0.894, topological_sort: 0.802
I0827 17:50:51.365150 134493687799808 run.py:695] Algo mst_kruskal step 8600 current loss 0.114127, current_train_items 189651.
I0827 17:50:51.375904 134493687799808 run.py:695] Algo mst_prim step 8600 current loss 0.306679, current_train_items 175382.
I0827 17:50:51.384513 134493687799808 run.py:695] Algo naive_string_matcher step 8600 current loss 1.292518, current_train_items 117601.
I0827 17:50:51.396760 134493687799808 run.py:695] Algo optimal_bst step 8600 current loss 0.000000, current_train_items 52416.
I0827 17:50:51.474615 134493687799808 run.py:695] Algo quickselect step 8600 current loss 2.499966, current_train_items 20740.
I0827 17:50:51.485294 134493687799808 run.py:695] Algo quicksort step 8600 current loss 0.000000, current_train_items 13067.
I0827 17:50:51.502741 134493687799808 run.py:695] Algo segments_intersect step 8600 current loss 0.605313, current_train_items 220192.
I0827 17:50:51.513608 134493687799808 run.py:695] Algo strongly_connected_components step 8600 current loss 2.062842, current_train_items 10062.
I0827 17:50:51.532652 134493687799808 run.py:695] Algo task_scheduling step 8600 current loss 0.000000, current_train_items 52416.
I0827 17:50:51.544741 134493687799808 run.py:695] Algo topological_sort step 8600 current loss 1.730538, current_train_items 23950.
I0827 17:50:51.659903 134493687799808 run.py:730] (val) algo mst_kruskal step 8600: {'in_mst': 0.8184438040345822, 'score': 0.8184438040345822, 'examples_seen': 189651, 'step': 8600, 'algorithm': 'mst_kruskal'}
I0827 17:50:51.681605 134493687799808 run.py:730] (val) algo mst_prim step 8600: {'pi': 0.8330078125, 'score': 0.8330078125, 'examples_seen': 175382, 'step': 8600, 'algorithm': 'mst_prim'}
I0827 17:50:52.426102 134493687799808 run.py:730] (val) algo naive_string_matcher step 8600: {'match': 0.7216796875, 'score': 0.7216796875, 'examples_seen': 117601, 'step': 8600, 'algorithm': 'naive_string_matcher'}
I0827 17:50:52.475003 134493687799808 run.py:730] (val) algo optimal_bst step 8600: {'root': 0.8954909169550173, 'score': 0.8954909169550173, 'examples_seen': 52416, 'step': 8600, 'algorithm': 'optimal_bst'}
I0827 17:50:56.159619 134493687799808 run.py:730] (val) algo quickselect step 8600: {'median': 0.222900390625, 'score': 0.222900390625, 'examples_seen': 20740, 'step': 8600, 'algorithm': 'quickselect'}
I0827 17:50:56.304748 134493687799808 run.py:730] (val) algo quicksort step 8600: {'pred': 0.919921875, 'score': 0.919921875, 'examples_seen': 13067, 'step': 8600, 'algorithm': 'quicksort'}
I0827 17:50:56.791416 134493687799808 run.py:730] (val) algo segments_intersect step 8600: {'intersect': 0.70949831449534, 'score': 0.70949831449534, 'examples_seen': 220192, 'step': 8600, 'algorithm': 'segments_intersect'}
I0827 17:50:56.896506 134493687799808 run.py:730] (val) algo strongly_connected_components step 8600: {'scc_id': 0.771484375, 'score': 0.771484375, 'examples_seen': 10062, 'step': 8600, 'algorithm': 'strongly_connected_components'}
I0827 17:50:56.909950 134493687799808 run.py:730] (val) algo task_scheduling step 8600: {'selected': 0.8571428571428572, 'score': 0.8571428571428572, 'examples_seen': 52416, 'step': 8600, 'algorithm': 'task_scheduling'}
I0827 17:50:56.963862 134493687799808 run.py:730] (val) algo topological_sort step 8600: {'topo': 0.6796875, 'topo_head': 1.0, 'score': 0.83984375, 'examples_seen': 23950, 'step': 8600, 'algorithm': 'topological_sort'}
I0827 17:50:56.964021 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.759, val scores are: mst_kruskal: 0.818, mst_prim: 0.833, naive_string_matcher: 0.722, optimal_bst: 0.895, quickselect: 0.223, quicksort: 0.920, segments_intersect: 0.709, strongly_connected_components: 0.771, task_scheduling: 0.857, topological_sort: 0.840
I0827 17:51:14.529159 134493687799808 run.py:695] Algo mst_kruskal step 8650 current loss 0.121248, current_train_items 190755.
I0827 17:51:14.538833 134493687799808 run.py:695] Algo mst_prim step 8650 current loss 0.692409, current_train_items 176413.
I0827 17:51:14.546734 134493687799808 run.py:695] Algo naive_string_matcher step 8650 current loss 0.899731, current_train_items 118286.
I0827 17:51:14.558259 134493687799808 run.py:695] Algo optimal_bst step 8650 current loss 0.000000, current_train_items 52720.
I0827 17:51:14.636101 134493687799808 run.py:695] Algo quickselect step 8650 current loss 2.229640, current_train_items 20856.
I0827 17:51:14.646283 134493687799808 run.py:695] Algo quicksort step 8650 current loss 32.156300, current_train_items 13143.
I0827 17:51:14.664684 134493687799808 run.py:695] Algo segments_intersect step 8650 current loss 0.650679, current_train_items 221472.
I0827 17:51:14.675076 134493687799808 run.py:695] Algo strongly_connected_components step 8650 current loss 0.785962, current_train_items 10122.
I0827 17:51:14.694102 134493687799808 run.py:695] Algo task_scheduling step 8650 current loss 0.000000, current_train_items 52720.
I0827 17:51:14.706346 134493687799808 run.py:695] Algo topological_sort step 8650 current loss 1.739636, current_train_items 24087.
I0827 17:51:14.821821 134493687799808 run.py:730] (val) algo mst_kruskal step 8650: {'in_mst': 0.8095794392523366, 'score': 0.8095794392523366, 'examples_seen': 190755, 'step': 8650, 'algorithm': 'mst_kruskal'}
I0827 17:51:14.842824 134493687799808 run.py:730] (val) algo mst_prim step 8650: {'pi': 0.845703125, 'score': 0.845703125, 'examples_seen': 176413, 'step': 8650, 'algorithm': 'mst_prim'}
I0827 17:51:15.586001 134493687799808 run.py:730] (val) algo naive_string_matcher step 8650: {'match': 0.72607421875, 'score': 0.72607421875, 'examples_seen': 118286, 'step': 8650, 'algorithm': 'naive_string_matcher'}
I0827 17:51:15.633920 134493687799808 run.py:730] (val) algo optimal_bst step 8650: {'root': 0.9021410034602076, 'score': 0.9021410034602076, 'examples_seen': 52720, 'step': 8650, 'algorithm': 'optimal_bst'}
I0827 17:51:19.316611 134493687799808 run.py:730] (val) algo quickselect step 8650: {'median': 0.22607421875, 'score': 0.22607421875, 'examples_seen': 20856, 'step': 8650, 'algorithm': 'quickselect'}
I0827 17:51:19.462908 134493687799808 run.py:730] (val) algo quicksort step 8650: {'pred': 0.9453125, 'score': 0.9453125, 'examples_seen': 13143, 'step': 8650, 'algorithm': 'quicksort'}
I0827 17:51:19.986757 134493687799808 run.py:730] (val) algo segments_intersect step 8650: {'intersect': 0.674910071942446, 'score': 0.674910071942446, 'examples_seen': 221472, 'step': 8650, 'algorithm': 'segments_intersect'}
I0827 17:51:20.092598 134493687799808 run.py:730] (val) algo strongly_connected_components step 8650: {'scc_id': 0.73828125, 'score': 0.73828125, 'examples_seen': 10122, 'step': 8650, 'algorithm': 'strongly_connected_components'}
I0827 17:51:20.106137 134493687799808 run.py:730] (val) algo task_scheduling step 8650: {'selected': 0.8921810699588477, 'score': 0.8921810699588477, 'examples_seen': 52720, 'step': 8650, 'algorithm': 'task_scheduling'}
I0827 17:51:20.160680 134493687799808 run.py:730] (val) algo topological_sort step 8650: {'topo': 0.6337890625, 'topo_head': 1.0, 'score': 0.81689453125, 'examples_seen': 24087, 'step': 8650, 'algorithm': 'topological_sort'}
I0827 17:51:20.160858 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.758, val scores are: mst_kruskal: 0.810, mst_prim: 0.846, naive_string_matcher: 0.726, optimal_bst: 0.902, quickselect: 0.226, quicksort: 0.945, segments_intersect: 0.675, strongly_connected_components: 0.738, task_scheduling: 0.892, topological_sort: 0.817
I0827 17:51:38.256098 134493687799808 run.py:695] Algo mst_kruskal step 8700 current loss 0.077290, current_train_items 191839.
I0827 17:51:38.265747 134493687799808 run.py:695] Algo mst_prim step 8700 current loss 0.342930, current_train_items 177442.
I0827 17:51:38.274756 134493687799808 run.py:695] Algo naive_string_matcher step 8700 current loss 1.471349, current_train_items 118977.
I0827 17:51:38.286413 134493687799808 run.py:695] Algo optimal_bst step 8700 current loss 0.000000, current_train_items 53024.
I0827 17:51:38.363494 134493687799808 run.py:695] Algo quickselect step 8700 current loss 1.926393, current_train_items 20973.
I0827 17:51:38.373552 134493687799808 run.py:695] Algo quicksort step 8700 current loss 1.526087, current_train_items 13221.
I0827 17:51:38.391843 134493687799808 run.py:695] Algo segments_intersect step 8700 current loss 0.598751, current_train_items 222752.
I0827 17:51:38.403428 134493687799808 run.py:695] Algo strongly_connected_components step 8700 current loss 0.974577, current_train_items 10178.
I0827 17:51:38.421238 134493687799808 run.py:695] Algo task_scheduling step 8700 current loss 0.000000, current_train_items 53024.
I0827 17:51:38.434096 134493687799808 run.py:695] Algo topological_sort step 8700 current loss 2.846461, current_train_items 24226.
I0827 17:51:38.548248 134493687799808 run.py:730] (val) algo mst_kruskal step 8700: {'in_mst': 0.7768595041322314, 'score': 0.7768595041322314, 'examples_seen': 191839, 'step': 8700, 'algorithm': 'mst_kruskal'}
I0827 17:51:38.569427 134493687799808 run.py:730] (val) algo mst_prim step 8700: {'pi': 0.837890625, 'score': 0.837890625, 'examples_seen': 177442, 'step': 8700, 'algorithm': 'mst_prim'}
I0827 17:51:39.312683 134493687799808 run.py:730] (val) algo naive_string_matcher step 8700: {'match': 0.70556640625, 'score': 0.70556640625, 'examples_seen': 118977, 'step': 8700, 'algorithm': 'naive_string_matcher'}
I0827 17:51:39.360414 134493687799808 run.py:730] (val) algo optimal_bst step 8700: {'root': 0.8905168685121108, 'score': 0.8905168685121108, 'examples_seen': 53024, 'step': 8700, 'algorithm': 'optimal_bst'}
I0827 17:51:43.034843 134493687799808 run.py:730] (val) algo quickselect step 8700: {'median': 0.192626953125, 'score': 0.192626953125, 'examples_seen': 20973, 'step': 8700, 'algorithm': 'quickselect'}
I0827 17:51:43.180238 134493687799808 run.py:730] (val) algo quicksort step 8700: {'pred': 0.9296875, 'score': 0.9296875, 'examples_seen': 13221, 'step': 8700, 'algorithm': 'quicksort'}
I0827 17:51:43.687949 134493687799808 run.py:730] (val) algo segments_intersect step 8700: {'intersect': 0.5090681676047529, 'score': 0.5090681676047529, 'examples_seen': 222752, 'step': 8700, 'algorithm': 'segments_intersect'}
I0827 17:51:43.795193 134493687799808 run.py:730] (val) algo strongly_connected_components step 8700: {'scc_id': 0.7744140625, 'score': 0.7744140625, 'examples_seen': 10178, 'step': 8700, 'algorithm': 'strongly_connected_components'}
I0827 17:51:43.808800 134493687799808 run.py:730] (val) algo task_scheduling step 8700: {'selected': 0.9197080291970804, 'score': 0.9197080291970804, 'examples_seen': 53024, 'step': 8700, 'algorithm': 'task_scheduling'}
I0827 17:51:43.862920 134493687799808 run.py:730] (val) algo topological_sort step 8700: {'topo': 0.7041015625, 'topo_head': 0.984375, 'score': 0.84423828125, 'examples_seen': 24226, 'step': 8700, 'algorithm': 'topological_sort'}
I0827 17:51:43.863146 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.738, val scores are: mst_kruskal: 0.777, mst_prim: 0.838, naive_string_matcher: 0.706, optimal_bst: 0.891, quickselect: 0.193, quicksort: 0.930, segments_intersect: 0.509, strongly_connected_components: 0.774, task_scheduling: 0.920, topological_sort: 0.844
I0827 17:52:01.317024 134493687799808 run.py:695] Algo mst_kruskal step 8750 current loss 0.075906, current_train_items 192998.
I0827 17:52:01.326767 134493687799808 run.py:695] Algo mst_prim step 8750 current loss 0.322739, current_train_items 178464.
I0827 17:52:01.334980 134493687799808 run.py:695] Algo naive_string_matcher step 8750 current loss 1.248473, current_train_items 119674.
I0827 17:52:01.346918 134493687799808 run.py:695] Algo optimal_bst step 8750 current loss 0.281503, current_train_items 53344.
I0827 17:52:01.425387 134493687799808 run.py:695] Algo quickselect step 8750 current loss 1.291138, current_train_items 21092.
I0827 17:52:01.435427 134493687799808 run.py:695] Algo quicksort step 8750 current loss 0.181301, current_train_items 13296.
I0827 17:52:01.453102 134493687799808 run.py:695] Algo segments_intersect step 8750 current loss 0.614437, current_train_items 224032.
I0827 17:52:01.463905 134493687799808 run.py:695] Algo strongly_connected_components step 8750 current loss 1.029376, current_train_items 10237.
I0827 17:52:01.487823 134493687799808 run.py:695] Algo task_scheduling step 8750 current loss 0.131621, current_train_items 53344.
I0827 17:52:01.503909 134493687799808 run.py:695] Algo topological_sort step 8750 current loss 2.874418, current_train_items 24365.
I0827 17:52:01.624573 134493687799808 run.py:730] (val) algo mst_kruskal step 8750: {'in_mst': 0.8287112561174552, 'score': 0.8287112561174552, 'examples_seen': 192998, 'step': 8750, 'algorithm': 'mst_kruskal'}
I0827 17:52:01.645603 134493687799808 run.py:730] (val) algo mst_prim step 8750: {'pi': 0.8154296875, 'score': 0.8154296875, 'examples_seen': 178464, 'step': 8750, 'algorithm': 'mst_prim'}
I0827 17:52:02.388146 134493687799808 run.py:730] (val) algo naive_string_matcher step 8750: {'match': 0.73291015625, 'score': 0.73291015625, 'examples_seen': 119674, 'step': 8750, 'algorithm': 'naive_string_matcher'}
I0827 17:52:02.436123 134493687799808 run.py:730] (val) algo optimal_bst step 8750: {'root': 0.8981401384083045, 'score': 0.8981401384083045, 'examples_seen': 53344, 'step': 8750, 'algorithm': 'optimal_bst'}
I0827 17:52:06.133334 134493687799808 run.py:730] (val) algo quickselect step 8750: {'median': 0.21484375, 'score': 0.21484375, 'examples_seen': 21092, 'step': 8750, 'algorithm': 'quickselect'}
I0827 17:52:06.277947 134493687799808 run.py:730] (val) algo quicksort step 8750: {'pred': 0.935546875, 'score': 0.935546875, 'examples_seen': 13296, 'step': 8750, 'algorithm': 'quicksort'}
I0827 17:52:06.825393 134493687799808 run.py:730] (val) algo segments_intersect step 8750: {'intersect': 0.6217113665389528, 'score': 0.6217113665389528, 'examples_seen': 224032, 'step': 8750, 'algorithm': 'segments_intersect'}
I0827 17:52:06.931331 134493687799808 run.py:730] (val) algo strongly_connected_components step 8750: {'scc_id': 0.7548828125, 'score': 0.7548828125, 'examples_seen': 10237, 'step': 8750, 'algorithm': 'strongly_connected_components'}
I0827 17:52:06.944848 134493687799808 run.py:730] (val) algo task_scheduling step 8750: {'selected': 0.909090909090909, 'score': 0.909090909090909, 'examples_seen': 53344, 'step': 8750, 'algorithm': 'task_scheduling'}
I0827 17:52:06.998777 134493687799808 run.py:730] (val) algo topological_sort step 8750: {'topo': 0.6162109375, 'topo_head': 0.984375, 'score': 0.80029296875, 'examples_seen': 24365, 'step': 8750, 'algorithm': 'topological_sort'}
I0827 17:52:06.998951 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.751, val scores are: mst_kruskal: 0.829, mst_prim: 0.815, naive_string_matcher: 0.733, optimal_bst: 0.898, quickselect: 0.215, quicksort: 0.936, segments_intersect: 0.622, strongly_connected_components: 0.755, task_scheduling: 0.909, topological_sort: 0.800
I0827 17:52:24.740962 134493687799808 run.py:695] Algo mst_kruskal step 8800 current loss 0.062635, current_train_items 194087.
I0827 17:52:24.761970 134493687799808 run.py:695] Algo mst_prim step 8800 current loss 0.455911, current_train_items 179525.
I0827 17:52:24.770854 134493687799808 run.py:695] Algo naive_string_matcher step 8800 current loss 1.489425, current_train_items 120351.
I0827 17:52:24.782384 134493687799808 run.py:695] Algo optimal_bst step 8800 current loss 0.268583, current_train_items 53648.
I0827 17:52:24.859613 134493687799808 run.py:695] Algo quickselect step 8800 current loss 2.245073, current_train_items 21216.
I0827 17:52:24.869947 134493687799808 run.py:695] Algo quicksort step 8800 current loss 0.790787, current_train_items 13371.
I0827 17:52:24.887899 134493687799808 run.py:695] Algo segments_intersect step 8800 current loss 0.641654, current_train_items 225312.
I0827 17:52:24.898794 134493687799808 run.py:695] Algo strongly_connected_components step 8800 current loss 1.311934, current_train_items 10297.
I0827 17:52:24.917186 134493687799808 run.py:695] Algo task_scheduling step 8800 current loss 0.144240, current_train_items 53648.
I0827 17:52:24.930314 134493687799808 run.py:695] Algo topological_sort step 8800 current loss 1.577026, current_train_items 24507.
I0827 17:52:25.044791 134493687799808 run.py:730] (val) algo mst_kruskal step 8800: {'in_mst': 0.8199513381995134, 'score': 0.8199513381995134, 'examples_seen': 194087, 'step': 8800, 'algorithm': 'mst_kruskal'}
I0827 17:52:25.066059 134493687799808 run.py:730] (val) algo mst_prim step 8800: {'pi': 0.869140625, 'score': 0.869140625, 'examples_seen': 179525, 'step': 8800, 'algorithm': 'mst_prim'}
I0827 17:52:25.816229 134493687799808 run.py:730] (val) algo naive_string_matcher step 8800: {'match': 0.706298828125, 'score': 0.706298828125, 'examples_seen': 120351, 'step': 8800, 'algorithm': 'naive_string_matcher'}
I0827 17:52:25.863920 134493687799808 run.py:730] (val) algo optimal_bst step 8800: {'root': 0.890030276816609, 'score': 0.890030276816609, 'examples_seen': 53648, 'step': 8800, 'algorithm': 'optimal_bst'}
I0827 17:52:29.567170 134493687799808 run.py:730] (val) algo quickselect step 8800: {'median': 0.19287109375, 'score': 0.19287109375, 'examples_seen': 21216, 'step': 8800, 'algorithm': 'quickselect'}
I0827 17:52:29.712136 134493687799808 run.py:730] (val) algo quicksort step 8800: {'pred': 0.9384765625, 'score': 0.9384765625, 'examples_seen': 13371, 'step': 8800, 'algorithm': 'quicksort'}
I0827 17:52:30.213713 134493687799808 run.py:730] (val) algo segments_intersect step 8800: {'intersect': 0.669683257918552, 'score': 0.669683257918552, 'examples_seen': 225312, 'step': 8800, 'algorithm': 'segments_intersect'}
I0827 17:52:30.319050 134493687799808 run.py:730] (val) algo strongly_connected_components step 8800: {'scc_id': 0.794921875, 'score': 0.794921875, 'examples_seen': 10297, 'step': 8800, 'algorithm': 'strongly_connected_components'}
I0827 17:52:30.332374 134493687799808 run.py:730] (val) algo task_scheduling step 8800: {'selected': 0.9080168776371308, 'score': 0.9080168776371308, 'examples_seen': 53648, 'step': 8800, 'algorithm': 'task_scheduling'}
I0827 17:52:30.385814 134493687799808 run.py:730] (val) algo topological_sort step 8800: {'topo': 0.6240234375, 'topo_head': 1.0, 'score': 0.81201171875, 'examples_seen': 24507, 'step': 8800, 'algorithm': 'topological_sort'}
I0827 17:52:30.385990 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.760, val scores are: mst_kruskal: 0.820, mst_prim: 0.869, naive_string_matcher: 0.706, optimal_bst: 0.890, quickselect: 0.193, quicksort: 0.938, segments_intersect: 0.670, strongly_connected_components: 0.795, task_scheduling: 0.908, topological_sort: 0.812
I0827 17:52:48.274060 134493687799808 run.py:695] Algo mst_kruskal step 8850 current loss 0.142167, current_train_items 195213.
I0827 17:52:48.293734 134493687799808 run.py:695] Algo mst_prim step 8850 current loss 0.510699, current_train_items 180530.
I0827 17:52:48.310159 134493687799808 run.py:695] Algo naive_string_matcher step 8850 current loss 1.310695, current_train_items 121028.
I0827 17:52:48.328419 134493687799808 run.py:695] Algo optimal_bst step 8850 current loss 0.301910, current_train_items 53952.
I0827 17:52:48.415972 134493687799808 run.py:695] Algo quickselect step 8850 current loss 2.766740, current_train_items 21337.
I0827 17:52:48.434246 134493687799808 run.py:695] Algo quicksort step 8850 current loss 0.000000, current_train_items 13448.
I0827 17:52:48.455693 134493687799808 run.py:695] Algo segments_intersect step 8850 current loss 0.585065, current_train_items 226592.
I0827 17:52:48.478877 134493687799808 run.py:695] Algo strongly_connected_components step 8850 current loss 0.239569, current_train_items 10353.
I0827 17:52:48.503059 134493687799808 run.py:695] Algo task_scheduling step 8850 current loss 0.134927, current_train_items 53952.
I0827 17:52:48.524701 134493687799808 run.py:695] Algo topological_sort step 8850 current loss 1.174076, current_train_items 24646.
I0827 17:52:48.725456 134493687799808 run.py:730] (val) algo mst_kruskal step 8850: {'in_mst': 0.8494749124854143, 'score': 0.8494749124854143, 'examples_seen': 195213, 'step': 8850, 'algorithm': 'mst_kruskal'}
I0827 17:52:48.746948 134493687799808 run.py:730] (val) algo mst_prim step 8850: {'pi': 0.8388671875, 'score': 0.8388671875, 'examples_seen': 180530, 'step': 8850, 'algorithm': 'mst_prim'}
I0827 17:52:49.492554 134493687799808 run.py:730] (val) algo naive_string_matcher step 8850: {'match': 0.68896484375, 'score': 0.68896484375, 'examples_seen': 121028, 'step': 8850, 'algorithm': 'naive_string_matcher'}
I0827 17:52:49.540669 134493687799808 run.py:730] (val) algo optimal_bst step 8850: {'root': 0.8923551038062284, 'score': 0.8923551038062284, 'examples_seen': 53952, 'step': 8850, 'algorithm': 'optimal_bst'}
I0827 17:52:53.222635 134493687799808 run.py:730] (val) algo quickselect step 8850: {'median': 0.202880859375, 'score': 0.202880859375, 'examples_seen': 21337, 'step': 8850, 'algorithm': 'quickselect'}
I0827 17:52:53.368347 134493687799808 run.py:730] (val) algo quicksort step 8850: {'pred': 0.94140625, 'score': 0.94140625, 'examples_seen': 13448, 'step': 8850, 'algorithm': 'quicksort'}
I0827 17:52:53.861708 134493687799808 run.py:730] (val) algo segments_intersect step 8850: {'intersect': 0.6680478821362799, 'score': 0.6680478821362799, 'examples_seen': 226592, 'step': 8850, 'algorithm': 'segments_intersect'}
I0827 17:52:53.966844 134493687799808 run.py:730] (val) algo strongly_connected_components step 8850: {'scc_id': 0.671875, 'score': 0.671875, 'examples_seen': 10353, 'step': 8850, 'algorithm': 'strongly_connected_components'}
I0827 17:52:53.980284 134493687799808 run.py:730] (val) algo task_scheduling step 8850: {'selected': 0.9183508488278092, 'score': 0.9183508488278092, 'examples_seen': 53952, 'step': 8850, 'algorithm': 'task_scheduling'}
I0827 17:52:54.034101 134493687799808 run.py:730] (val) algo topological_sort step 8850: {'topo': 0.6005859375, 'topo_head': 0.984375, 'score': 0.79248046875, 'examples_seen': 24646, 'step': 8850, 'algorithm': 'topological_sort'}
I0827 17:52:54.034274 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.746, val scores are: mst_kruskal: 0.849, mst_prim: 0.839, naive_string_matcher: 0.689, optimal_bst: 0.892, quickselect: 0.203, quicksort: 0.941, segments_intersect: 0.668, strongly_connected_components: 0.672, task_scheduling: 0.918, topological_sort: 0.792
I0827 17:53:11.045181 134493687799808 run.py:695] Algo mst_kruskal step 8900 current loss 0.116281, current_train_items 196361.
I0827 17:53:11.066948 134493687799808 run.py:695] Algo mst_prim step 8900 current loss 0.555190, current_train_items 181563.
I0827 17:53:11.084645 134493687799808 run.py:695] Algo naive_string_matcher step 8900 current loss 1.395096, current_train_items 121729.
I0827 17:53:11.099396 134493687799808 run.py:695] Algo optimal_bst step 8900 current loss 0.299927, current_train_items 54256.
I0827 17:53:11.183423 134493687799808 run.py:695] Algo quickselect step 8900 current loss 1.495640, current_train_items 21455.
I0827 17:53:11.202363 134493687799808 run.py:695] Algo quicksort step 8900 current loss 0.000000, current_train_items 13523.
I0827 17:53:11.224486 134493687799808 run.py:695] Algo segments_intersect step 8900 current loss 0.609513, current_train_items 227872.
I0827 17:53:11.247156 134493687799808 run.py:695] Algo strongly_connected_components step 8900 current loss 1.242275, current_train_items 10413.
I0827 17:53:11.264858 134493687799808 run.py:695] Algo task_scheduling step 8900 current loss 0.130813, current_train_items 54256.
I0827 17:53:11.284744 134493687799808 run.py:695] Algo topological_sort step 8900 current loss 1.996164, current_train_items 24781.
I0827 17:53:11.451305 134493687799808 run.py:730] (val) algo mst_kruskal step 8900: {'in_mst': 0.7827606290040768, 'score': 0.7827606290040768, 'examples_seen': 196361, 'step': 8900, 'algorithm': 'mst_kruskal'}
I0827 17:53:11.474684 134493687799808 run.py:730] (val) algo mst_prim step 8900: {'pi': 0.8330078125, 'score': 0.8330078125, 'examples_seen': 181563, 'step': 8900, 'algorithm': 'mst_prim'}
I0827 17:53:12.613828 134493687799808 run.py:730] (val) algo naive_string_matcher step 8900: {'match': 0.708984375, 'score': 0.708984375, 'examples_seen': 121729, 'step': 8900, 'algorithm': 'naive_string_matcher'}
I0827 17:53:12.665000 134493687799808 run.py:730] (val) algo optimal_bst step 8900: {'root': 0.8976535467128027, 'score': 0.8976535467128027, 'examples_seen': 54256, 'step': 8900, 'algorithm': 'optimal_bst'}
I0827 17:53:16.354012 134493687799808 run.py:730] (val) algo quickselect step 8900: {'median': 0.2080078125, 'score': 0.2080078125, 'examples_seen': 21455, 'step': 8900, 'algorithm': 'quickselect'}
I0827 17:53:16.499768 134493687799808 run.py:730] (val) algo quicksort step 8900: {'pred': 0.9404296875, 'score': 0.9404296875, 'examples_seen': 13523, 'step': 8900, 'algorithm': 'quicksort'}
I0827 17:53:17.001235 134493687799808 run.py:730] (val) algo segments_intersect step 8900: {'intersect': 0.693259385665529, 'score': 0.693259385665529, 'examples_seen': 227872, 'step': 8900, 'algorithm': 'segments_intersect'}
I0827 17:53:17.107006 134493687799808 run.py:730] (val) algo strongly_connected_components step 8900: {'scc_id': 0.775390625, 'score': 0.775390625, 'examples_seen': 10413, 'step': 8900, 'algorithm': 'strongly_connected_components'}
I0827 17:53:17.120978 134493687799808 run.py:730] (val) algo task_scheduling step 8900: {'selected': 0.9132569558101473, 'score': 0.9132569558101473, 'examples_seen': 54256, 'step': 8900, 'algorithm': 'task_scheduling'}
I0827 17:53:17.174916 134493687799808 run.py:730] (val) algo topological_sort step 8900: {'topo': 0.556640625, 'topo_head': 0.984375, 'score': 0.7705078125, 'examples_seen': 24781, 'step': 8900, 'algorithm': 'topological_sort'}
I0827 17:53:17.175096 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.752, val scores are: mst_kruskal: 0.783, mst_prim: 0.833, naive_string_matcher: 0.709, optimal_bst: 0.898, quickselect: 0.208, quicksort: 0.940, segments_intersect: 0.693, strongly_connected_components: 0.775, task_scheduling: 0.913, topological_sort: 0.771
I0827 17:53:34.381797 134493687799808 run.py:695] Algo mst_kruskal step 8950 current loss 0.070246, current_train_items 197507.
I0827 17:53:34.392199 134493687799808 run.py:695] Algo mst_prim step 8950 current loss 0.673505, current_train_items 182615.
I0827 17:53:34.401007 134493687799808 run.py:695] Algo naive_string_matcher step 8950 current loss 1.466625, current_train_items 122426.
I0827 17:53:34.413335 134493687799808 run.py:695] Algo optimal_bst step 8950 current loss 0.298751, current_train_items 54560.
I0827 17:53:34.491221 134493687799808 run.py:695] Algo quickselect step 8950 current loss 2.499460, current_train_items 21578.
I0827 17:53:34.501517 134493687799808 run.py:695] Algo quicksort step 8950 current loss 9.831190, current_train_items 13601.
I0827 17:53:34.519693 134493687799808 run.py:695] Algo segments_intersect step 8950 current loss 0.668372, current_train_items 229152.
I0827 17:53:34.530804 134493687799808 run.py:695] Algo strongly_connected_components step 8950 current loss 0.866093, current_train_items 10472.
I0827 17:53:34.548625 134493687799808 run.py:695] Algo task_scheduling step 8950 current loss 0.154422, current_train_items 54560.
I0827 17:53:34.560510 134493687799808 run.py:695] Algo topological_sort step 8950 current loss 1.044519, current_train_items 24922.
I0827 17:53:34.680087 134493687799808 run.py:730] (val) algo mst_kruskal step 8950: {'in_mst': 0.8311291963377417, 'score': 0.8311291963377417, 'examples_seen': 197507, 'step': 8950, 'algorithm': 'mst_kruskal'}
I0827 17:53:34.704353 134493687799808 run.py:730] (val) algo mst_prim step 8950: {'pi': 0.873046875, 'score': 0.873046875, 'examples_seen': 182615, 'step': 8950, 'algorithm': 'mst_prim'}
I0827 17:53:35.863512 134493687799808 run.py:730] (val) algo naive_string_matcher step 8950: {'match': 0.72119140625, 'score': 0.72119140625, 'examples_seen': 122426, 'step': 8950, 'algorithm': 'naive_string_matcher'}
I0827 17:53:35.916674 134493687799808 run.py:730] (val) algo optimal_bst step 8950: {'root': 0.910575259515571, 'score': 0.910575259515571, 'examples_seen': 54560, 'step': 8950, 'algorithm': 'optimal_bst'}
I0827 17:53:39.609039 134493687799808 run.py:730] (val) algo quickselect step 8950: {'median': 0.2275390625, 'score': 0.2275390625, 'examples_seen': 21578, 'step': 8950, 'algorithm': 'quickselect'}
I0827 17:53:39.754224 134493687799808 run.py:730] (val) algo quicksort step 8950: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 13601, 'step': 8950, 'algorithm': 'quicksort'}
I0827 17:53:40.275315 134493687799808 run.py:730] (val) algo segments_intersect step 8950: {'intersect': 0.5134196400378908, 'score': 0.5134196400378908, 'examples_seen': 229152, 'step': 8950, 'algorithm': 'segments_intersect'}
I0827 17:53:40.380918 134493687799808 run.py:730] (val) algo strongly_connected_components step 8950: {'scc_id': 0.7685546875, 'score': 0.7685546875, 'examples_seen': 10472, 'step': 8950, 'algorithm': 'strongly_connected_components'}
I0827 17:53:40.394777 134493687799808 run.py:730] (val) algo task_scheduling step 8950: {'selected': 0.9086499595796282, 'score': 0.9086499595796282, 'examples_seen': 54560, 'step': 8950, 'algorithm': 'task_scheduling'}
I0827 17:53:40.448943 134493687799808 run.py:730] (val) algo topological_sort step 8950: {'topo': 0.6533203125, 'topo_head': 1.0, 'score': 0.82666015625, 'examples_seen': 24922, 'step': 8950, 'algorithm': 'topological_sort'}
I0827 17:53:40.449226 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.753, val scores are: mst_kruskal: 0.831, mst_prim: 0.873, naive_string_matcher: 0.721, optimal_bst: 0.911, quickselect: 0.228, quicksort: 0.948, segments_intersect: 0.513, strongly_connected_components: 0.769, task_scheduling: 0.909, topological_sort: 0.827
I0827 17:53:57.402796 134493687799808 run.py:695] Algo mst_kruskal step 9000 current loss 0.096957, current_train_items 198623.
I0827 17:53:57.413627 134493687799808 run.py:695] Algo mst_prim step 9000 current loss 0.234766, current_train_items 183631.
I0827 17:53:57.422566 134493687799808 run.py:695] Algo naive_string_matcher step 9000 current loss 1.926006, current_train_items 123103.
I0827 17:53:57.435298 134493687799808 run.py:695] Algo optimal_bst step 9000 current loss 0.348775, current_train_items 54864.
I0827 17:53:57.513564 134493687799808 run.py:695] Algo quickselect step 9000 current loss 2.210333, current_train_items 21698.
I0827 17:53:57.524243 134493687799808 run.py:695] Algo quicksort step 9000 current loss 5.166285, current_train_items 13677.
I0827 17:53:57.541871 134493687799808 run.py:695] Algo segments_intersect step 9000 current loss 0.649105, current_train_items 230432.
I0827 17:53:57.553227 134493687799808 run.py:695] Algo strongly_connected_components step 9000 current loss 1.567487, current_train_items 10529.
I0827 17:53:57.571107 134493687799808 run.py:695] Algo task_scheduling step 9000 current loss 0.185654, current_train_items 54864.
I0827 17:53:57.583234 134493687799808 run.py:695] Algo topological_sort step 9000 current loss 1.441819, current_train_items 25061.
I0827 17:53:57.704655 134493687799808 run.py:730] (val) algo mst_kruskal step 9000: {'in_mst': 0.754746835443038, 'score': 0.754746835443038, 'examples_seen': 198623, 'step': 9000, 'algorithm': 'mst_kruskal'}
I0827 17:53:57.725678 134493687799808 run.py:730] (val) algo mst_prim step 9000: {'pi': 0.8369140625, 'score': 0.8369140625, 'examples_seen': 183631, 'step': 9000, 'algorithm': 'mst_prim'}
I0827 17:53:58.469465 134493687799808 run.py:730] (val) algo naive_string_matcher step 9000: {'match': 0.70263671875, 'score': 0.70263671875, 'examples_seen': 123103, 'step': 9000, 'algorithm': 'naive_string_matcher'}
I0827 17:53:58.517502 134493687799808 run.py:730] (val) algo optimal_bst step 9000: {'root': 0.9049524221453287, 'score': 0.9049524221453287, 'examples_seen': 54864, 'step': 9000, 'algorithm': 'optimal_bst'}
I0827 17:54:02.200370 134493687799808 run.py:730] (val) algo quickselect step 9000: {'median': 0.2041015625, 'score': 0.2041015625, 'examples_seen': 21698, 'step': 9000, 'algorithm': 'quickselect'}
I0827 17:54:02.345517 134493687799808 run.py:730] (val) algo quicksort step 9000: {'pred': 0.90234375, 'score': 0.90234375, 'examples_seen': 13677, 'step': 9000, 'algorithm': 'quicksort'}
I0827 17:54:02.857692 134493687799808 run.py:730] (val) algo segments_intersect step 9000: {'intersect': 0.61671469740634, 'score': 0.61671469740634, 'examples_seen': 230432, 'step': 9000, 'algorithm': 'segments_intersect'}
I0827 17:54:02.963568 134493687799808 run.py:730] (val) algo strongly_connected_components step 9000: {'scc_id': 0.7333984375, 'score': 0.7333984375, 'examples_seen': 10529, 'step': 9000, 'algorithm': 'strongly_connected_components'}
I0827 17:54:02.976977 134493687799808 run.py:730] (val) algo task_scheduling step 9000: {'selected': 0.904564315352697, 'score': 0.904564315352697, 'examples_seen': 54864, 'step': 9000, 'algorithm': 'task_scheduling'}
I0827 17:54:03.030376 134493687799808 run.py:730] (val) algo topological_sort step 9000: {'topo': 0.5966796875, 'topo_head': 0.96875, 'score': 0.78271484375, 'examples_seen': 25061, 'step': 9000, 'algorithm': 'topological_sort'}
I0827 17:54:03.030603 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.734, val scores are: mst_kruskal: 0.755, mst_prim: 0.837, naive_string_matcher: 0.703, optimal_bst: 0.905, quickselect: 0.204, quicksort: 0.902, segments_intersect: 0.617, strongly_connected_components: 0.733, task_scheduling: 0.905, topological_sort: 0.783
I0827 17:54:20.284838 134493687799808 run.py:695] Algo mst_kruskal step 9050 current loss 0.119851, current_train_items 199718.
I0827 17:54:20.296327 134493687799808 run.py:695] Algo mst_prim step 9050 current loss 0.534337, current_train_items 184665.
I0827 17:54:20.305988 134493687799808 run.py:695] Algo naive_string_matcher step 9050 current loss 1.467993, current_train_items 123797.
I0827 17:54:20.318847 134493687799808 run.py:695] Algo optimal_bst step 9050 current loss 0.385553, current_train_items 55168.
I0827 17:54:20.395438 134493687799808 run.py:695] Algo quickselect step 9050 current loss 2.057961, current_train_items 21814.
I0827 17:54:20.405978 134493687799808 run.py:695] Algo quicksort step 9050 current loss 0.000000, current_train_items 13753.
I0827 17:54:20.423281 134493687799808 run.py:695] Algo segments_intersect step 9050 current loss 0.592765, current_train_items 231712.
I0827 17:54:20.434641 134493687799808 run.py:695] Algo strongly_connected_components step 9050 current loss 0.000000, current_train_items 10589.
I0827 17:54:20.452951 134493687799808 run.py:695] Algo task_scheduling step 9050 current loss 0.158889, current_train_items 55168.
I0827 17:54:20.465380 134493687799808 run.py:695] Algo topological_sort step 9050 current loss 1.194427, current_train_items 25201.
I0827 17:54:20.581372 134493687799808 run.py:730] (val) algo mst_kruskal step 9050: {'in_mst': 0.8159021406727829, 'score': 0.8159021406727829, 'examples_seen': 199718, 'step': 9050, 'algorithm': 'mst_kruskal'}
I0827 17:54:20.603424 134493687799808 run.py:730] (val) algo mst_prim step 9050: {'pi': 0.822265625, 'score': 0.822265625, 'examples_seen': 184665, 'step': 9050, 'algorithm': 'mst_prim'}
I0827 17:54:21.347023 134493687799808 run.py:730] (val) algo naive_string_matcher step 9050: {'match': 0.7333984375, 'score': 0.7333984375, 'examples_seen': 123797, 'step': 9050, 'algorithm': 'naive_string_matcher'}
I0827 17:54:21.395007 134493687799808 run.py:730] (val) algo optimal_bst step 9050: {'root': 0.8807309688581315, 'score': 0.8807309688581315, 'examples_seen': 55168, 'step': 9050, 'algorithm': 'optimal_bst'}
I0827 17:54:25.090283 134493687799808 run.py:730] (val) algo quickselect step 9050: {'median': 0.208984375, 'score': 0.208984375, 'examples_seen': 21814, 'step': 9050, 'algorithm': 'quickselect'}
I0827 17:54:25.235622 134493687799808 run.py:730] (val) algo quicksort step 9050: {'pred': 0.93359375, 'score': 0.93359375, 'examples_seen': 13753, 'step': 9050, 'algorithm': 'quicksort'}
I0827 17:54:25.741975 134493687799808 run.py:730] (val) algo segments_intersect step 9050: {'intersect': 0.6699507389162562, 'score': 0.6699507389162562, 'examples_seen': 231712, 'step': 9050, 'algorithm': 'segments_intersect'}
I0827 17:54:25.850832 134493687799808 run.py:730] (val) algo strongly_connected_components step 9050: {'scc_id': 0.71484375, 'score': 0.71484375, 'examples_seen': 10589, 'step': 9050, 'algorithm': 'strongly_connected_components'}
I0827 17:54:25.864155 134493687799808 run.py:730] (val) algo task_scheduling step 9050: {'selected': 0.9423676012461059, 'score': 0.9423676012461059, 'examples_seen': 55168, 'step': 9050, 'algorithm': 'task_scheduling'}
I0827 17:54:25.917989 134493687799808 run.py:730] (val) algo topological_sort step 9050: {'topo': 0.6640625, 'topo_head': 1.0, 'score': 0.83203125, 'examples_seen': 25201, 'step': 9050, 'algorithm': 'topological_sort'}
I0827 17:54:25.918154 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.755, val scores are: mst_kruskal: 0.816, mst_prim: 0.822, naive_string_matcher: 0.733, optimal_bst: 0.881, quickselect: 0.209, quicksort: 0.934, segments_intersect: 0.670, strongly_connected_components: 0.715, task_scheduling: 0.942, topological_sort: 0.832
I0827 17:54:42.948020 134493687799808 run.py:695] Algo mst_kruskal step 9100 current loss 0.089296, current_train_items 200835.
I0827 17:54:42.959105 134493687799808 run.py:695] Algo mst_prim step 9100 current loss 0.554121, current_train_items 185670.
I0827 17:54:42.967923 134493687799808 run.py:695] Algo naive_string_matcher step 9100 current loss 1.116225, current_train_items 124479.
I0827 17:54:42.979744 134493687799808 run.py:695] Algo optimal_bst step 9100 current loss 0.711194, current_train_items 55472.
I0827 17:54:43.058987 134493687799808 run.py:695] Algo quickselect step 9100 current loss 2.576400, current_train_items 21934.
I0827 17:54:43.069730 134493687799808 run.py:695] Algo quicksort step 9100 current loss 0.000000, current_train_items 13829.
I0827 17:54:43.087374 134493687799808 run.py:695] Algo segments_intersect step 9100 current loss 0.647637, current_train_items 232992.
I0827 17:54:43.098340 134493687799808 run.py:695] Algo strongly_connected_components step 9100 current loss 1.515654, current_train_items 10646.
I0827 17:54:43.117195 134493687799808 run.py:695] Algo task_scheduling step 9100 current loss 2.424699, current_train_items 55472.
I0827 17:54:43.128929 134493687799808 run.py:695] Algo topological_sort step 9100 current loss 1.164453, current_train_items 25340.
I0827 17:54:43.244863 134493687799808 run.py:730] (val) algo mst_kruskal step 9100: {'in_mst': 0.8612612612612612, 'score': 0.8612612612612612, 'examples_seen': 200835, 'step': 9100, 'algorithm': 'mst_kruskal'}
I0827 17:54:43.265999 134493687799808 run.py:730] (val) algo mst_prim step 9100: {'pi': 0.8359375, 'score': 0.8359375, 'examples_seen': 185670, 'step': 9100, 'algorithm': 'mst_prim'}
I0827 17:54:44.012780 134493687799808 run.py:730] (val) algo naive_string_matcher step 9100: {'match': 0.702392578125, 'score': 0.702392578125, 'examples_seen': 124479, 'step': 9100, 'algorithm': 'naive_string_matcher'}
I0827 17:54:44.060773 134493687799808 run.py:730] (val) algo optimal_bst step 9100: {'root': 0.8818663494809689, 'score': 0.8818663494809689, 'examples_seen': 55472, 'step': 9100, 'algorithm': 'optimal_bst'}
I0827 17:54:47.782632 134493687799808 run.py:730] (val) algo quickselect step 9100: {'median': 0.21337890625, 'score': 0.21337890625, 'examples_seen': 21934, 'step': 9100, 'algorithm': 'quickselect'}
I0827 17:54:47.932810 134493687799808 run.py:730] (val) algo quicksort step 9100: {'pred': 0.96875, 'score': 0.96875, 'examples_seen': 13829, 'step': 9100, 'algorithm': 'quicksort'}
I0827 17:54:48.813550 134493687799808 run.py:730] (val) algo segments_intersect step 9100: {'intersect': 0.6341979883536263, 'score': 0.6341979883536263, 'examples_seen': 232992, 'step': 9100, 'algorithm': 'segments_intersect'}
I0827 17:54:48.919111 134493687799808 run.py:730] (val) algo strongly_connected_components step 9100: {'scc_id': 0.7001953125, 'score': 0.7001953125, 'examples_seen': 10646, 'step': 9100, 'algorithm': 'strongly_connected_components'}
I0827 17:54:48.932598 134493687799808 run.py:730] (val) algo task_scheduling step 9100: {'selected': 0.9267900241351569, 'score': 0.9267900241351569, 'examples_seen': 55472, 'step': 9100, 'algorithm': 'task_scheduling'}
I0827 17:54:48.986606 134493687799808 run.py:730] (val) algo topological_sort step 9100: {'topo': 0.6015625, 'topo_head': 1.0, 'score': 0.80078125, 'examples_seen': 25340, 'step': 9100, 'algorithm': 'topological_sort'}
I0827 17:54:48.986802 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.753, val scores are: mst_kruskal: 0.861, mst_prim: 0.836, naive_string_matcher: 0.702, optimal_bst: 0.882, quickselect: 0.213, quicksort: 0.969, segments_intersect: 0.634, strongly_connected_components: 0.700, task_scheduling: 0.927, topological_sort: 0.801
I0827 17:55:05.672291 134493687799808 run.py:695] Algo mst_kruskal step 9150 current loss 0.099022, current_train_items 201944.
I0827 17:55:05.682674 134493687799808 run.py:695] Algo mst_prim step 9150 current loss 0.483085, current_train_items 186679.
I0827 17:55:05.691836 134493687799808 run.py:695] Algo naive_string_matcher step 9150 current loss 1.043972, current_train_items 125177.
I0827 17:55:05.703901 134493687799808 run.py:695] Algo optimal_bst step 9150 current loss 0.000000, current_train_items 55776.
I0827 17:55:05.781564 134493687799808 run.py:695] Algo quickselect step 9150 current loss 2.844856, current_train_items 22057.
I0827 17:55:05.792311 134493687799808 run.py:695] Algo quicksort step 9150 current loss 2.163810, current_train_items 13902.
I0827 17:55:05.810155 134493687799808 run.py:695] Algo segments_intersect step 9150 current loss 0.624781, current_train_items 234272.
I0827 17:55:05.821182 134493687799808 run.py:695] Algo strongly_connected_components step 9150 current loss 0.000000, current_train_items 10703.
I0827 17:55:05.838924 134493687799808 run.py:695] Algo task_scheduling step 9150 current loss 0.000000, current_train_items 55776.
I0827 17:55:05.850526 134493687799808 run.py:695] Algo topological_sort step 9150 current loss 2.616017, current_train_items 25477.
I0827 17:55:05.960992 134493687799808 run.py:730] (val) algo mst_kruskal step 9150: {'in_mst': 0.8427532176832679, 'score': 0.8427532176832679, 'examples_seen': 201944, 'step': 9150, 'algorithm': 'mst_kruskal'}
I0827 17:55:05.982089 134493687799808 run.py:730] (val) algo mst_prim step 9150: {'pi': 0.849609375, 'score': 0.849609375, 'examples_seen': 186679, 'step': 9150, 'algorithm': 'mst_prim'}
I0827 17:55:06.731373 134493687799808 run.py:730] (val) algo naive_string_matcher step 9150: {'match': 0.70849609375, 'score': 0.70849609375, 'examples_seen': 125177, 'step': 9150, 'algorithm': 'naive_string_matcher'}
I0827 17:55:06.779126 134493687799808 run.py:730] (val) algo optimal_bst step 9150: {'root': 0.898356401384083, 'score': 0.898356401384083, 'examples_seen': 55776, 'step': 9150, 'algorithm': 'optimal_bst'}
I0827 17:55:10.477719 134493687799808 run.py:730] (val) algo quickselect step 9150: {'median': 0.21484375, 'score': 0.21484375, 'examples_seen': 22057, 'step': 9150, 'algorithm': 'quickselect'}
I0827 17:55:10.623838 134493687799808 run.py:730] (val) algo quicksort step 9150: {'pred': 0.94921875, 'score': 0.94921875, 'examples_seen': 13902, 'step': 9150, 'algorithm': 'quicksort'}
I0827 17:55:11.359025 134493687799808 run.py:730] (val) algo segments_intersect step 9150: {'intersect': 0.625, 'score': 0.625, 'examples_seen': 234272, 'step': 9150, 'algorithm': 'segments_intersect'}
I0827 17:55:11.467142 134493687799808 run.py:730] (val) algo strongly_connected_components step 9150: {'scc_id': 0.68359375, 'score': 0.68359375, 'examples_seen': 10703, 'step': 9150, 'algorithm': 'strongly_connected_components'}
I0827 17:55:11.488286 134493687799808 run.py:730] (val) algo task_scheduling step 9150: {'selected': 0.909688013136289, 'score': 0.909688013136289, 'examples_seen': 55776, 'step': 9150, 'algorithm': 'task_scheduling'}
I0827 17:55:11.544731 134493687799808 run.py:730] (val) algo topological_sort step 9150: {'topo': 0.6611328125, 'topo_head': 0.984375, 'score': 0.82275390625, 'examples_seen': 25477, 'step': 9150, 'algorithm': 'topological_sort'}
I0827 17:55:11.544966 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.750, val scores are: mst_kruskal: 0.843, mst_prim: 0.850, naive_string_matcher: 0.708, optimal_bst: 0.898, quickselect: 0.215, quicksort: 0.949, segments_intersect: 0.625, strongly_connected_components: 0.684, task_scheduling: 0.910, topological_sort: 0.823
I0827 17:55:29.456786 134493687799808 run.py:695] Algo mst_kruskal step 9200 current loss 0.125459, current_train_items 203084.
I0827 17:55:29.467171 134493687799808 run.py:695] Algo mst_prim step 9200 current loss 0.356420, current_train_items 187717.
I0827 17:55:29.475726 134493687799808 run.py:695] Algo naive_string_matcher step 9200 current loss 1.493398, current_train_items 125876.
I0827 17:55:29.487881 134493687799808 run.py:695] Algo optimal_bst step 9200 current loss 0.000000, current_train_items 56080.
I0827 17:55:29.567356 134493687799808 run.py:695] Algo quickselect step 9200 current loss 2.124644, current_train_items 22178.
I0827 17:55:29.579581 134493687799808 run.py:695] Algo quicksort step 9200 current loss 0.000000, current_train_items 13979.
I0827 17:55:29.597718 134493687799808 run.py:695] Algo segments_intersect step 9200 current loss 0.711102, current_train_items 235552.
I0827 17:55:29.609756 134493687799808 run.py:695] Algo strongly_connected_components step 9200 current loss 0.000000, current_train_items 10764.
I0827 17:55:29.627343 134493687799808 run.py:695] Algo task_scheduling step 9200 current loss 0.000000, current_train_items 56080.
I0827 17:55:29.638973 134493687799808 run.py:695] Algo topological_sort step 9200 current loss 2.643347, current_train_items 25616.
I0827 17:55:29.761871 134493687799808 run.py:730] (val) algo mst_kruskal step 9200: {'in_mst': 0.7871198568872989, 'score': 0.7871198568872989, 'examples_seen': 203084, 'step': 9200, 'algorithm': 'mst_kruskal'}
I0827 17:55:29.782858 134493687799808 run.py:730] (val) algo mst_prim step 9200: {'pi': 0.8603515625, 'score': 0.8603515625, 'examples_seen': 187717, 'step': 9200, 'algorithm': 'mst_prim'}
I0827 17:55:30.530672 134493687799808 run.py:730] (val) algo naive_string_matcher step 9200: {'match': 0.73095703125, 'score': 0.73095703125, 'examples_seen': 125876, 'step': 9200, 'algorithm': 'naive_string_matcher'}
I0827 17:55:30.578540 134493687799808 run.py:730] (val) algo optimal_bst step 9200: {'root': 0.8957612456747405, 'score': 0.8957612456747405, 'examples_seen': 56080, 'step': 9200, 'algorithm': 'optimal_bst'}
I0827 17:55:34.270971 134493687799808 run.py:730] (val) algo quickselect step 9200: {'median': 0.200439453125, 'score': 0.200439453125, 'examples_seen': 22178, 'step': 9200, 'algorithm': 'quickselect'}
I0827 17:55:34.416867 134493687799808 run.py:730] (val) algo quicksort step 9200: {'pred': 0.943359375, 'score': 0.943359375, 'examples_seen': 13979, 'step': 9200, 'algorithm': 'quicksort'}
I0827 17:55:35.048810 134493687799808 run.py:730] (val) algo segments_intersect step 9200: {'intersect': 0.6373031496062992, 'score': 0.6373031496062992, 'examples_seen': 235552, 'step': 9200, 'algorithm': 'segments_intersect'}
I0827 17:55:35.157644 134493687799808 run.py:730] (val) algo strongly_connected_components step 9200: {'scc_id': 0.6728515625, 'score': 0.6728515625, 'examples_seen': 10764, 'step': 9200, 'algorithm': 'strongly_connected_components'}
I0827 17:55:35.178726 134493687799808 run.py:730] (val) algo task_scheduling step 9200: {'selected': 0.8903544929925804, 'score': 0.8903544929925804, 'examples_seen': 56080, 'step': 9200, 'algorithm': 'task_scheduling'}
I0827 17:55:35.233838 134493687799808 run.py:730] (val) algo topological_sort step 9200: {'topo': 0.6533203125, 'topo_head': 1.0, 'score': 0.82666015625, 'examples_seen': 25616, 'step': 9200, 'algorithm': 'topological_sort'}
I0827 17:55:35.234040 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.745, val scores are: mst_kruskal: 0.787, mst_prim: 0.860, naive_string_matcher: 0.731, optimal_bst: 0.896, quickselect: 0.200, quicksort: 0.943, segments_intersect: 0.637, strongly_connected_components: 0.673, task_scheduling: 0.890, topological_sort: 0.827
I0827 17:55:52.618092 134493687799808 run.py:695] Algo mst_kruskal step 9250 current loss 0.102957, current_train_items 204203.
I0827 17:55:52.627774 134493687799808 run.py:695] Algo mst_prim step 9250 current loss 0.571784, current_train_items 188719.
I0827 17:55:52.636826 134493687799808 run.py:695] Algo naive_string_matcher step 9250 current loss 1.883353, current_train_items 126548.
I0827 17:55:52.648462 134493687799808 run.py:695] Algo optimal_bst step 9250 current loss 0.000000, current_train_items 56384.
I0827 17:55:52.727607 134493687799808 run.py:695] Algo quickselect step 9250 current loss 3.266950, current_train_items 22295.
I0827 17:55:52.738094 134493687799808 run.py:695] Algo quicksort step 9250 current loss 3.762297, current_train_items 14057.
I0827 17:55:52.755622 134493687799808 run.py:695] Algo segments_intersect step 9250 current loss 0.626857, current_train_items 236832.
I0827 17:55:52.766742 134493687799808 run.py:695] Algo strongly_connected_components step 9250 current loss 0.325885, current_train_items 10822.
I0827 17:55:52.784409 134493687799808 run.py:695] Algo task_scheduling step 9250 current loss 0.000000, current_train_items 56384.
I0827 17:55:52.796731 134493687799808 run.py:695] Algo topological_sort step 9250 current loss 2.545036, current_train_items 25756.
I0827 17:55:52.911391 134493687799808 run.py:730] (val) algo mst_kruskal step 9250: {'in_mst': 0.6828402366863905, 'score': 0.6828402366863905, 'examples_seen': 204203, 'step': 9250, 'algorithm': 'mst_kruskal'}
I0827 17:55:52.932705 134493687799808 run.py:730] (val) algo mst_prim step 9250: {'pi': 0.8447265625, 'score': 0.8447265625, 'examples_seen': 188719, 'step': 9250, 'algorithm': 'mst_prim'}
I0827 17:55:53.679716 134493687799808 run.py:730] (val) algo naive_string_matcher step 9250: {'match': 0.715087890625, 'score': 0.715087890625, 'examples_seen': 126548, 'step': 9250, 'algorithm': 'naive_string_matcher'}
I0827 17:55:53.727802 134493687799808 run.py:730] (val) algo optimal_bst step 9250: {'root': 0.9030601211072664, 'score': 0.9030601211072664, 'examples_seen': 56384, 'step': 9250, 'algorithm': 'optimal_bst'}
I0827 17:55:57.415820 134493687799808 run.py:730] (val) algo quickselect step 9250: {'median': 0.194580078125, 'score': 0.194580078125, 'examples_seen': 22295, 'step': 9250, 'algorithm': 'quickselect'}
I0827 17:55:57.561488 134493687799808 run.py:730] (val) algo quicksort step 9250: {'pred': 0.9208984375, 'score': 0.9208984375, 'examples_seen': 14057, 'step': 9250, 'algorithm': 'quicksort'}
I0827 17:55:58.052819 134493687799808 run.py:730] (val) algo segments_intersect step 9250: {'intersect': 0.6037226868087402, 'score': 0.6037226868087402, 'examples_seen': 236832, 'step': 9250, 'algorithm': 'segments_intersect'}
I0827 17:55:58.157393 134493687799808 run.py:730] (val) algo strongly_connected_components step 9250: {'scc_id': 0.7939453125, 'score': 0.7939453125, 'examples_seen': 10822, 'step': 9250, 'algorithm': 'strongly_connected_components'}
I0827 17:55:58.171026 134493687799808 run.py:730] (val) algo task_scheduling step 9250: {'selected': 0.9205607476635513, 'score': 0.9205607476635513, 'examples_seen': 56384, 'step': 9250, 'algorithm': 'task_scheduling'}
I0827 17:55:58.225239 134493687799808 run.py:730] (val) algo topological_sort step 9250: {'topo': 0.6240234375, 'topo_head': 1.0, 'score': 0.81201171875, 'examples_seen': 25756, 'step': 9250, 'algorithm': 'topological_sort'}
I0827 17:55:58.225407 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.739, val scores are: mst_kruskal: 0.683, mst_prim: 0.845, naive_string_matcher: 0.715, optimal_bst: 0.903, quickselect: 0.195, quicksort: 0.921, segments_intersect: 0.604, strongly_connected_components: 0.794, task_scheduling: 0.921, topological_sort: 0.812
I0827 17:56:15.787946 134493687799808 run.py:695] Algo mst_kruskal step 9300 current loss 0.092933, current_train_items 205314.
I0827 17:56:15.798518 134493687799808 run.py:695] Algo mst_prim step 9300 current loss 0.474213, current_train_items 189735.
I0827 17:56:15.808540 134493687799808 run.py:695] Algo naive_string_matcher step 9300 current loss 1.417343, current_train_items 127241.
I0827 17:56:15.820330 134493687799808 run.py:695] Algo optimal_bst step 9300 current loss 0.000000, current_train_items 56688.
I0827 17:56:15.897346 134493687799808 run.py:695] Algo quickselect step 9300 current loss 2.261151, current_train_items 22403.
I0827 17:56:15.910422 134493687799808 run.py:695] Algo quicksort step 9300 current loss 2.769682, current_train_items 14132.
I0827 17:56:15.929365 134493687799808 run.py:695] Algo segments_intersect step 9300 current loss 0.629739, current_train_items 238112.
I0827 17:56:15.942159 134493687799808 run.py:695] Algo strongly_connected_components step 9300 current loss 0.605849, current_train_items 10880.
I0827 17:56:15.959587 134493687799808 run.py:695] Algo task_scheduling step 9300 current loss 0.000000, current_train_items 56688.
I0827 17:56:15.971843 134493687799808 run.py:695] Algo topological_sort step 9300 current loss 1.641058, current_train_items 25897.
I0827 17:56:16.091721 134493687799808 run.py:730] (val) algo mst_kruskal step 9300: {'in_mst': 0.7952840300107182, 'score': 0.7952840300107182, 'examples_seen': 205314, 'step': 9300, 'algorithm': 'mst_kruskal'}
I0827 17:56:16.113188 134493687799808 run.py:730] (val) algo mst_prim step 9300: {'pi': 0.822265625, 'score': 0.822265625, 'examples_seen': 189735, 'step': 9300, 'algorithm': 'mst_prim'}
I0827 17:56:16.858318 134493687799808 run.py:730] (val) algo naive_string_matcher step 9300: {'match': 0.72802734375, 'score': 0.72802734375, 'examples_seen': 127241, 'step': 9300, 'algorithm': 'naive_string_matcher'}
I0827 17:56:16.906004 134493687799808 run.py:730] (val) algo optimal_bst step 9300: {'root': 0.895544982698962, 'score': 0.895544982698962, 'examples_seen': 56688, 'step': 9300, 'algorithm': 'optimal_bst'}
I0827 17:56:20.597280 134493687799808 run.py:730] (val) algo quickselect step 9300: {'median': 0.17724609375, 'score': 0.17724609375, 'examples_seen': 22403, 'step': 9300, 'algorithm': 'quickselect'}
I0827 17:56:20.742600 134493687799808 run.py:730] (val) algo quicksort step 9300: {'pred': 0.9013671875, 'score': 0.9013671875, 'examples_seen': 14132, 'step': 9300, 'algorithm': 'quicksort'}
I0827 17:56:21.260496 134493687799808 run.py:730] (val) algo segments_intersect step 9300: {'intersect': 0.6850852579322252, 'score': 0.6850852579322252, 'examples_seen': 238112, 'step': 9300, 'algorithm': 'segments_intersect'}
I0827 17:56:21.366401 134493687799808 run.py:730] (val) algo strongly_connected_components step 9300: {'scc_id': 0.716796875, 'score': 0.716796875, 'examples_seen': 10880, 'step': 9300, 'algorithm': 'strongly_connected_components'}
I0827 17:56:21.380106 134493687799808 run.py:730] (val) algo task_scheduling step 9300: {'selected': 0.8749999999999999, 'score': 0.8749999999999999, 'examples_seen': 56688, 'step': 9300, 'algorithm': 'task_scheduling'}
I0827 17:56:21.434149 134493687799808 run.py:730] (val) algo topological_sort step 9300: {'topo': 0.599609375, 'topo_head': 1.0, 'score': 0.7998046875, 'examples_seen': 25897, 'step': 9300, 'algorithm': 'topological_sort'}
I0827 17:56:21.434325 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.740, val scores are: mst_kruskal: 0.795, mst_prim: 0.822, naive_string_matcher: 0.728, optimal_bst: 0.896, quickselect: 0.177, quicksort: 0.901, segments_intersect: 0.685, strongly_connected_components: 0.717, task_scheduling: 0.875, topological_sort: 0.800
I0827 17:56:39.144556 134493687799808 run.py:695] Algo mst_kruskal step 9350 current loss 0.122460, current_train_items 206440.
I0827 17:56:39.155246 134493687799808 run.py:695] Algo mst_prim step 9350 current loss 0.236991, current_train_items 190756.
I0827 17:56:39.172131 134493687799808 run.py:695] Algo naive_string_matcher step 9350 current loss 1.513665, current_train_items 127897.
I0827 17:56:39.187253 134493687799808 run.py:695] Algo optimal_bst step 9350 current loss 0.000000, current_train_items 56992.
I0827 17:56:39.262514 134493687799808 run.py:695] Algo quickselect step 9350 current loss 1.849073, current_train_items 22522.
I0827 17:56:39.274564 134493687799808 run.py:695] Algo quicksort step 9350 current loss 4.349993, current_train_items 14211.
I0827 17:56:39.290889 134493687799808 run.py:695] Algo segments_intersect step 9350 current loss 0.710847, current_train_items 239392.
I0827 17:56:39.301197 134493687799808 run.py:695] Algo strongly_connected_components step 9350 current loss 0.469280, current_train_items 10940.
I0827 17:56:39.319233 134493687799808 run.py:695] Algo task_scheduling step 9350 current loss 0.000000, current_train_items 56992.
I0827 17:56:39.330315 134493687799808 run.py:695] Algo topological_sort step 9350 current loss 2.519187, current_train_items 26034.
I0827 17:56:39.445416 134493687799808 run.py:730] (val) algo mst_kruskal step 9350: {'in_mst': 0.8711217183770882, 'score': 0.8711217183770882, 'examples_seen': 206440, 'step': 9350, 'algorithm': 'mst_kruskal'}
I0827 17:56:39.466568 134493687799808 run.py:730] (val) algo mst_prim step 9350: {'pi': 0.8466796875, 'score': 0.8466796875, 'examples_seen': 190756, 'step': 9350, 'algorithm': 'mst_prim'}
I0827 17:56:40.213600 134493687799808 run.py:730] (val) algo naive_string_matcher step 9350: {'match': 0.70751953125, 'score': 0.70751953125, 'examples_seen': 127897, 'step': 9350, 'algorithm': 'naive_string_matcher'}
I0827 17:56:40.261297 134493687799808 run.py:730] (val) algo optimal_bst step 9350: {'root': 0.8820826124567474, 'score': 0.8820826124567474, 'examples_seen': 56992, 'step': 9350, 'algorithm': 'optimal_bst'}
I0827 17:56:43.961942 134493687799808 run.py:730] (val) algo quickselect step 9350: {'median': 0.21337890625, 'score': 0.21337890625, 'examples_seen': 22522, 'step': 9350, 'algorithm': 'quickselect'}
I0827 17:56:44.106819 134493687799808 run.py:730] (val) algo quicksort step 9350: {'pred': 0.9462890625, 'score': 0.9462890625, 'examples_seen': 14211, 'step': 9350, 'algorithm': 'quicksort'}
I0827 17:56:44.594586 134493687799808 run.py:730] (val) algo segments_intersect step 9350: {'intersect': 0.6528497409326426, 'score': 0.6528497409326426, 'examples_seen': 239392, 'step': 9350, 'algorithm': 'segments_intersect'}
I0827 17:56:44.700027 134493687799808 run.py:730] (val) algo strongly_connected_components step 9350: {'scc_id': 0.7490234375, 'score': 0.7490234375, 'examples_seen': 10940, 'step': 9350, 'algorithm': 'strongly_connected_components'}
I0827 17:56:44.713745 134493687799808 run.py:730] (val) algo task_scheduling step 9350: {'selected': 0.8801341156747695, 'score': 0.8801341156747695, 'examples_seen': 56992, 'step': 9350, 'algorithm': 'task_scheduling'}
I0827 17:56:44.767980 134493687799808 run.py:730] (val) algo topological_sort step 9350: {'topo': 0.6142578125, 'topo_head': 0.984375, 'score': 0.79931640625, 'examples_seen': 26034, 'step': 9350, 'algorithm': 'topological_sort'}
I0827 17:56:44.768175 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.755, val scores are: mst_kruskal: 0.871, mst_prim: 0.847, naive_string_matcher: 0.708, optimal_bst: 0.882, quickselect: 0.213, quicksort: 0.946, segments_intersect: 0.653, strongly_connected_components: 0.749, task_scheduling: 0.880, topological_sort: 0.799
I0827 17:57:03.019899 134493687799808 run.py:695] Algo mst_kruskal step 9400 current loss 0.098178, current_train_items 207579.
I0827 17:57:03.030116 134493687799808 run.py:695] Algo mst_prim step 9400 current loss 0.465381, current_train_items 191764.
I0827 17:57:03.038427 134493687799808 run.py:695] Algo naive_string_matcher step 9400 current loss 1.377762, current_train_items 128589.
I0827 17:57:03.049966 134493687799808 run.py:695] Algo optimal_bst step 9400 current loss 0.000000, current_train_items 57296.
I0827 17:57:03.127575 134493687799808 run.py:695] Algo quickselect step 9400 current loss 2.230957, current_train_items 22643.
I0827 17:57:03.137775 134493687799808 run.py:695] Algo quicksort step 9400 current loss 14.296129, current_train_items 14288.
I0827 17:57:03.156655 134493687799808 run.py:695] Algo segments_intersect step 9400 current loss 0.624153, current_train_items 240672.
I0827 17:57:03.167967 134493687799808 run.py:695] Algo strongly_connected_components step 9400 current loss 1.179824, current_train_items 10998.
I0827 17:57:03.186387 134493687799808 run.py:695] Algo task_scheduling step 9400 current loss 0.000000, current_train_items 57296.
I0827 17:57:03.198284 134493687799808 run.py:695] Algo topological_sort step 9400 current loss 1.259826, current_train_items 26171.
I0827 17:57:03.317246 134493687799808 run.py:730] (val) algo mst_kruskal step 9400: {'in_mst': 0.8103368712505767, 'score': 0.8103368712505767, 'examples_seen': 207579, 'step': 9400, 'algorithm': 'mst_kruskal'}
I0827 17:57:03.338758 134493687799808 run.py:730] (val) algo mst_prim step 9400: {'pi': 0.8154296875, 'score': 0.8154296875, 'examples_seen': 191764, 'step': 9400, 'algorithm': 'mst_prim'}
I0827 17:57:04.082351 134493687799808 run.py:730] (val) algo naive_string_matcher step 9400: {'match': 0.699462890625, 'score': 0.699462890625, 'examples_seen': 128589, 'step': 9400, 'algorithm': 'naive_string_matcher'}
I0827 17:57:04.129783 134493687799808 run.py:730] (val) algo optimal_bst step 9400: {'root': 0.8955990484429066, 'score': 0.8955990484429066, 'examples_seen': 57296, 'step': 9400, 'algorithm': 'optimal_bst'}
I0827 17:57:07.828769 134493687799808 run.py:730] (val) algo quickselect step 9400: {'median': 0.21337890625, 'score': 0.21337890625, 'examples_seen': 22643, 'step': 9400, 'algorithm': 'quickselect'}
I0827 17:57:07.976789 134493687799808 run.py:730] (val) algo quicksort step 9400: {'pred': 0.8623046875, 'score': 0.8623046875, 'examples_seen': 14288, 'step': 9400, 'algorithm': 'quicksort'}
I0827 17:57:08.475068 134493687799808 run.py:730] (val) algo segments_intersect step 9400: {'intersect': 0.6462450592885376, 'score': 0.6462450592885376, 'examples_seen': 240672, 'step': 9400, 'algorithm': 'segments_intersect'}
I0827 17:57:08.580342 134493687799808 run.py:730] (val) algo strongly_connected_components step 9400: {'scc_id': 0.7470703125, 'score': 0.7470703125, 'examples_seen': 10998, 'step': 9400, 'algorithm': 'strongly_connected_components'}
I0827 17:57:08.594554 134493687799808 run.py:730] (val) algo task_scheduling step 9400: {'selected': 0.9063794531897267, 'score': 0.9063794531897267, 'examples_seen': 57296, 'step': 9400, 'algorithm': 'task_scheduling'}
I0827 17:57:08.648107 134493687799808 run.py:730] (val) algo topological_sort step 9400: {'topo': 0.619140625, 'topo_head': 1.0, 'score': 0.8095703125, 'examples_seen': 26171, 'step': 9400, 'algorithm': 'topological_sort'}
I0827 17:57:08.648273 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.741, val scores are: mst_kruskal: 0.810, mst_prim: 0.815, naive_string_matcher: 0.699, optimal_bst: 0.896, quickselect: 0.213, quicksort: 0.862, segments_intersect: 0.646, strongly_connected_components: 0.747, task_scheduling: 0.906, topological_sort: 0.810
I0827 17:57:26.327141 134493687799808 run.py:695] Algo mst_kruskal step 9450 current loss 0.103542, current_train_items 208688.
I0827 17:57:26.337482 134493687799808 run.py:695] Algo mst_prim step 9450 current loss 0.254523, current_train_items 192761.
I0827 17:57:26.346385 134493687799808 run.py:695] Algo naive_string_matcher step 9450 current loss 1.324392, current_train_items 129288.
I0827 17:57:26.358247 134493687799808 run.py:695] Algo optimal_bst step 9450 current loss 0.000000, current_train_items 57600.
I0827 17:57:26.436873 134493687799808 run.py:695] Algo quickselect step 9450 current loss 2.146462, current_train_items 22757.
I0827 17:57:26.447063 134493687799808 run.py:695] Algo quicksort step 9450 current loss 0.198808, current_train_items 14365.
I0827 17:57:26.464516 134493687799808 run.py:695] Algo segments_intersect step 9450 current loss 0.694406, current_train_items 241952.
I0827 17:57:26.474668 134493687799808 run.py:695] Algo strongly_connected_components step 9450 current loss 0.000000, current_train_items 11054.
I0827 17:57:26.492875 134493687799808 run.py:695] Algo task_scheduling step 9450 current loss 0.000000, current_train_items 57600.
I0827 17:57:26.504621 134493687799808 run.py:695] Algo topological_sort step 9450 current loss 1.989808, current_train_items 26311.
I0827 17:57:26.624407 134493687799808 run.py:730] (val) algo mst_kruskal step 9450: {'in_mst': 0.8144016227180527, 'score': 0.8144016227180527, 'examples_seen': 208688, 'step': 9450, 'algorithm': 'mst_kruskal'}
I0827 17:57:26.645523 134493687799808 run.py:730] (val) algo mst_prim step 9450: {'pi': 0.8466796875, 'score': 0.8466796875, 'examples_seen': 192761, 'step': 9450, 'algorithm': 'mst_prim'}
I0827 17:57:27.389506 134493687799808 run.py:730] (val) algo naive_string_matcher step 9450: {'match': 0.720703125, 'score': 0.720703125, 'examples_seen': 129288, 'step': 9450, 'algorithm': 'naive_string_matcher'}
I0827 17:57:27.437629 134493687799808 run.py:730] (val) algo optimal_bst step 9450: {'root': 0.8966262975778547, 'score': 0.8966262975778547, 'examples_seen': 57600, 'step': 9450, 'algorithm': 'optimal_bst'}
I0827 17:57:31.123036 134493687799808 run.py:730] (val) algo quickselect step 9450: {'median': 0.22265625, 'score': 0.22265625, 'examples_seen': 22757, 'step': 9450, 'algorithm': 'quickselect'}
I0827 17:57:31.269191 134493687799808 run.py:730] (val) algo quicksort step 9450: {'pred': 0.9130859375, 'score': 0.9130859375, 'examples_seen': 14365, 'step': 9450, 'algorithm': 'quicksort'}
I0827 17:57:31.771911 134493687799808 run.py:730] (val) algo segments_intersect step 9450: {'intersect': 0.6320640310453552, 'score': 0.6320640310453552, 'examples_seen': 241952, 'step': 9450, 'algorithm': 'segments_intersect'}
I0827 17:57:31.876842 134493687799808 run.py:730] (val) algo strongly_connected_components step 9450: {'scc_id': 0.7509765625, 'score': 0.7509765625, 'examples_seen': 11054, 'step': 9450, 'algorithm': 'strongly_connected_components'}
I0827 17:57:31.890601 134493687799808 run.py:730] (val) algo task_scheduling step 9450: {'selected': 0.9174017642341621, 'score': 0.9174017642341621, 'examples_seen': 57600, 'step': 9450, 'algorithm': 'task_scheduling'}
I0827 17:57:31.944446 134493687799808 run.py:730] (val) algo topological_sort step 9450: {'topo': 0.642578125, 'topo_head': 0.953125, 'score': 0.7978515625, 'examples_seen': 26311, 'step': 9450, 'algorithm': 'topological_sort'}
I0827 17:57:31.944644 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.751, val scores are: mst_kruskal: 0.814, mst_prim: 0.847, naive_string_matcher: 0.721, optimal_bst: 0.897, quickselect: 0.223, quicksort: 0.913, segments_intersect: 0.632, strongly_connected_components: 0.751, task_scheduling: 0.917, topological_sort: 0.798
I0827 17:57:49.575639 134493687799808 run.py:695] Algo mst_kruskal step 9500 current loss 0.073475, current_train_items 209784.
I0827 17:57:49.586099 134493687799808 run.py:695] Algo mst_prim step 9500 current loss 0.501518, current_train_items 193761.
I0827 17:57:49.595023 134493687799808 run.py:695] Algo naive_string_matcher step 9500 current loss 1.743226, current_train_items 129980.
I0827 17:57:49.608064 134493687799808 run.py:695] Algo optimal_bst step 9500 current loss 0.000000, current_train_items 57904.
I0827 17:57:49.684593 134493687799808 run.py:695] Algo quickselect step 9500 current loss 2.099307, current_train_items 22876.
I0827 17:57:49.696036 134493687799808 run.py:695] Algo quicksort step 9500 current loss 0.964390, current_train_items 14441.
I0827 17:57:49.713796 134493687799808 run.py:695] Algo segments_intersect step 9500 current loss 0.669084, current_train_items 243232.
I0827 17:57:49.724542 134493687799808 run.py:695] Algo strongly_connected_components step 9500 current loss 0.000000, current_train_items 11115.
I0827 17:57:49.742367 134493687799808 run.py:695] Algo task_scheduling step 9500 current loss 0.000000, current_train_items 57904.
I0827 17:57:49.754687 134493687799808 run.py:695] Algo topological_sort step 9500 current loss 2.964157, current_train_items 26454.
I0827 17:57:49.864445 134493687799808 run.py:730] (val) algo mst_kruskal step 9500: {'in_mst': 0.8121047877145439, 'score': 0.8121047877145439, 'examples_seen': 209784, 'step': 9500, 'algorithm': 'mst_kruskal'}
I0827 17:57:49.885430 134493687799808 run.py:730] (val) algo mst_prim step 9500: {'pi': 0.830078125, 'score': 0.830078125, 'examples_seen': 193761, 'step': 9500, 'algorithm': 'mst_prim'}
I0827 17:57:50.632422 134493687799808 run.py:730] (val) algo naive_string_matcher step 9500: {'match': 0.693115234375, 'score': 0.693115234375, 'examples_seen': 129980, 'step': 9500, 'algorithm': 'naive_string_matcher'}
I0827 17:57:50.679988 134493687799808 run.py:730] (val) algo optimal_bst step 9500: {'root': 0.8644031141868512, 'score': 0.8644031141868512, 'examples_seen': 57904, 'step': 9500, 'algorithm': 'optimal_bst'}
I0827 17:57:54.367275 134493687799808 run.py:730] (val) algo quickselect step 9500: {'median': 0.21533203125, 'score': 0.21533203125, 'examples_seen': 22876, 'step': 9500, 'algorithm': 'quickselect'}
I0827 17:57:54.511978 134493687799808 run.py:730] (val) algo quicksort step 9500: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 14441, 'step': 9500, 'algorithm': 'quicksort'}
I0827 17:57:55.019752 134493687799808 run.py:730] (val) algo segments_intersect step 9500: {'intersect': 0.6594202898550725, 'score': 0.6594202898550725, 'examples_seen': 243232, 'step': 9500, 'algorithm': 'segments_intersect'}
I0827 17:57:55.124959 134493687799808 run.py:730] (val) algo strongly_connected_components step 9500: {'scc_id': 0.775390625, 'score': 0.775390625, 'examples_seen': 11115, 'step': 9500, 'algorithm': 'strongly_connected_components'}
I0827 17:57:55.138666 134493687799808 run.py:730] (val) algo task_scheduling step 9500: {'selected': 0.884910485933504, 'score': 0.884910485933504, 'examples_seen': 57904, 'step': 9500, 'algorithm': 'task_scheduling'}
I0827 17:57:55.193498 134493687799808 run.py:730] (val) algo topological_sort step 9500: {'topo': 0.6103515625, 'topo_head': 1.0, 'score': 0.80517578125, 'examples_seen': 26454, 'step': 9500, 'algorithm': 'topological_sort'}
I0827 17:57:55.193684 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.749, val scores are: mst_kruskal: 0.812, mst_prim: 0.830, naive_string_matcher: 0.693, optimal_bst: 0.864, quickselect: 0.215, quicksort: 0.948, segments_intersect: 0.659, strongly_connected_components: 0.775, task_scheduling: 0.885, topological_sort: 0.805
I0827 17:58:13.319658 134493687799808 run.py:695] Algo mst_kruskal step 9550 current loss 0.097894, current_train_items 210926.
I0827 17:58:13.329413 134493687799808 run.py:695] Algo mst_prim step 9550 current loss 0.201033, current_train_items 194764.
I0827 17:58:13.337870 134493687799808 run.py:695] Algo naive_string_matcher step 9550 current loss 0.838922, current_train_items 130646.
I0827 17:58:13.351151 134493687799808 run.py:695] Algo optimal_bst step 9550 current loss 0.000000, current_train_items 58208.
I0827 17:58:13.428375 134493687799808 run.py:695] Algo quickselect step 9550 current loss 2.710666, current_train_items 22993.
I0827 17:58:13.438186 134493687799808 run.py:695] Algo quicksort step 9550 current loss 2.175081, current_train_items 14514.
I0827 17:58:13.455300 134493687799808 run.py:695] Algo segments_intersect step 9550 current loss 0.629766, current_train_items 244512.
I0827 17:58:13.465982 134493687799808 run.py:695] Algo strongly_connected_components step 9550 current loss 2.107492, current_train_items 11174.
I0827 17:58:13.484006 134493687799808 run.py:695] Algo task_scheduling step 9550 current loss 0.000000, current_train_items 58208.
I0827 17:58:13.497164 134493687799808 run.py:695] Algo topological_sort step 9550 current loss 0.000000, current_train_items 26590.
I0827 17:58:13.611431 134493687799808 run.py:730] (val) algo mst_kruskal step 9550: {'in_mst': 0.8286155429747812, 'score': 0.8286155429747812, 'examples_seen': 210926, 'step': 9550, 'algorithm': 'mst_kruskal'}
I0827 17:58:13.632864 134493687799808 run.py:730] (val) algo mst_prim step 9550: {'pi': 0.8515625, 'score': 0.8515625, 'examples_seen': 194764, 'step': 9550, 'algorithm': 'mst_prim'}
I0827 17:58:14.383196 134493687799808 run.py:730] (val) algo naive_string_matcher step 9550: {'match': 0.713623046875, 'score': 0.713623046875, 'examples_seen': 130646, 'step': 9550, 'algorithm': 'naive_string_matcher'}
I0827 17:58:14.432116 134493687799808 run.py:730] (val) algo optimal_bst step 9550: {'root': 0.8918685121107266, 'score': 0.8918685121107266, 'examples_seen': 58208, 'step': 9550, 'algorithm': 'optimal_bst'}
I0827 17:58:18.116600 134493687799808 run.py:730] (val) algo quickselect step 9550: {'median': 0.221435546875, 'score': 0.221435546875, 'examples_seen': 22993, 'step': 9550, 'algorithm': 'quickselect'}
I0827 17:58:18.263102 134493687799808 run.py:730] (val) algo quicksort step 9550: {'pred': 0.9541015625, 'score': 0.9541015625, 'examples_seen': 14514, 'step': 9550, 'algorithm': 'quicksort'}
I0827 17:58:18.779988 134493687799808 run.py:730] (val) algo segments_intersect step 9550: {'intersect': 0.5905027932960895, 'score': 0.5905027932960895, 'examples_seen': 244512, 'step': 9550, 'algorithm': 'segments_intersect'}
I0827 17:58:18.887032 134493687799808 run.py:730] (val) algo strongly_connected_components step 9550: {'scc_id': 0.7734375, 'score': 0.7734375, 'examples_seen': 11174, 'step': 9550, 'algorithm': 'strongly_connected_components'}
I0827 17:58:18.900747 134493687799808 run.py:730] (val) algo task_scheduling step 9550: {'selected': 0.9176090468497576, 'score': 0.9176090468497576, 'examples_seen': 58208, 'step': 9550, 'algorithm': 'task_scheduling'}
I0827 17:58:18.955268 134493687799808 run.py:730] (val) algo topological_sort step 9550: {'topo': 0.6396484375, 'topo_head': 1.0, 'score': 0.81982421875, 'examples_seen': 26590, 'step': 9550, 'algorithm': 'topological_sort'}
I0827 17:58:18.955452 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.756, val scores are: mst_kruskal: 0.829, mst_prim: 0.852, naive_string_matcher: 0.714, optimal_bst: 0.892, quickselect: 0.221, quicksort: 0.954, segments_intersect: 0.591, strongly_connected_components: 0.773, task_scheduling: 0.918, topological_sort: 0.820
I0827 17:58:36.427783 134493687799808 run.py:695] Algo mst_kruskal step 9600 current loss 0.133172, current_train_items 212032.
I0827 17:58:36.438642 134493687799808 run.py:695] Algo mst_prim step 9600 current loss 0.207955, current_train_items 195769.
I0827 17:58:36.447397 134493687799808 run.py:695] Algo naive_string_matcher step 9600 current loss 1.032742, current_train_items 131327.
I0827 17:58:36.459987 134493687799808 run.py:695] Algo optimal_bst step 9600 current loss 0.000000, current_train_items 58512.
I0827 17:58:36.538276 134493687799808 run.py:695] Algo quickselect step 9600 current loss 2.169916, current_train_items 23110.
I0827 17:58:36.548547 134493687799808 run.py:695] Algo quicksort step 9600 current loss 0.000000, current_train_items 14592.
I0827 17:58:36.566031 134493687799808 run.py:695] Algo segments_intersect step 9600 current loss 0.644784, current_train_items 245792.
I0827 17:58:36.577273 134493687799808 run.py:695] Algo strongly_connected_components step 9600 current loss 1.311181, current_train_items 11231.
I0827 17:58:36.595484 134493687799808 run.py:695] Algo task_scheduling step 9600 current loss 0.000000, current_train_items 58512.
I0827 17:58:36.607696 134493687799808 run.py:695] Algo topological_sort step 9600 current loss 1.413715, current_train_items 26732.
I0827 17:58:36.724167 134493687799808 run.py:730] (val) algo mst_kruskal step 9600: {'in_mst': 0.8046340179041601, 'score': 0.8046340179041601, 'examples_seen': 212032, 'step': 9600, 'algorithm': 'mst_kruskal'}
I0827 17:58:36.744975 134493687799808 run.py:730] (val) algo mst_prim step 9600: {'pi': 0.849609375, 'score': 0.849609375, 'examples_seen': 195769, 'step': 9600, 'algorithm': 'mst_prim'}
I0827 17:58:37.496109 134493687799808 run.py:730] (val) algo naive_string_matcher step 9600: {'match': 0.7109375, 'score': 0.7109375, 'examples_seen': 131327, 'step': 9600, 'algorithm': 'naive_string_matcher'}
I0827 17:58:37.544079 134493687799808 run.py:730] (val) algo optimal_bst step 9600: {'root': 0.8848399653979239, 'score': 0.8848399653979239, 'examples_seen': 58512, 'step': 9600, 'algorithm': 'optimal_bst'}
I0827 17:58:41.231730 134493687799808 run.py:730] (val) algo quickselect step 9600: {'median': 0.209228515625, 'score': 0.209228515625, 'examples_seen': 23110, 'step': 9600, 'algorithm': 'quickselect'}
I0827 17:58:41.376953 134493687799808 run.py:730] (val) algo quicksort step 9600: {'pred': 0.9482421875, 'score': 0.9482421875, 'examples_seen': 14592, 'step': 9600, 'algorithm': 'quicksort'}
I0827 17:58:41.875977 134493687799808 run.py:730] (val) algo segments_intersect step 9600: {'intersect': 0.6718006795016987, 'score': 0.6718006795016987, 'examples_seen': 245792, 'step': 9600, 'algorithm': 'segments_intersect'}
I0827 17:58:41.980976 134493687799808 run.py:730] (val) algo strongly_connected_components step 9600: {'scc_id': 0.7529296875, 'score': 0.7529296875, 'examples_seen': 11231, 'step': 9600, 'algorithm': 'strongly_connected_components'}
I0827 17:58:41.994684 134493687799808 run.py:730] (val) algo task_scheduling step 9600: {'selected': 0.890924229808493, 'score': 0.890924229808493, 'examples_seen': 58512, 'step': 9600, 'algorithm': 'task_scheduling'}
I0827 17:58:42.047944 134493687799808 run.py:730] (val) algo topological_sort step 9600: {'topo': 0.5986328125, 'topo_head': 0.9375, 'score': 0.76806640625, 'examples_seen': 26732, 'step': 9600, 'algorithm': 'topological_sort'}
I0827 17:58:42.048129 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.749, val scores are: mst_kruskal: 0.805, mst_prim: 0.850, naive_string_matcher: 0.711, optimal_bst: 0.885, quickselect: 0.209, quicksort: 0.948, segments_intersect: 0.672, strongly_connected_components: 0.753, task_scheduling: 0.891, topological_sort: 0.768
I0827 17:58:59.344189 134493687799808 run.py:695] Algo mst_kruskal step 9650 current loss 0.067925, current_train_items 213127.
I0827 17:58:59.362796 134493687799808 run.py:695] Algo mst_prim step 9650 current loss 0.432921, current_train_items 196776.
I0827 17:58:59.378339 134493687799808 run.py:695] Algo naive_string_matcher step 9650 current loss 1.680063, current_train_items 132011.
I0827 17:58:59.396640 134493687799808 run.py:695] Algo optimal_bst step 9650 current loss 0.000000, current_train_items 58816.
I0827 17:58:59.480375 134493687799808 run.py:695] Algo quickselect step 9650 current loss 2.054732, current_train_items 23231.
I0827 17:58:59.500110 134493687799808 run.py:695] Algo quicksort step 9650 current loss 0.000000, current_train_items 14667.
I0827 17:58:59.521807 134493687799808 run.py:695] Algo segments_intersect step 9650 current loss 0.606667, current_train_items 247072.
I0827 17:58:59.545510 134493687799808 run.py:695] Algo strongly_connected_components step 9650 current loss 0.901144, current_train_items 11291.
I0827 17:58:59.568755 134493687799808 run.py:695] Algo task_scheduling step 9650 current loss 0.000000, current_train_items 58816.
I0827 17:58:59.585224 134493687799808 run.py:695] Algo topological_sort step 9650 current loss 1.492068, current_train_items 26872.
I0827 17:58:59.764394 134493687799808 run.py:730] (val) algo mst_kruskal step 9650: {'in_mst': 0.8429503261414951, 'score': 0.8429503261414951, 'examples_seen': 213127, 'step': 9650, 'algorithm': 'mst_kruskal'}
I0827 17:58:59.787924 134493687799808 run.py:730] (val) algo mst_prim step 9650: {'pi': 0.83984375, 'score': 0.83984375, 'examples_seen': 196776, 'step': 9650, 'algorithm': 'mst_prim'}
I0827 17:59:00.690377 134493687799808 run.py:730] (val) algo naive_string_matcher step 9650: {'match': 0.706787109375, 'score': 0.706787109375, 'examples_seen': 132011, 'step': 9650, 'algorithm': 'naive_string_matcher'}
I0827 17:59:00.738233 134493687799808 run.py:730] (val) algo optimal_bst step 9650: {'root': 0.8893814878892734, 'score': 0.8893814878892734, 'examples_seen': 58816, 'step': 9650, 'algorithm': 'optimal_bst'}
I0827 17:59:04.413154 134493687799808 run.py:730] (val) algo quickselect step 9650: {'median': 0.181884765625, 'score': 0.181884765625, 'examples_seen': 23231, 'step': 9650, 'algorithm': 'quickselect'}
I0827 17:59:04.559487 134493687799808 run.py:730] (val) algo quicksort step 9650: {'pred': 0.955078125, 'score': 0.955078125, 'examples_seen': 14667, 'step': 9650, 'algorithm': 'quicksort'}
I0827 17:59:05.052815 134493687799808 run.py:730] (val) algo segments_intersect step 9650: {'intersect': 0.709475620975161, 'score': 0.709475620975161, 'examples_seen': 247072, 'step': 9650, 'algorithm': 'segments_intersect'}
I0827 17:59:05.157807 134493687799808 run.py:730] (val) algo strongly_connected_components step 9650: {'scc_id': 0.8232421875, 'score': 0.8232421875, 'examples_seen': 11291, 'step': 9650, 'algorithm': 'strongly_connected_components'}
I0827 17:59:05.171206 134493687799808 run.py:730] (val) algo task_scheduling step 9650: {'selected': 0.9123102866779089, 'score': 0.9123102866779089, 'examples_seen': 58816, 'step': 9650, 'algorithm': 'task_scheduling'}
I0827 17:59:05.226316 134493687799808 run.py:730] (val) algo topological_sort step 9650: {'topo': 0.5419921875, 'topo_head': 0.9375, 'score': 0.73974609375, 'examples_seen': 26872, 'step': 9650, 'algorithm': 'topological_sort'}
I0827 17:59:05.226565 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.760, val scores are: mst_kruskal: 0.843, mst_prim: 0.840, naive_string_matcher: 0.707, optimal_bst: 0.889, quickselect: 0.182, quicksort: 0.955, segments_intersect: 0.709, strongly_connected_components: 0.823, task_scheduling: 0.912, topological_sort: 0.740
I0827 17:59:22.135890 134493687799808 run.py:695] Algo mst_kruskal step 9700 current loss 0.081339, current_train_items 214241.
I0827 17:59:22.145616 134493687799808 run.py:695] Algo mst_prim step 9700 current loss 0.390072, current_train_items 197782.
I0827 17:59:22.154043 134493687799808 run.py:695] Algo naive_string_matcher step 9700 current loss 1.346026, current_train_items 132698.
I0827 17:59:22.166157 134493687799808 run.py:695] Algo optimal_bst step 9700 current loss 0.000000, current_train_items 59120.
I0827 17:59:22.244181 134493687799808 run.py:695] Algo quickselect step 9700 current loss 2.182693, current_train_items 23354.
I0827 17:59:22.254896 134493687799808 run.py:695] Algo quicksort step 9700 current loss 19.598974, current_train_items 14744.
I0827 17:59:22.273505 134493687799808 run.py:695] Algo segments_intersect step 9700 current loss 0.646639, current_train_items 248352.
I0827 17:59:22.295777 134493687799808 run.py:695] Algo strongly_connected_components step 9700 current loss 1.716359, current_train_items 11350.
I0827 17:59:22.319778 134493687799808 run.py:695] Algo task_scheduling step 9700 current loss 0.000000, current_train_items 59120.
I0827 17:59:22.334239 134493687799808 run.py:695] Algo topological_sort step 9700 current loss 1.600308, current_train_items 27013.
I0827 17:59:22.518231 134493687799808 run.py:730] (val) algo mst_kruskal step 9700: {'in_mst': 0.8343434343434344, 'score': 0.8343434343434344, 'examples_seen': 214241, 'step': 9700, 'algorithm': 'mst_kruskal'}
I0827 17:59:22.542521 134493687799808 run.py:730] (val) algo mst_prim step 9700: {'pi': 0.83203125, 'score': 0.83203125, 'examples_seen': 197782, 'step': 9700, 'algorithm': 'mst_prim'}
I0827 17:59:23.695370 134493687799808 run.py:730] (val) algo naive_string_matcher step 9700: {'match': 0.727783203125, 'score': 0.727783203125, 'examples_seen': 132698, 'step': 9700, 'algorithm': 'naive_string_matcher'}
I0827 17:59:23.745955 134493687799808 run.py:730] (val) algo optimal_bst step 9700: {'root': 0.8892192906574394, 'score': 0.8892192906574394, 'examples_seen': 59120, 'step': 9700, 'algorithm': 'optimal_bst'}
I0827 17:59:27.446587 134493687799808 run.py:730] (val) algo quickselect step 9700: {'median': 0.221923828125, 'score': 0.221923828125, 'examples_seen': 23354, 'step': 9700, 'algorithm': 'quickselect'}
I0827 17:59:27.592631 134493687799808 run.py:730] (val) algo quicksort step 9700: {'pred': 0.939453125, 'score': 0.939453125, 'examples_seen': 14744, 'step': 9700, 'algorithm': 'quicksort'}
I0827 17:59:28.114794 134493687799808 run.py:730] (val) algo segments_intersect step 9700: {'intersect': 0.6255924170616114, 'score': 0.6255924170616114, 'examples_seen': 248352, 'step': 9700, 'algorithm': 'segments_intersect'}
I0827 17:59:28.220855 134493687799808 run.py:730] (val) algo strongly_connected_components step 9700: {'scc_id': 0.7861328125, 'score': 0.7861328125, 'examples_seen': 11350, 'step': 9700, 'algorithm': 'strongly_connected_components'}
I0827 17:59:28.234269 134493687799808 run.py:730] (val) algo task_scheduling step 9700: {'selected': 0.8984771573604061, 'score': 0.8984771573604061, 'examples_seen': 59120, 'step': 9700, 'algorithm': 'task_scheduling'}
I0827 17:59:28.288424 134493687799808 run.py:730] (val) algo topological_sort step 9700: {'topo': 0.650390625, 'topo_head': 0.96875, 'score': 0.8095703125, 'examples_seen': 27013, 'step': 9700, 'algorithm': 'topological_sort'}
I0827 17:59:28.288677 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.756, val scores are: mst_kruskal: 0.834, mst_prim: 0.832, naive_string_matcher: 0.728, optimal_bst: 0.889, quickselect: 0.222, quicksort: 0.939, segments_intersect: 0.626, strongly_connected_components: 0.786, task_scheduling: 0.898, topological_sort: 0.810
I0827 17:59:45.806415 134493687799808 run.py:695] Algo mst_kruskal step 9750 current loss 0.109236, current_train_items 215355.
I0827 17:59:45.816761 134493687799808 run.py:695] Algo mst_prim step 9750 current loss 0.624553, current_train_items 198798.
I0827 17:59:45.825446 134493687799808 run.py:695] Algo naive_string_matcher step 9750 current loss 1.754393, current_train_items 133361.
I0827 17:59:45.837068 134493687799808 run.py:695] Algo optimal_bst step 9750 current loss 0.000000, current_train_items 59424.
I0827 17:59:45.914541 134493687799808 run.py:695] Algo quickselect step 9750 current loss 0.000000, current_train_items 23474.
I0827 17:59:45.925039 134493687799808 run.py:695] Algo quicksort step 9750 current loss 0.030549, current_train_items 14819.
I0827 17:59:45.942780 134493687799808 run.py:695] Algo segments_intersect step 9750 current loss 0.606357, current_train_items 249632.
I0827 17:59:45.953829 134493687799808 run.py:695] Algo strongly_connected_components step 9750 current loss 0.000000, current_train_items 11405.
I0827 17:59:45.971601 134493687799808 run.py:695] Algo task_scheduling step 9750 current loss 0.000000, current_train_items 59424.
I0827 17:59:45.983691 134493687799808 run.py:695] Algo topological_sort step 9750 current loss 1.496924, current_train_items 27150.
I0827 17:59:46.095832 134493687799808 run.py:730] (val) algo mst_kruskal step 9750: {'in_mst': 0.792, 'score': 0.792, 'examples_seen': 215355, 'step': 9750, 'algorithm': 'mst_kruskal'}
I0827 17:59:46.116668 134493687799808 run.py:730] (val) algo mst_prim step 9750: {'pi': 0.8212890625, 'score': 0.8212890625, 'examples_seen': 198798, 'step': 9750, 'algorithm': 'mst_prim'}
I0827 17:59:47.174310 134493687799808 run.py:730] (val) algo naive_string_matcher step 9750: {'match': 0.70654296875, 'score': 0.70654296875, 'examples_seen': 133361, 'step': 9750, 'algorithm': 'naive_string_matcher'}
I0827 17:59:47.223905 134493687799808 run.py:730] (val) algo optimal_bst step 9750: {'root': 0.8910575259515571, 'score': 0.8910575259515571, 'examples_seen': 59424, 'step': 9750, 'algorithm': 'optimal_bst'}
I0827 17:59:50.913222 134493687799808 run.py:730] (val) algo quickselect step 9750: {'median': 0.211669921875, 'score': 0.211669921875, 'examples_seen': 23474, 'step': 9750, 'algorithm': 'quickselect'}
I0827 17:59:51.062398 134493687799808 run.py:730] (val) algo quicksort step 9750: {'pred': 0.921875, 'score': 0.921875, 'examples_seen': 14819, 'step': 9750, 'algorithm': 'quicksort'}
I0827 17:59:51.544326 134493687799808 run.py:730] (val) algo segments_intersect step 9750: {'intersect': 0.6528095020557332, 'score': 0.6528095020557332, 'examples_seen': 249632, 'step': 9750, 'algorithm': 'segments_intersect'}
I0827 17:59:51.649047 134493687799808 run.py:730] (val) algo strongly_connected_components step 9750: {'scc_id': 0.7919921875, 'score': 0.7919921875, 'examples_seen': 11405, 'step': 9750, 'algorithm': 'strongly_connected_components'}
I0827 17:59:51.662509 134493687799808 run.py:730] (val) algo task_scheduling step 9750: {'selected': 0.9173878835562549, 'score': 0.9173878835562549, 'examples_seen': 59424, 'step': 9750, 'algorithm': 'task_scheduling'}
I0827 17:59:51.716723 134493687799808 run.py:730] (val) algo topological_sort step 9750: {'topo': 0.5859375, 'topo_head': 0.96875, 'score': 0.77734375, 'examples_seen': 27150, 'step': 9750, 'algorithm': 'topological_sort'}
I0827 17:59:51.716896 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.748, val scores are: mst_kruskal: 0.792, mst_prim: 0.821, naive_string_matcher: 0.707, optimal_bst: 0.891, quickselect: 0.212, quicksort: 0.922, segments_intersect: 0.653, strongly_connected_components: 0.792, task_scheduling: 0.917, topological_sort: 0.777
I0827 18:00:08.355322 134493687799808 run.py:695] Algo mst_kruskal step 9800 current loss 0.083548, current_train_items 216494.
I0827 18:00:08.365269 134493687799808 run.py:695] Algo mst_prim step 9800 current loss 0.663987, current_train_items 199814.
I0827 18:00:08.373719 134493687799808 run.py:695] Algo naive_string_matcher step 9800 current loss 1.631028, current_train_items 134039.
I0827 18:00:08.385611 134493687799808 run.py:695] Algo optimal_bst step 9800 current loss 0.261590, current_train_items 59744.
I0827 18:00:08.463032 134493687799808 run.py:695] Algo quickselect step 9800 current loss 1.989793, current_train_items 23595.
I0827 18:00:08.473746 134493687799808 run.py:695] Algo quicksort step 9800 current loss 0.000000, current_train_items 14895.
I0827 18:00:08.491872 134493687799808 run.py:695] Algo segments_intersect step 9800 current loss 0.621895, current_train_items 250912.
I0827 18:00:08.503044 134493687799808 run.py:695] Algo strongly_connected_components step 9800 current loss 1.143868, current_train_items 11465.
I0827 18:00:08.525167 134493687799808 run.py:695] Algo task_scheduling step 9800 current loss 0.161353, current_train_items 59744.
I0827 18:00:08.542725 134493687799808 run.py:695] Algo topological_sort step 9800 current loss 2.608202, current_train_items 27291.
I0827 18:00:08.656082 134493687799808 run.py:730] (val) algo mst_kruskal step 9800: {'in_mst': 0.7144772117962467, 'score': 0.7144772117962467, 'examples_seen': 216494, 'step': 9800, 'algorithm': 'mst_kruskal'}
I0827 18:00:08.677094 134493687799808 run.py:730] (val) algo mst_prim step 9800: {'pi': 0.8173828125, 'score': 0.8173828125, 'examples_seen': 199814, 'step': 9800, 'algorithm': 'mst_prim'}
I0827 18:00:09.420966 134493687799808 run.py:730] (val) algo naive_string_matcher step 9800: {'match': 0.733154296875, 'score': 0.733154296875, 'examples_seen': 134039, 'step': 9800, 'algorithm': 'naive_string_matcher'}
I0827 18:00:09.468595 134493687799808 run.py:730] (val) algo optimal_bst step 9800: {'root': 0.9040333044982699, 'score': 0.9040333044982699, 'examples_seen': 59744, 'step': 9800, 'algorithm': 'optimal_bst'}
I0827 18:00:13.159526 134493687799808 run.py:730] (val) algo quickselect step 9800: {'median': 0.183837890625, 'score': 0.183837890625, 'examples_seen': 23595, 'step': 9800, 'algorithm': 'quickselect'}
I0827 18:00:13.304744 134493687799808 run.py:730] (val) algo quicksort step 9800: {'pred': 0.94921875, 'score': 0.94921875, 'examples_seen': 14895, 'step': 9800, 'algorithm': 'quicksort'}
I0827 18:00:13.802386 134493687799808 run.py:730] (val) algo segments_intersect step 9800: {'intersect': 0.5003150598613738, 'score': 0.5003150598613738, 'examples_seen': 250912, 'step': 9800, 'algorithm': 'segments_intersect'}
I0827 18:00:13.907049 134493687799808 run.py:730] (val) algo strongly_connected_components step 9800: {'scc_id': 0.80078125, 'score': 0.80078125, 'examples_seen': 11465, 'step': 9800, 'algorithm': 'strongly_connected_components'}
I0827 18:00:13.920932 134493687799808 run.py:730] (val) algo task_scheduling step 9800: {'selected': 0.9145228215767635, 'score': 0.9145228215767635, 'examples_seen': 59744, 'step': 9800, 'algorithm': 'task_scheduling'}
I0827 18:00:13.975013 134493687799808 run.py:730] (val) algo topological_sort step 9800: {'topo': 0.609375, 'topo_head': 1.0, 'score': 0.8046875, 'examples_seen': 27291, 'step': 9800, 'algorithm': 'topological_sort'}
I0827 18:00:13.975168 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.732, val scores are: mst_kruskal: 0.714, mst_prim: 0.817, naive_string_matcher: 0.733, optimal_bst: 0.904, quickselect: 0.184, quicksort: 0.949, segments_intersect: 0.500, strongly_connected_components: 0.801, task_scheduling: 0.915, topological_sort: 0.805
I0827 18:00:30.757798 134493687799808 run.py:695] Algo mst_kruskal step 9850 current loss 0.112153, current_train_items 217667.
I0827 18:00:30.767740 134493687799808 run.py:695] Algo mst_prim step 9850 current loss 0.714902, current_train_items 200853.
I0827 18:00:30.776160 134493687799808 run.py:695] Algo naive_string_matcher step 9850 current loss 1.281572, current_train_items 134730.
I0827 18:00:30.788530 134493687799808 run.py:695] Algo optimal_bst step 9850 current loss 0.283967, current_train_items 60048.
I0827 18:00:30.865454 134493687799808 run.py:695] Algo quickselect step 9850 current loss 1.949805, current_train_items 23715.
I0827 18:00:30.876394 134493687799808 run.py:695] Algo quicksort step 9850 current loss 9.506921, current_train_items 14972.
I0827 18:00:30.894339 134493687799808 run.py:695] Algo segments_intersect step 9850 current loss 0.634072, current_train_items 252192.
I0827 18:00:30.905086 134493687799808 run.py:695] Algo strongly_connected_components step 9850 current loss 0.801190, current_train_items 11526.
I0827 18:00:30.922136 134493687799808 run.py:695] Algo task_scheduling step 9850 current loss 0.145619, current_train_items 60048.
I0827 18:00:30.933912 134493687799808 run.py:695] Algo topological_sort step 9850 current loss 2.576656, current_train_items 27429.
I0827 18:00:31.052588 134493687799808 run.py:730] (val) algo mst_kruskal step 9850: {'in_mst': 0.8255269320843092, 'score': 0.8255269320843092, 'examples_seen': 217667, 'step': 9850, 'algorithm': 'mst_kruskal'}
I0827 18:00:31.073260 134493687799808 run.py:730] (val) algo mst_prim step 9850: {'pi': 0.8212890625, 'score': 0.8212890625, 'examples_seen': 200853, 'step': 9850, 'algorithm': 'mst_prim'}
I0827 18:00:31.818044 134493687799808 run.py:730] (val) algo naive_string_matcher step 9850: {'match': 0.719970703125, 'score': 0.719970703125, 'examples_seen': 134730, 'step': 9850, 'algorithm': 'naive_string_matcher'}
I0827 18:00:31.865734 134493687799808 run.py:730] (val) algo optimal_bst step 9850: {'root': 0.9025735294117647, 'score': 0.9025735294117647, 'examples_seen': 60048, 'step': 9850, 'algorithm': 'optimal_bst'}
I0827 18:00:35.595111 134493687799808 run.py:730] (val) algo quickselect step 9850: {'median': 0.21142578125, 'score': 0.21142578125, 'examples_seen': 23715, 'step': 9850, 'algorithm': 'quickselect'}
I0827 18:00:35.743338 134493687799808 run.py:730] (val) algo quicksort step 9850: {'pred': 0.9423828125, 'score': 0.9423828125, 'examples_seen': 14972, 'step': 9850, 'algorithm': 'quicksort'}
I0827 18:00:36.421902 134493687799808 run.py:730] (val) algo segments_intersect step 9850: {'intersect': 0.6909169177787344, 'score': 0.6909169177787344, 'examples_seen': 252192, 'step': 9850, 'algorithm': 'segments_intersect'}
I0827 18:00:36.526150 134493687799808 run.py:730] (val) algo strongly_connected_components step 9850: {'scc_id': 0.74609375, 'score': 0.74609375, 'examples_seen': 11526, 'step': 9850, 'algorithm': 'strongly_connected_components'}
I0827 18:00:36.539852 134493687799808 run.py:730] (val) algo task_scheduling step 9850: {'selected': 0.9, 'score': 0.9, 'examples_seen': 60048, 'step': 9850, 'algorithm': 'task_scheduling'}
I0827 18:00:36.595914 134493687799808 run.py:730] (val) algo topological_sort step 9850: {'topo': 0.59765625, 'topo_head': 1.0, 'score': 0.798828125, 'examples_seen': 27429, 'step': 9850, 'algorithm': 'topological_sort'}
I0827 18:00:36.596093 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.756, val scores are: mst_kruskal: 0.826, mst_prim: 0.821, naive_string_matcher: 0.720, optimal_bst: 0.903, quickselect: 0.211, quicksort: 0.942, segments_intersect: 0.691, strongly_connected_components: 0.746, task_scheduling: 0.900, topological_sort: 0.799
I0827 18:00:53.915952 134493687799808 run.py:695] Algo mst_kruskal step 9900 current loss 0.127781, current_train_items 218758.
I0827 18:00:53.926429 134493687799808 run.py:695] Algo mst_prim step 9900 current loss 0.525339, current_train_items 201869.
I0827 18:00:53.935312 134493687799808 run.py:695] Algo naive_string_matcher step 9900 current loss 1.067977, current_train_items 135418.
I0827 18:00:53.947326 134493687799808 run.py:695] Algo optimal_bst step 9900 current loss 0.299040, current_train_items 60352.
I0827 18:00:54.024596 134493687799808 run.py:695] Algo quickselect step 9900 current loss 1.340801, current_train_items 23834.
I0827 18:00:54.035159 134493687799808 run.py:695] Algo quicksort step 9900 current loss 0.011699, current_train_items 15046.
I0827 18:00:54.053321 134493687799808 run.py:695] Algo segments_intersect step 9900 current loss 0.732924, current_train_items 253472.
I0827 18:00:54.064065 134493687799808 run.py:695] Algo strongly_connected_components step 9900 current loss 0.309740, current_train_items 11581.
I0827 18:00:54.081960 134493687799808 run.py:695] Algo task_scheduling step 9900 current loss 0.135935, current_train_items 60352.
I0827 18:00:54.094249 134493687799808 run.py:695] Algo topological_sort step 9900 current loss 0.000000, current_train_items 27569.
I0827 18:00:54.211182 134493687799808 run.py:730] (val) algo mst_kruskal step 9900: {'in_mst': 0.7555296856810244, 'score': 0.7555296856810244, 'examples_seen': 218758, 'step': 9900, 'algorithm': 'mst_kruskal'}
I0827 18:00:54.232192 134493687799808 run.py:730] (val) algo mst_prim step 9900: {'pi': 0.833984375, 'score': 0.833984375, 'examples_seen': 201869, 'step': 9900, 'algorithm': 'mst_prim'}
I0827 18:00:54.974264 134493687799808 run.py:730] (val) algo naive_string_matcher step 9900: {'match': 0.712158203125, 'score': 0.712158203125, 'examples_seen': 135418, 'step': 9900, 'algorithm': 'naive_string_matcher'}
I0827 18:00:55.022274 134493687799808 run.py:730] (val) algo optimal_bst step 9900: {'root': 0.9054930795847751, 'score': 0.9054930795847751, 'examples_seen': 60352, 'step': 9900, 'algorithm': 'optimal_bst'}
I0827 18:00:58.739950 134493687799808 run.py:730] (val) algo quickselect step 9900: {'median': 0.217529296875, 'score': 0.217529296875, 'examples_seen': 23834, 'step': 9900, 'algorithm': 'quickselect'}
I0827 18:00:58.889969 134493687799808 run.py:730] (val) algo quicksort step 9900: {'pred': 0.8994140625, 'score': 0.8994140625, 'examples_seen': 15046, 'step': 9900, 'algorithm': 'quicksort'}
I0827 18:00:59.803431 134493687799808 run.py:730] (val) algo segments_intersect step 9900: {'intersect': 0.7087552114353782, 'score': 0.7087552114353782, 'examples_seen': 253472, 'step': 9900, 'algorithm': 'segments_intersect'}
I0827 18:00:59.912112 134493687799808 run.py:730] (val) algo strongly_connected_components step 9900: {'scc_id': 0.751953125, 'score': 0.751953125, 'examples_seen': 11581, 'step': 9900, 'algorithm': 'strongly_connected_components'}
I0827 18:00:59.934622 134493687799808 run.py:730] (val) algo task_scheduling step 9900: {'selected': 0.8599464763603926, 'score': 0.8599464763603926, 'examples_seen': 60352, 'step': 9900, 'algorithm': 'task_scheduling'}
I0827 18:00:59.989668 134493687799808 run.py:730] (val) algo topological_sort step 9900: {'topo': 0.6494140625, 'topo_head': 0.984375, 'score': 0.81689453125, 'examples_seen': 27569, 'step': 9900, 'algorithm': 'topological_sort'}
I0827 18:00:59.989908 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.746, val scores are: mst_kruskal: 0.756, mst_prim: 0.834, naive_string_matcher: 0.712, optimal_bst: 0.905, quickselect: 0.218, quicksort: 0.899, segments_intersect: 0.709, strongly_connected_components: 0.752, task_scheduling: 0.860, topological_sort: 0.817
I0827 18:01:16.483275 134493687799808 run.py:695] Algo mst_kruskal step 9950 current loss 0.099692, current_train_items 219888.
I0827 18:01:16.493885 134493687799808 run.py:695] Algo mst_prim step 9950 current loss 0.468019, current_train_items 202861.
I0827 18:01:16.502738 134493687799808 run.py:695] Algo naive_string_matcher step 9950 current loss 2.195044, current_train_items 136108.
I0827 18:01:16.514172 134493687799808 run.py:695] Algo optimal_bst step 9950 current loss 0.290599, current_train_items 60656.
I0827 18:01:16.591521 134493687799808 run.py:695] Algo quickselect step 9950 current loss 3.204054, current_train_items 23960.
I0827 18:01:16.602090 134493687799808 run.py:695] Algo quicksort step 9950 current loss 17.328228, current_train_items 15124.
I0827 18:01:16.619407 134493687799808 run.py:695] Algo segments_intersect step 9950 current loss 0.670640, current_train_items 254752.
I0827 18:01:16.630036 134493687799808 run.py:695] Algo strongly_connected_components step 9950 current loss 0.000000, current_train_items 11640.
I0827 18:01:16.648303 134493687799808 run.py:695] Algo task_scheduling step 9950 current loss 0.160335, current_train_items 60656.
I0827 18:01:16.660668 134493687799808 run.py:695] Algo topological_sort step 9950 current loss 3.719487, current_train_items 27709.
I0827 18:01:16.779771 134493687799808 run.py:730] (val) algo mst_kruskal step 9950: {'in_mst': 0.8123644251626898, 'score': 0.8123644251626898, 'examples_seen': 219888, 'step': 9950, 'algorithm': 'mst_kruskal'}
I0827 18:01:16.800722 134493687799808 run.py:730] (val) algo mst_prim step 9950: {'pi': 0.8525390625, 'score': 0.8525390625, 'examples_seen': 202861, 'step': 9950, 'algorithm': 'mst_prim'}
I0827 18:01:17.550959 134493687799808 run.py:730] (val) algo naive_string_matcher step 9950: {'match': 0.728759765625, 'score': 0.728759765625, 'examples_seen': 136108, 'step': 9950, 'algorithm': 'naive_string_matcher'}
I0827 18:01:17.599232 134493687799808 run.py:730] (val) algo optimal_bst step 9950: {'root': 0.8853265570934256, 'score': 0.8853265570934256, 'examples_seen': 60656, 'step': 9950, 'algorithm': 'optimal_bst'}
I0827 18:01:21.282381 134493687799808 run.py:730] (val) algo quickselect step 9950: {'median': 0.168701171875, 'score': 0.168701171875, 'examples_seen': 23960, 'step': 9950, 'algorithm': 'quickselect'}
I0827 18:01:21.428344 134493687799808 run.py:730] (val) algo quicksort step 9950: {'pred': 0.9609375, 'score': 0.9609375, 'examples_seen': 15124, 'step': 9950, 'algorithm': 'quicksort'}
I0827 18:01:21.920812 134493687799808 run.py:730] (val) algo segments_intersect step 9950: {'intersect': 0.5969655172413793, 'score': 0.5969655172413793, 'examples_seen': 254752, 'step': 9950, 'algorithm': 'segments_intersect'}
I0827 18:01:22.025800 134493687799808 run.py:730] (val) algo strongly_connected_components step 9950: {'scc_id': 0.7998046875, 'score': 0.7998046875, 'examples_seen': 11640, 'step': 9950, 'algorithm': 'strongly_connected_components'}
I0827 18:01:22.039599 134493687799808 run.py:730] (val) algo task_scheduling step 9950: {'selected': 0.9055053410024652, 'score': 0.9055053410024652, 'examples_seen': 60656, 'step': 9950, 'algorithm': 'task_scheduling'}
I0827 18:01:22.093287 134493687799808 run.py:730] (val) algo topological_sort step 9950: {'topo': 0.583984375, 'topo_head': 1.0, 'score': 0.7919921875, 'examples_seen': 27709, 'step': 9950, 'algorithm': 'topological_sort'}
I0827 18:01:22.093479 134493687799808 run.py:754] Not saving new best model, best avg val score was 0.764, current avg val score is 0.750, val scores are: mst_kruskal: 0.812, mst_prim: 0.853, naive_string_matcher: 0.729, optimal_bst: 0.885, quickselect: 0.169, quicksort: 0.961, segments_intersect: 0.597, strongly_connected_components: 0.800, task_scheduling: 0.906, topological_sort: 0.792
I0827 18:01:39.498482 134493687799808 run.py:760] Restoring best model from checkpoint...
I0827 18:01:43.542500 134493687799808 run.py:775] (test) algo mst_kruskal : {'in_mst': 0.8305647840531563, 'score': 0.8305647840531563, 'examples_seen': 220930, 'step': 10000, 'algorithm': 'mst_kruskal'}
I0827 18:01:45.508005 134493687799808 run.py:775] (test) algo mst_prim : {'pi': 0.58544921875, 'score': 0.58544921875, 'examples_seen': 203856, 'step': 10000, 'algorithm': 'mst_prim'}
I0827 18:02:10.282956 134493687799808 run.py:775] (test) algo naive_string_matcher : {'match': 0.16015625, 'score': 0.16015625, 'examples_seen': 136789, 'step': 10000, 'algorithm': 'naive_string_matcher'}
I0827 18:02:17.433316 134493687799808 run.py:775] (test) algo optimal_bst : {'root': 0.775576923076923, 'score': 0.775576923076923, 'examples_seen': 60944, 'step': 10000, 'algorithm': 'optimal_bst'}
I0827 18:03:25.436276 134493687799808 run.py:775] (test) algo quickselect : {'median': 0.03125, 'score': 0.03125, 'examples_seen': 24071, 'step': 10000, 'algorithm': 'quickselect'}
I0827 18:03:31.957380 134493687799808 run.py:775] (test) algo quicksort : {'pred': 0.84814453125, 'score': 0.84814453125, 'examples_seen': 15199, 'step': 10000, 'algorithm': 'quicksort'}
I0827 18:03:33.055697 134493687799808 run.py:775] (test) algo segments_intersect : {'intersect': 0.7776321537789427, 'score': 0.7776321537789427, 'examples_seen': 256000, 'step': 10000, 'algorithm': 'segments_intersect'}
I0827 18:03:38.788892 134493687799808 run.py:775] (test) algo strongly_connected_components : {'scc_id': 0.36181640625, 'score': 0.36181640625, 'examples_seen': 11699, 'step': 10000, 'algorithm': 'strongly_connected_components'}
I0827 18:03:39.742650 134493687799808 run.py:775] (test) algo task_scheduling : {'selected': 0.8233799237611181, 'score': 0.8233799237611181, 'examples_seen': 60944, 'step': 10000, 'algorithm': 'task_scheduling'}
I0827 18:03:42.656067 134493687799808 run.py:775] (test) algo topological_sort : {'topo': 0.22900390625, 'topo_head': 0.96875, 'score': 0.598876953125, 'examples_seen': 27846, 'step': 10000, 'algorithm': 'topological_sort'}
I0827 18:03:42.656234 134493687799808 run.py:777] Done!
