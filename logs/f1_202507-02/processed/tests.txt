I0715 07:30:35.610447 125536568714752 run.py:768] (test) algo activity_selector : {'selected': 0.9430604982206406, 'score': 0.9430604982206406, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'activity_selector'}
I0715 07:39:23.025959 130174566307328 run.py:768] (test) algo articulation_points : {'is_cut': 0.5849056603773586, 'score': 0.5849056603773586, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'articulation_points'}
I0715 07:51:55.971950 130963043796480 run.py:768] (test) algo bellman_ford : {'pi': 0.873046875, 'score': 0.873046875, 'examples_seen': 1108784, 'step': 10000, 'algorithm': 'bellman_ford'}
I0715 08:03:45.402680 129178028045824 run.py:768] (test) algo bfs : {'pi': 0.99658203125, 'score': 0.99658203125, 'examples_seen': 1194759, 'step': 10000, 'algorithm': 'bfs'}
I0715 08:13:24.713423 136117319849472 run.py:768] (test) algo binary_search : {'return': 0.7353515625, 'score': 0.7353515625, 'examples_seen': 768330, 'step': 10000, 'algorithm': 'binary_search'}
I0715 08:22:14.093316 130471698007552 run.py:768] (test) algo bridges : {'is_bridge': 0.5526225574220089, 'score': 0.5526225574220089, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'bridges'}
I0715 08:38:32.236889 126269059307008 run.py:768] (test) algo bubble_sort : {'pred': 0.4345703125, 'score': 0.4345703125, 'examples_seen': 338304, 'step': 10000, 'algorithm': 'bubble_sort'}
I0715 08:48:40.491740 132153658676736 run.py:768] (test) algo dag_shortest_paths : {'pi': 0.904296875, 'score': 0.904296875, 'examples_seen': 296183, 'step': 10000, 'algorithm': 'dag_shortest_paths'}
I0715 08:56:29.694275 137093019534848 run.py:768] (test) algo dfs : {'pi': 0.1796875, 'score': 0.1796875, 'examples_seen': 171456, 'step': 10000, 'algorithm': 'dfs'}
I0715 09:05:45.522254 128389015430656 run.py:768] (test) algo dijkstra : {'pi': 0.9443359375, 'score': 0.9443359375, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'dijkstra'}
I0715 09:15:21.512828 133333116487168 run.py:768] (test) algo find_maximum_subarray_kadane : {'end': 0.3916015625, 'start': 0.640625, 'score': 0.51611328125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'find_maximum_subarray_kadane'}
I0715 09:26:19.399165 133453536179712 run.py:768] (test) algo floyd_warshall : {'Pi': 0.345001220703125, 'score': 0.345001220703125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'floyd_warshall'}
I0715 09:33:25.927543 134164903581184 run.py:768] (test) algo graham_scan : {'in_hull': 0.9144811858608893, 'score': 0.9144811858608893, 'examples_seen': 297430, 'step': 10000, 'algorithm': 'graham_scan'}
I0715 09:47:51.131777 124715881965056 run.py:768] (test) algo heapsort : {'pred': 0.22900390625, 'score': 0.22900390625, 'examples_seen': 155410, 'step': 10000, 'algorithm': 'heapsort'}
I0715 10:06:13.200179 126481778218496 run.py:768] (test) algo insertion_sort : {'pred': 0.76904296875, 'score': 0.76904296875, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'insertion_sort'}
I0715 10:12:26.116420 138194455049728 run.py:768] (test) algo jarvis_march : {'in_hull': 0.9230769230769231, 'score': 0.9230769230769231, 'examples_seen': 114103, 'step': 10000, 'algorithm': 'jarvis_march'}
I0715 10:27:10.034375 135459720447488 run.py:768] (test) algo kmp_matcher : {'match': 0.01513671875, 'score': 0.01513671875, 'examples_seen': 168847, 'step': 10000, 'algorithm': 'kmp_matcher'}
I0715 10:40:11.948683 126542653699584 run.py:768] (test) algo lcs_length : {'b': 0.84893798828125, 'score': 0.84893798828125, 'examples_seen': 1186537, 'step': 10000, 'algorithm': 'lcs_length'}
I0715 10:56:01.483970 138275440956928 run.py:768] (test) algo matrix_chain_order : {'s': 0.9236221313476562, 'score': 0.9236221313476562, 'examples_seen': 821852, 'step': 10000, 'algorithm': 'matrix_chain_order'}
I0715 11:04:25.880661 130291845821952 run.py:768] (test) algo minimum : {'min': 0.9580078125, 'score': 0.9580078125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'minimum'}
I0715 11:18:32.932262 140140565636608 run.py:768] (test) algo mst_kruskal : {'in_mst': 0.8047890535917902, 'score': 0.8047890535917902, 'examples_seen': 826765, 'step': 10000, 'algorithm': 'mst_kruskal'}
I0715 11:27:54.873143 139071426848256 run.py:768] (test) algo mst_prim : {'pi': 0.556640625, 'score': 0.556640625, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'mst_prim'}
I0715 11:36:14.322842 135076531254784 run.py:768] (test) algo naive_string_matcher : {'match': 0.0, 'score': 0.0, 'examples_seen': 230279, 'step': 10000, 'algorithm': 'naive_string_matcher'}
I0715 11:49:12.334219 133586423690752 run.py:768] (test) algo optimal_bst : {'root': 0.7649334319526627, 'score': 0.7649334319526627, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'optimal_bst'}
I0715 12:25:05.837619 140347114280448 run.py:768] (test) algo quickselect : {'median': 0.0888671875, 'score': 0.0888671875, 'examples_seen': 323100, 'step': 10000, 'algorithm': 'quickselect'}
I0715 12:42:00.450588 125342128682496 run.py:768] (test) algo quicksort : {'pred': 0.69580078125, 'score': 0.69580078125, 'examples_seen': 347181, 'step': 10000, 'algorithm': 'quicksort'}
I0715 12:49:07.041153 123284069819904 run.py:768] (test) algo segments_intersect : {'intersect': 0.9580419580419579, 'score': 0.9580419580419579, 'examples_seen': 512000, 'step': 10000, 'algorithm': 'segments_intersect'}
I0715 19:53:09.343872 134837688186368 run.py:768] (test) algo strongly_connected_components : {'scc_id': 0.30224609375, 'score': 0.30224609375, 'examples_seen': 28997, 'step': 10000, 'algorithm': 'strongly_connected_components'}
I0715 12:55:33.434540 137617489782272 run.py:768] (test) algo task_scheduling : {'selected': 0.9148017275225755, 'score': 0.9148017275225755, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'task_scheduling'}
I0715 13:03:19.439914 133830755677696 run.py:768] (test) algo topological_sort : {'topo': 0.1455078125, 'topo_head': 0.9375, 'score': 0.54150390625, 'examples_seen': 190739, 'step': 10000, 'algorithm': 'topological_sort'}
