I0716 19:09:38.798277 126140538426880 run.py:722] (val) algo bridges step 0: {'is_bridge': 0.5953788285867814, 'score': 0.5953788285867814, 'examples_seen': 16, 'step': 0, 'algorithm': 'bridges'}
I0716 19:11:33.356980 126140538426880 run.py:722] (val) algo bridges step 50: {'is_bridge': 0.6795454545454546, 'score': 0.6795454545454546, 'examples_seen': 799, 'step': 50, 'algorithm': 'bridges'}
I0716 19:11:34.995328 126140538426880 run.py:722] (val) algo bridges step 100: {'is_bridge': 0.5822187254130606, 'score': 0.5822187254130606, 'examples_seen': 1592, 'step': 100, 'algorithm': 'bridges'}
I0716 19:11:36.667938 126140538426880 run.py:722] (val) algo bridges step 150: {'is_bridge': 0.5964912280701755, 'score': 0.5964912280701755, 'examples_seen': 2372, 'step': 150, 'algorithm': 'bridges'}
I0716 19:11:38.289726 126140538426880 run.py:722] (val) algo bridges step 200: {'is_bridge': 0.673103448275862, 'score': 0.673103448275862, 'examples_seen': 3158, 'step': 200, 'algorithm': 'bridges'}
I0716 19:11:40.008388 126140538426880 run.py:722] (val) algo bridges step 250: {'is_bridge': 0.773228346456693, 'score': 0.773228346456693, 'examples_seen': 3938, 'step': 250, 'algorithm': 'bridges'}
I0716 19:11:41.668072 126140538426880 run.py:722] (val) algo bridges step 300: {'is_bridge': 0.7410958904109589, 'score': 0.7410958904109589, 'examples_seen': 4758, 'step': 300, 'algorithm': 'bridges'}
I0716 19:11:43.318815 126140538426880 run.py:722] (val) algo bridges step 350: {'is_bridge': 0.8250460405156538, 'score': 0.8250460405156538, 'examples_seen': 5564, 'step': 350, 'algorithm': 'bridges'}
I0716 19:11:44.982375 126140538426880 run.py:722] (val) algo bridges step 400: {'is_bridge': 0.7591674925668979, 'score': 0.7591674925668979, 'examples_seen': 6361, 'step': 400, 'algorithm': 'bridges'}
I0716 19:11:46.619924 126140538426880 run.py:722] (val) algo bridges step 450: {'is_bridge': 0.8132530120481928, 'score': 0.8132530120481928, 'examples_seen': 7144, 'step': 450, 'algorithm': 'bridges'}
I0716 19:11:48.267013 126140538426880 run.py:722] (val) algo bridges step 500: {'is_bridge': 0.8267254038179148, 'score': 0.8267254038179148, 'examples_seen': 7922, 'step': 500, 'algorithm': 'bridges'}
I0716 19:11:49.960404 126140538426880 run.py:722] (val) algo bridges step 550: {'is_bridge': 0.8327974276527332, 'score': 0.8327974276527332, 'examples_seen': 8709, 'step': 550, 'algorithm': 'bridges'}
I0716 19:11:51.674130 126140538426880 run.py:722] (val) algo bridges step 600: {'is_bridge': 0.8390541571319604, 'score': 0.8390541571319604, 'examples_seen': 9489, 'step': 600, 'algorithm': 'bridges'}
I0716 19:11:53.262993 126140538426880 run.py:722] (val) algo bridges step 650: {'is_bridge': 0.830950378469302, 'score': 0.830950378469302, 'examples_seen': 10303, 'step': 650, 'algorithm': 'bridges'}
I0716 19:11:54.898178 126140538426880 run.py:722] (val) algo bridges step 700: {'is_bridge': 0.8015625, 'score': 0.8015625, 'examples_seen': 11121, 'step': 700, 'algorithm': 'bridges'}
I0716 19:11:56.502170 126140538426880 run.py:722] (val) algo bridges step 750: {'is_bridge': 0.7743229689067201, 'score': 0.7743229689067201, 'examples_seen': 11916, 'step': 750, 'algorithm': 'bridges'}
I0716 19:11:58.064398 126140538426880 run.py:722] (val) algo bridges step 800: {'is_bridge': 0.8559027777777778, 'score': 0.8559027777777778, 'examples_seen': 12693, 'step': 800, 'algorithm': 'bridges'}
I0716 19:11:59.661580 126140538426880 run.py:722] (val) algo bridges step 850: {'is_bridge': 0.8192771084337348, 'score': 0.8192771084337348, 'examples_seen': 13478, 'step': 850, 'algorithm': 'bridges'}
I0716 19:12:01.326073 126140538426880 run.py:722] (val) algo bridges step 900: {'is_bridge': 0.8073555166374782, 'score': 0.8073555166374782, 'examples_seen': 14261, 'step': 900, 'algorithm': 'bridges'}
I0716 19:12:02.952651 126140538426880 run.py:722] (val) algo bridges step 950: {'is_bridge': 0.7727272727272728, 'score': 0.7727272727272728, 'examples_seen': 15044, 'step': 950, 'algorithm': 'bridges'}
I0716 19:12:04.661242 126140538426880 run.py:722] (val) algo bridges step 1000: {'is_bridge': 0.8453453453453453, 'score': 0.8453453453453453, 'examples_seen': 15862, 'step': 1000, 'algorithm': 'bridges'}
I0716 19:12:06.309925 126140538426880 run.py:722] (val) algo bridges step 1050: {'is_bridge': 0.7151095732410611, 'score': 0.7151095732410611, 'examples_seen': 16666, 'step': 1050, 'algorithm': 'bridges'}
I0716 19:12:07.908779 126140538426880 run.py:722] (val) algo bridges step 1100: {'is_bridge': 0.8204651162790697, 'score': 0.8204651162790697, 'examples_seen': 17456, 'step': 1100, 'algorithm': 'bridges'}
I0716 19:12:09.501073 126140538426880 run.py:722] (val) algo bridges step 1150: {'is_bridge': 0.779291553133515, 'score': 0.779291553133515, 'examples_seen': 18236, 'step': 1150, 'algorithm': 'bridges'}
I0716 19:12:11.129823 126140538426880 run.py:722] (val) algo bridges step 1200: {'is_bridge': 0.8307692307692308, 'score': 0.8307692307692308, 'examples_seen': 19020, 'step': 1200, 'algorithm': 'bridges'}
I0716 19:12:12.792419 126140538426880 run.py:722] (val) algo bridges step 1250: {'is_bridge': 0.802784222737819, 'score': 0.802784222737819, 'examples_seen': 19803, 'step': 1250, 'algorithm': 'bridges'}
I0716 19:12:14.399091 126140538426880 run.py:722] (val) algo bridges step 1300: {'is_bridge': 0.8186195826645265, 'score': 0.8186195826645265, 'examples_seen': 20574, 'step': 1300, 'algorithm': 'bridges'}
I0716 19:12:16.013209 126140538426880 run.py:722] (val) algo bridges step 1350: {'is_bridge': 0.7364864864864866, 'score': 0.7364864864864866, 'examples_seen': 21402, 'step': 1350, 'algorithm': 'bridges'}
I0716 19:12:17.621953 126140538426880 run.py:722] (val) algo bridges step 1400: {'is_bridge': 0.8046181172291298, 'score': 0.8046181172291298, 'examples_seen': 22205, 'step': 1400, 'algorithm': 'bridges'}
I0716 19:12:19.196995 126140538426880 run.py:722] (val) algo bridges step 1450: {'is_bridge': 0.7802313354363828, 'score': 0.7802313354363828, 'examples_seen': 22992, 'step': 1450, 'algorithm': 'bridges'}
I0716 19:12:20.895856 126140538426880 run.py:722] (val) algo bridges step 1500: {'is_bridge': 0.7437275985663082, 'score': 0.7437275985663082, 'examples_seen': 23790, 'step': 1500, 'algorithm': 'bridges'}
I0716 19:12:22.534727 126140538426880 run.py:722] (val) algo bridges step 1550: {'is_bridge': 0.8527551942186088, 'score': 0.8527551942186088, 'examples_seen': 24579, 'step': 1550, 'algorithm': 'bridges'}
I0716 19:12:24.190586 126140538426880 run.py:722] (val) algo bridges step 1600: {'is_bridge': 0.8277634961439588, 'score': 0.8277634961439588, 'examples_seen': 25373, 'step': 1600, 'algorithm': 'bridges'}
I0716 19:12:25.869984 126140538426880 run.py:722] (val) algo bridges step 1650: {'is_bridge': 0.9137792103142627, 'score': 0.9137792103142627, 'examples_seen': 26148, 'step': 1650, 'algorithm': 'bridges'}
I0716 19:12:27.510072 126140538426880 run.py:722] (val) algo bridges step 1700: {'is_bridge': 0.7906574394463668, 'score': 0.7906574394463668, 'examples_seen': 26979, 'step': 1700, 'algorithm': 'bridges'}
I0716 19:12:29.122577 126140538426880 run.py:722] (val) algo bridges step 1750: {'is_bridge': 0.774793388429752, 'score': 0.774793388429752, 'examples_seen': 27790, 'step': 1750, 'algorithm': 'bridges'}
I0716 19:12:30.752141 126140538426880 run.py:722] (val) algo bridges step 1800: {'is_bridge': 0.7957405614714423, 'score': 0.7957405614714423, 'examples_seen': 28578, 'step': 1800, 'algorithm': 'bridges'}
I0716 19:12:32.309432 126140538426880 run.py:722] (val) algo bridges step 1850: {'is_bridge': 0.8456790123456791, 'score': 0.8456790123456791, 'examples_seen': 29362, 'step': 1850, 'algorithm': 'bridges'}
I0716 19:12:33.951441 126140538426880 run.py:722] (val) algo bridges step 1900: {'is_bridge': 0.9042769857433809, 'score': 0.9042769857433809, 'examples_seen': 30144, 'step': 1900, 'algorithm': 'bridges'}
I0716 19:12:35.594800 126140538426880 run.py:722] (val) algo bridges step 1950: {'is_bridge': 0.8043956043956043, 'score': 0.8043956043956043, 'examples_seen': 30937, 'step': 1950, 'algorithm': 'bridges'}
I0716 19:12:37.204464 126140538426880 run.py:722] (val) algo bridges step 2000: {'is_bridge': 0.8166849615806806, 'score': 0.8166849615806806, 'examples_seen': 31704, 'step': 2000, 'algorithm': 'bridges'}
I0716 19:12:38.850619 126140538426880 run.py:722] (val) algo bridges step 2050: {'is_bridge': 0.7873210633946831, 'score': 0.7873210633946831, 'examples_seen': 32518, 'step': 2050, 'algorithm': 'bridges'}
I0716 19:12:40.463564 126140538426880 run.py:722] (val) algo bridges step 2100: {'is_bridge': 0.8158168574401664, 'score': 0.8158168574401664, 'examples_seen': 33326, 'step': 2100, 'algorithm': 'bridges'}
I0716 19:12:42.111756 126140538426880 run.py:722] (val) algo bridges step 2150: {'is_bridge': 0.7746341463414634, 'score': 0.7746341463414634, 'examples_seen': 34120, 'step': 2150, 'algorithm': 'bridges'}
I0716 19:12:43.758714 126140538426880 run.py:722] (val) algo bridges step 2200: {'is_bridge': 0.7514124293785309, 'score': 0.7514124293785309, 'examples_seen': 34907, 'step': 2200, 'algorithm': 'bridges'}
I0716 19:12:45.310451 126140538426880 run.py:722] (val) algo bridges step 2250: {'is_bridge': 0.7248157248157249, 'score': 0.7248157248157249, 'examples_seen': 35693, 'step': 2250, 'algorithm': 'bridges'}
I0716 19:12:46.942178 126140538426880 run.py:722] (val) algo bridges step 2300: {'is_bridge': 0.7601476014760149, 'score': 0.7601476014760149, 'examples_seen': 36463, 'step': 2300, 'algorithm': 'bridges'}
I0716 19:12:48.571098 126140538426880 run.py:722] (val) algo bridges step 2350: {'is_bridge': 0.8448275862068966, 'score': 0.8448275862068966, 'examples_seen': 37253, 'step': 2350, 'algorithm': 'bridges'}
I0716 19:12:50.195442 126140538426880 run.py:722] (val) algo bridges step 2400: {'is_bridge': 0.8121212121212122, 'score': 0.8121212121212122, 'examples_seen': 38065, 'step': 2400, 'algorithm': 'bridges'}
I0716 19:12:51.849656 126140538426880 run.py:722] (val) algo bridges step 2450: {'is_bridge': 0.8111332007952287, 'score': 0.8111332007952287, 'examples_seen': 38870, 'step': 2450, 'algorithm': 'bridges'}
I0716 19:12:53.439498 126140538426880 run.py:722] (val) algo bridges step 2500: {'is_bridge': 0.875268817204301, 'score': 0.875268817204301, 'examples_seen': 39671, 'step': 2500, 'algorithm': 'bridges'}
I0716 19:12:55.020565 126140538426880 run.py:722] (val) algo bridges step 2550: {'is_bridge': 0.7778738115816767, 'score': 0.7778738115816767, 'examples_seen': 40461, 'step': 2550, 'algorithm': 'bridges'}
I0716 19:12:56.621839 126140538426880 run.py:722] (val) algo bridges step 2600: {'is_bridge': 0.8145896656534954, 'score': 0.8145896656534954, 'examples_seen': 41238, 'step': 2600, 'algorithm': 'bridges'}
I0716 19:12:58.288164 126140538426880 run.py:722] (val) algo bridges step 2650: {'is_bridge': 0.7747196738022426, 'score': 0.7747196738022426, 'examples_seen': 42028, 'step': 2650, 'algorithm': 'bridges'}
I0716 19:12:59.945789 126140538426880 run.py:722] (val) algo bridges step 2700: {'is_bridge': 0.8014247551202138, 'score': 0.8014247551202138, 'examples_seen': 42801, 'step': 2700, 'algorithm': 'bridges'}
I0716 19:13:01.624979 126140538426880 run.py:722] (val) algo bridges step 2750: {'is_bridge': 0.736842105263158, 'score': 0.736842105263158, 'examples_seen': 43618, 'step': 2750, 'algorithm': 'bridges'}
I0716 19:13:03.211477 126140538426880 run.py:722] (val) algo bridges step 2800: {'is_bridge': 0.802469135802469, 'score': 0.802469135802469, 'examples_seen': 44419, 'step': 2800, 'algorithm': 'bridges'}
I0716 19:13:04.889783 126140538426880 run.py:722] (val) algo bridges step 2850: {'is_bridge': 0.7957405614714426, 'score': 0.7957405614714426, 'examples_seen': 45215, 'step': 2850, 'algorithm': 'bridges'}
I0716 19:13:06.430384 126140538426880 run.py:722] (val) algo bridges step 2900: {'is_bridge': 0.8116469517743403, 'score': 0.8116469517743403, 'examples_seen': 46006, 'step': 2900, 'algorithm': 'bridges'}
I0716 19:13:08.118346 126140538426880 run.py:722] (val) algo bridges step 2950: {'is_bridge': 0.7751479289940828, 'score': 0.7751479289940828, 'examples_seen': 46798, 'step': 2950, 'algorithm': 'bridges'}
I0716 19:13:09.747488 126140538426880 run.py:722] (val) algo bridges step 3000: {'is_bridge': 0.8276436303080766, 'score': 0.8276436303080766, 'examples_seen': 47573, 'step': 3000, 'algorithm': 'bridges'}
I0716 19:13:11.377547 126140538426880 run.py:722] (val) algo bridges step 3050: {'is_bridge': 0.7929515418502203, 'score': 0.7929515418502203, 'examples_seen': 48348, 'step': 3050, 'algorithm': 'bridges'}
I0716 19:13:12.974252 126140538426880 run.py:722] (val) algo bridges step 3100: {'is_bridge': 0.8779599271402551, 'score': 0.8779599271402551, 'examples_seen': 49166, 'step': 3100, 'algorithm': 'bridges'}
I0716 19:13:14.596215 126140538426880 run.py:722] (val) algo bridges step 3150: {'is_bridge': 0.8348909657320872, 'score': 0.8348909657320872, 'examples_seen': 49966, 'step': 3150, 'algorithm': 'bridges'}
I0716 19:13:16.202942 126140538426880 run.py:722] (val) algo bridges step 3200: {'is_bridge': 0.8089171974522293, 'score': 0.8089171974522293, 'examples_seen': 50766, 'step': 3200, 'algorithm': 'bridges'}
I0716 19:13:17.808010 126140538426880 run.py:722] (val) algo bridges step 3250: {'is_bridge': 0.8530405405405405, 'score': 0.8530405405405405, 'examples_seen': 51550, 'step': 3250, 'algorithm': 'bridges'}
I0716 19:13:19.401569 126140538426880 run.py:722] (val) algo bridges step 3300: {'is_bridge': 0.8092948717948719, 'score': 0.8092948717948719, 'examples_seen': 52341, 'step': 3300, 'algorithm': 'bridges'}
I0716 19:13:21.046581 126140538426880 run.py:722] (val) algo bridges step 3350: {'is_bridge': 0.7808930425752856, 'score': 0.7808930425752856, 'examples_seen': 53125, 'step': 3350, 'algorithm': 'bridges'}
I0716 19:13:22.653042 126140538426880 run.py:722] (val) algo bridges step 3400: {'is_bridge': 0.8586723768736616, 'score': 0.8586723768736616, 'examples_seen': 53899, 'step': 3400, 'algorithm': 'bridges'}
I0716 19:13:24.299841 126140538426880 run.py:722] (val) algo bridges step 3450: {'is_bridge': 0.8501872659176031, 'score': 0.8501872659176031, 'examples_seen': 54732, 'step': 3450, 'algorithm': 'bridges'}
I0716 19:13:25.897427 126140538426880 run.py:722] (val) algo bridges step 3500: {'is_bridge': 0.8236380424746076, 'score': 0.8236380424746076, 'examples_seen': 55530, 'step': 3500, 'algorithm': 'bridges'}
I0716 19:13:27.473045 126140538426880 run.py:722] (val) algo bridges step 3550: {'is_bridge': 0.8253968253968254, 'score': 0.8253968253968254, 'examples_seen': 56331, 'step': 3550, 'algorithm': 'bridges'}
I0716 19:13:29.038901 126140538426880 run.py:722] (val) algo bridges step 3600: {'is_bridge': 0.7014341590612777, 'score': 0.7014341590612777, 'examples_seen': 57113, 'step': 3600, 'algorithm': 'bridges'}
I0716 19:13:30.680701 126140538426880 run.py:722] (val) algo bridges step 3650: {'is_bridge': 0.8032345013477089, 'score': 0.8032345013477089, 'examples_seen': 57901, 'step': 3650, 'algorithm': 'bridges'}
I0716 19:13:32.276360 126140538426880 run.py:722] (val) algo bridges step 3700: {'is_bridge': 0.8301886792452832, 'score': 0.8301886792452832, 'examples_seen': 58688, 'step': 3700, 'algorithm': 'bridges'}
I0716 19:13:33.988929 126140538426880 run.py:722] (val) algo bridges step 3750: {'is_bridge': 0.7771010962241169, 'score': 0.7771010962241169, 'examples_seen': 59466, 'step': 3750, 'algorithm': 'bridges'}
I0716 19:13:35.618407 126140538426880 run.py:722] (val) algo bridges step 3800: {'is_bridge': 0.8050193050193051, 'score': 0.8050193050193051, 'examples_seen': 60287, 'step': 3800, 'algorithm': 'bridges'}
I0716 19:13:37.231998 126140538426880 run.py:722] (val) algo bridges step 3850: {'is_bridge': 0.8030634573304157, 'score': 0.8030634573304157, 'examples_seen': 61091, 'step': 3850, 'algorithm': 'bridges'}
I0716 19:13:38.853127 126140538426880 run.py:722] (val) algo bridges step 3900: {'is_bridge': 0.8170731707317074, 'score': 0.8170731707317074, 'examples_seen': 61882, 'step': 3900, 'algorithm': 'bridges'}
I0716 19:13:40.397841 126140538426880 run.py:722] (val) algo bridges step 3950: {'is_bridge': 0.7596899224806201, 'score': 0.7596899224806201, 'examples_seen': 62670, 'step': 3950, 'algorithm': 'bridges'}
I0716 19:13:42.009994 126140538426880 run.py:722] (val) algo bridges step 4000: {'is_bridge': 0.7811764705882352, 'score': 0.7811764705882352, 'examples_seen': 63455, 'step': 4000, 'algorithm': 'bridges'}
I0716 19:13:43.614854 126140538426880 run.py:722] (val) algo bridges step 4050: {'is_bridge': 0.7626168224299065, 'score': 0.7626168224299065, 'examples_seen': 64233, 'step': 4050, 'algorithm': 'bridges'}
I0716 19:13:45.314660 126140538426880 run.py:722] (val) algo bridges step 4100: {'is_bridge': 0.8215613382899628, 'score': 0.8215613382899628, 'examples_seen': 65016, 'step': 4100, 'algorithm': 'bridges'}
I0716 19:13:46.919383 126140538426880 run.py:722] (val) algo bridges step 4150: {'is_bridge': 0.7793427230046949, 'score': 0.7793427230046949, 'examples_seen': 65832, 'step': 4150, 'algorithm': 'bridges'}
I0716 19:13:48.462914 126140538426880 run.py:722] (val) algo bridges step 4200: {'is_bridge': 0.8022181146025877, 'score': 0.8022181146025877, 'examples_seen': 66636, 'step': 4200, 'algorithm': 'bridges'}
I0716 19:13:50.088813 126140538426880 run.py:722] (val) algo bridges step 4250: {'is_bridge': 0.816220880069025, 'score': 0.816220880069025, 'examples_seen': 67428, 'step': 4250, 'algorithm': 'bridges'}
I0716 19:13:51.650840 126140538426880 run.py:722] (val) algo bridges step 4300: {'is_bridge': 0.7735618115055078, 'score': 0.7735618115055078, 'examples_seen': 68211, 'step': 4300, 'algorithm': 'bridges'}
I0716 19:13:53.273263 126140538426880 run.py:722] (val) algo bridges step 4350: {'is_bridge': 0.7900092506938019, 'score': 0.7900092506938019, 'examples_seen': 68994, 'step': 4350, 'algorithm': 'bridges'}
I0716 19:13:54.906381 126140538426880 run.py:722] (val) algo bridges step 4400: {'is_bridge': 0.7490494296577948, 'score': 0.7490494296577948, 'examples_seen': 69775, 'step': 4400, 'algorithm': 'bridges'}
I0716 19:13:56.525643 126140538426880 run.py:722] (val) algo bridges step 4450: {'is_bridge': 0.8039041703637977, 'score': 0.8039041703637977, 'examples_seen': 70558, 'step': 4450, 'algorithm': 'bridges'}
I0716 19:13:58.154133 126140538426880 run.py:722] (val) algo bridges step 4500: {'is_bridge': 0.8192771084337349, 'score': 0.8192771084337349, 'examples_seen': 71376, 'step': 4500, 'algorithm': 'bridges'}
I0716 19:13:59.814243 126140538426880 run.py:722] (val) algo bridges step 4550: {'is_bridge': 0.8052208835341366, 'score': 0.8052208835341366, 'examples_seen': 72190, 'step': 4550, 'algorithm': 'bridges'}
I0716 19:14:01.442792 126140538426880 run.py:722] (val) algo bridges step 4600: {'is_bridge': 0.843322818086225, 'score': 0.843322818086225, 'examples_seen': 72975, 'step': 4600, 'algorithm': 'bridges'}
I0716 19:14:03.056965 126140538426880 run.py:722] (val) algo bridges step 4650: {'is_bridge': 0.7220630372492837, 'score': 0.7220630372492837, 'examples_seen': 73768, 'step': 4650, 'algorithm': 'bridges'}
I0716 19:14:04.679683 126140538426880 run.py:722] (val) algo bridges step 4700: {'is_bridge': 0.7710843373493975, 'score': 0.7710843373493975, 'examples_seen': 74547, 'step': 4700, 'algorithm': 'bridges'}
I0716 19:14:06.303807 126140538426880 run.py:722] (val) algo bridges step 4750: {'is_bridge': 0.8172413793103448, 'score': 0.8172413793103448, 'examples_seen': 75326, 'step': 4750, 'algorithm': 'bridges'}
I0716 19:14:07.952908 126140538426880 run.py:722] (val) algo bridges step 4800: {'is_bridge': 0.7843494085532303, 'score': 0.7843494085532303, 'examples_seen': 76108, 'step': 4800, 'algorithm': 'bridges'}
I0716 19:14:09.581319 126140538426880 run.py:722] (val) algo bridges step 4850: {'is_bridge': 0.7931363203050524, 'score': 0.7931363203050524, 'examples_seen': 76931, 'step': 4850, 'algorithm': 'bridges'}
I0716 19:14:11.222400 126140538426880 run.py:722] (val) algo bridges step 4900: {'is_bridge': 0.7980487804878049, 'score': 0.7980487804878049, 'examples_seen': 77727, 'step': 4900, 'algorithm': 'bridges'}
I0716 19:14:12.790392 126140538426880 run.py:722] (val) algo bridges step 4950: {'is_bridge': 0.7895167895167894, 'score': 0.7895167895167894, 'examples_seen': 78527, 'step': 4950, 'algorithm': 'bridges'}
I0716 19:14:14.402500 126140538426880 run.py:722] (val) algo bridges step 5000: {'is_bridge': 0.7010989010989012, 'score': 0.7010989010989012, 'examples_seen': 79314, 'step': 5000, 'algorithm': 'bridges'}
I0716 19:14:16.036636 126140538426880 run.py:722] (val) algo bridges step 5050: {'is_bridge': 0.8162816281628164, 'score': 0.8162816281628164, 'examples_seen': 80101, 'step': 5050, 'algorithm': 'bridges'}
I0716 19:14:17.679338 126140538426880 run.py:722] (val) algo bridges step 5100: {'is_bridge': 0.8173178458289334, 'score': 0.8173178458289334, 'examples_seen': 80879, 'step': 5100, 'algorithm': 'bridges'}
I0716 19:14:19.357748 126140538426880 run.py:722] (val) algo bridges step 5150: {'is_bridge': 0.7696078431372549, 'score': 0.7696078431372549, 'examples_seen': 81662, 'step': 5150, 'algorithm': 'bridges'}
I0716 19:14:20.924741 126140538426880 run.py:722] (val) algo bridges step 5200: {'is_bridge': 0.7375132837407015, 'score': 0.7375132837407015, 'examples_seen': 82480, 'step': 5200, 'algorithm': 'bridges'}
I0716 19:14:22.556565 126140538426880 run.py:722] (val) algo bridges step 5250: {'is_bridge': 0.8489483747609943, 'score': 0.8489483747609943, 'examples_seen': 83294, 'step': 5250, 'algorithm': 'bridges'}
I0716 19:14:24.167323 126140538426880 run.py:722] (val) algo bridges step 5300: {'is_bridge': 0.8185880250223414, 'score': 0.8185880250223414, 'examples_seen': 84080, 'step': 5300, 'algorithm': 'bridges'}
I0716 19:14:25.793744 126140538426880 run.py:722] (val) algo bridges step 5350: {'is_bridge': 0.7687224669603524, 'score': 0.7687224669603524, 'examples_seen': 84873, 'step': 5350, 'algorithm': 'bridges'}
I0716 19:14:27.365719 126140538426880 run.py:722] (val) algo bridges step 5400: {'is_bridge': 0.7774420946626385, 'score': 0.7774420946626385, 'examples_seen': 85657, 'step': 5400, 'algorithm': 'bridges'}
I0716 19:14:28.963428 126140538426880 run.py:722] (val) algo bridges step 5450: {'is_bridge': 0.8169811320754717, 'score': 0.8169811320754717, 'examples_seen': 86431, 'step': 5450, 'algorithm': 'bridges'}
I0716 19:14:30.621049 126140538426880 run.py:722] (val) algo bridges step 5500: {'is_bridge': 0.7654320987654321, 'score': 0.7654320987654321, 'examples_seen': 87219, 'step': 5500, 'algorithm': 'bridges'}
I0716 19:14:32.289655 126140538426880 run.py:722] (val) algo bridges step 5550: {'is_bridge': 0.8160597572362278, 'score': 0.8160597572362278, 'examples_seen': 88046, 'step': 5550, 'algorithm': 'bridges'}
I0716 19:14:33.977657 126140538426880 run.py:722] (val) algo bridges step 5600: {'is_bridge': 0.8061316501352569, 'score': 0.8061316501352569, 'examples_seen': 88846, 'step': 5600, 'algorithm': 'bridges'}
I0716 19:14:35.602037 126140538426880 run.py:722] (val) algo bridges step 5650: {'is_bridge': 0.7861715749039694, 'score': 0.7861715749039694, 'examples_seen': 89638, 'step': 5650, 'algorithm': 'bridges'}
I0716 19:14:37.183804 126140538426880 run.py:722] (val) algo bridges step 5700: {'is_bridge': 0.8856589147286822, 'score': 0.8856589147286822, 'examples_seen': 90427, 'step': 5700, 'algorithm': 'bridges'}
I0716 19:14:38.845229 126140538426880 run.py:722] (val) algo bridges step 5750: {'is_bridge': 0.8243093922651934, 'score': 0.8243093922651934, 'examples_seen': 91206, 'step': 5750, 'algorithm': 'bridges'}
I0716 19:14:40.556503 126140538426880 run.py:722] (val) algo bridges step 5800: {'is_bridge': 0.8193916349809885, 'score': 0.8193916349809885, 'examples_seen': 91993, 'step': 5800, 'algorithm': 'bridges'}
I0716 19:14:42.159186 126140538426880 run.py:722] (val) algo bridges step 5850: {'is_bridge': 0.8289473684210525, 'score': 0.8289473684210525, 'examples_seen': 92776, 'step': 5850, 'algorithm': 'bridges'}
I0716 19:14:43.838501 126140538426880 run.py:722] (val) algo bridges step 5900: {'is_bridge': 0.7946058091286308, 'score': 0.7946058091286308, 'examples_seen': 93595, 'step': 5900, 'algorithm': 'bridges'}
I0716 19:14:45.509073 126140538426880 run.py:722] (val) algo bridges step 5950: {'is_bridge': 0.7706945765937202, 'score': 0.7706945765937202, 'examples_seen': 94394, 'step': 5950, 'algorithm': 'bridges'}
I0716 19:14:47.131304 126140538426880 run.py:722] (val) algo bridges step 6000: {'is_bridge': 0.8053007135575942, 'score': 0.8053007135575942, 'examples_seen': 95185, 'step': 6000, 'algorithm': 'bridges'}
I0716 19:14:48.700783 126140538426880 run.py:722] (val) algo bridges step 6050: {'is_bridge': 0.803809523809524, 'score': 0.803809523809524, 'examples_seen': 95970, 'step': 6050, 'algorithm': 'bridges'}
I0716 19:14:50.275356 126140538426880 run.py:722] (val) algo bridges step 6100: {'is_bridge': 0.8582834331337326, 'score': 0.8582834331337326, 'examples_seen': 96745, 'step': 6100, 'algorithm': 'bridges'}
I0716 19:14:51.963715 126140538426880 run.py:722] (val) algo bridges step 6150: {'is_bridge': 0.8486140724946695, 'score': 0.8486140724946695, 'examples_seen': 97528, 'step': 6150, 'algorithm': 'bridges'}
I0716 19:14:53.614790 126140538426880 run.py:722] (val) algo bridges step 6200: {'is_bridge': 0.8534258456201214, 'score': 0.8534258456201214, 'examples_seen': 98310, 'step': 6200, 'algorithm': 'bridges'}
I0716 19:14:55.231741 126140538426880 run.py:722] (val) algo bridges step 6250: {'is_bridge': 0.759825327510917, 'score': 0.759825327510917, 'examples_seen': 99125, 'step': 6250, 'algorithm': 'bridges'}
I0716 19:14:56.851116 126140538426880 run.py:722] (val) algo bridges step 6300: {'is_bridge': 0.8223463687150838, 'score': 0.8223463687150838, 'examples_seen': 99930, 'step': 6300, 'algorithm': 'bridges'}
I0716 19:14:58.501064 126140538426880 run.py:722] (val) algo bridges step 6350: {'is_bridge': 0.7995824634655533, 'score': 0.7995824634655533, 'examples_seen': 100714, 'step': 6350, 'algorithm': 'bridges'}
I0716 19:15:00.097933 126140538426880 run.py:722] (val) algo bridges step 6400: {'is_bridge': 0.8233082706766918, 'score': 0.8233082706766918, 'examples_seen': 101505, 'step': 6400, 'algorithm': 'bridges'}
I0716 19:15:01.680915 126140538426880 run.py:722] (val) algo bridges step 6450: {'is_bridge': 0.7978378378378379, 'score': 0.7978378378378379, 'examples_seen': 102293, 'step': 6450, 'algorithm': 'bridges'}
I0716 19:15:03.299069 126140538426880 run.py:722] (val) algo bridges step 6500: {'is_bridge': 0.7442307692307691, 'score': 0.7442307692307691, 'examples_seen': 103075, 'step': 6500, 'algorithm': 'bridges'}
I0716 19:15:04.943119 126140538426880 run.py:722] (val) algo bridges step 6550: {'is_bridge': 0.7809734513274337, 'score': 0.7809734513274337, 'examples_seen': 103854, 'step': 6550, 'algorithm': 'bridges'}
I0716 19:15:06.605008 126140538426880 run.py:722] (val) algo bridges step 6600: {'is_bridge': 0.831314072693383, 'score': 0.831314072693383, 'examples_seen': 104682, 'step': 6600, 'algorithm': 'bridges'}
I0716 19:15:08.226818 126140538426880 run.py:722] (val) algo bridges step 6650: {'is_bridge': 0.8491228070175437, 'score': 0.8491228070175437, 'examples_seen': 105484, 'step': 6650, 'algorithm': 'bridges'}
I0716 19:15:09.760689 126140538426880 run.py:722] (val) algo bridges step 6700: {'is_bridge': 0.8663212435233162, 'score': 0.8663212435233162, 'examples_seen': 106273, 'step': 6700, 'algorithm': 'bridges'}
I0716 19:15:11.415409 126140538426880 run.py:722] (val) algo bridges step 6750: {'is_bridge': 0.8586171310629515, 'score': 0.8586171310629515, 'examples_seen': 107058, 'step': 6750, 'algorithm': 'bridges'}
I0716 19:15:13.034185 126140538426880 run.py:722] (val) algo bridges step 6800: {'is_bridge': 0.8184383819379116, 'score': 0.8184383819379116, 'examples_seen': 107837, 'step': 6800, 'algorithm': 'bridges'}
I0716 19:15:14.667670 126140538426880 run.py:722] (val) algo bridges step 6850: {'is_bridge': 0.8032454361054767, 'score': 0.8032454361054767, 'examples_seen': 108619, 'step': 6850, 'algorithm': 'bridges'}
I0716 19:15:16.312911 126140538426880 run.py:722] (val) algo bridges step 6900: {'is_bridge': 0.8152295632698768, 'score': 0.8152295632698768, 'examples_seen': 109394, 'step': 6900, 'algorithm': 'bridges'}
I0716 19:15:17.937237 126140538426880 run.py:722] (val) algo bridges step 6950: {'is_bridge': 0.8614157527417747, 'score': 0.8614157527417747, 'examples_seen': 110221, 'step': 6950, 'algorithm': 'bridges'}
I0716 19:15:19.510637 126140538426880 run.py:722] (val) algo bridges step 7000: {'is_bridge': 0.8405797101449276, 'score': 0.8405797101449276, 'examples_seen': 111023, 'step': 7000, 'algorithm': 'bridges'}
I0716 19:15:21.078195 126140538426880 run.py:722] (val) algo bridges step 7050: {'is_bridge': 0.884318766066838, 'score': 0.884318766066838, 'examples_seen': 111818, 'step': 7050, 'algorithm': 'bridges'}
I0716 19:15:22.660353 126140538426880 run.py:722] (val) algo bridges step 7100: {'is_bridge': 0.7569803516028956, 'score': 0.7569803516028956, 'examples_seen': 112603, 'step': 7100, 'algorithm': 'bridges'}
I0716 19:15:24.364971 126140538426880 run.py:722] (val) algo bridges step 7150: {'is_bridge': 0.7686567164179106, 'score': 0.7686567164179106, 'examples_seen': 113385, 'step': 7150, 'algorithm': 'bridges'}
I0716 19:15:26.022104 126140538426880 run.py:722] (val) algo bridges step 7200: {'is_bridge': 0.7483870967741937, 'score': 0.7483870967741937, 'examples_seen': 114163, 'step': 7200, 'algorithm': 'bridges'}
I0716 19:15:27.713644 126140538426880 run.py:722] (val) algo bridges step 7250: {'is_bridge': 0.76905311778291, 'score': 0.76905311778291, 'examples_seen': 114957, 'step': 7250, 'algorithm': 'bridges'}
I0716 19:15:29.317358 126140538426880 run.py:722] (val) algo bridges step 7300: {'is_bridge': 0.7876588021778584, 'score': 0.7876588021778584, 'examples_seen': 115775, 'step': 7300, 'algorithm': 'bridges'}
I0716 19:15:30.916917 126140538426880 run.py:722] (val) algo bridges step 7350: {'is_bridge': 0.8253319713993871, 'score': 0.8253319713993871, 'examples_seen': 116585, 'step': 7350, 'algorithm': 'bridges'}
I0716 19:15:32.509848 126140538426880 run.py:722] (val) algo bridges step 7400: {'is_bridge': 0.8464566929133859, 'score': 0.8464566929133859, 'examples_seen': 117369, 'step': 7400, 'algorithm': 'bridges'}
I0716 19:15:34.128021 126140538426880 run.py:722] (val) algo bridges step 7450: {'is_bridge': 0.7551569506726458, 'score': 0.7551569506726458, 'examples_seen': 118150, 'step': 7450, 'algorithm': 'bridges'}
I0716 19:15:35.762336 126140538426880 run.py:722] (val) algo bridges step 7500: {'is_bridge': 0.7637969094922737, 'score': 0.7637969094922737, 'examples_seen': 118931, 'step': 7500, 'algorithm': 'bridges'}
I0716 19:15:37.380436 126140538426880 run.py:722] (val) algo bridges step 7550: {'is_bridge': 0.7415929203539823, 'score': 0.7415929203539823, 'examples_seen': 119715, 'step': 7550, 'algorithm': 'bridges'}
I0716 19:15:39.029690 126140538426880 run.py:722] (val) algo bridges step 7600: {'is_bridge': 0.8126801152737753, 'score': 0.8126801152737753, 'examples_seen': 120499, 'step': 7600, 'algorithm': 'bridges'}
I0716 19:15:40.675605 126140538426880 run.py:722] (val) algo bridges step 7650: {'is_bridge': 0.7790973871733967, 'score': 0.7790973871733967, 'examples_seen': 121320, 'step': 7650, 'algorithm': 'bridges'}
I0716 19:15:42.233377 126140538426880 run.py:722] (val) algo bridges step 7700: {'is_bridge': 0.8795074758135444, 'score': 0.8795074758135444, 'examples_seen': 122120, 'step': 7700, 'algorithm': 'bridges'}
I0716 19:15:43.854175 126140538426880 run.py:722] (val) algo bridges step 7750: {'is_bridge': 0.8698817106460418, 'score': 0.8698817106460418, 'examples_seen': 122916, 'step': 7750, 'algorithm': 'bridges'}
I0716 19:15:45.487642 126140538426880 run.py:722] (val) algo bridges step 7800: {'is_bridge': 0.8193832599118943, 'score': 0.8193832599118943, 'examples_seen': 123694, 'step': 7800, 'algorithm': 'bridges'}
I0716 19:15:47.082226 126140538426880 run.py:722] (val) algo bridges step 7850: {'is_bridge': 0.8333333333333334, 'score': 0.8333333333333334, 'examples_seen': 124473, 'step': 7850, 'algorithm': 'bridges'}
I0716 19:15:48.723428 126140538426880 run.py:722] (val) algo bridges step 7900: {'is_bridge': 0.7928888888888889, 'score': 0.7928888888888889, 'examples_seen': 125257, 'step': 7900, 'algorithm': 'bridges'}
I0716 19:15:50.328962 126140538426880 run.py:722] (val) algo bridges step 7950: {'is_bridge': 0.8731617647058824, 'score': 0.8731617647058824, 'examples_seen': 126040, 'step': 7950, 'algorithm': 'bridges'}
I0716 19:15:51.994068 126140538426880 run.py:722] (val) algo bridges step 8000: {'is_bridge': 0.7941176470588236, 'score': 0.7941176470588236, 'examples_seen': 126860, 'step': 8000, 'algorithm': 'bridges'}
I0716 19:15:53.565786 126140538426880 run.py:722] (val) algo bridges step 8050: {'is_bridge': 0.8364279398762158, 'score': 0.8364279398762158, 'examples_seen': 127654, 'step': 8050, 'algorithm': 'bridges'}
I0716 19:15:55.259430 126140538426880 run.py:722] (val) algo bridges step 8100: {'is_bridge': 0.8183520599250936, 'score': 0.8183520599250936, 'examples_seen': 128447, 'step': 8100, 'algorithm': 'bridges'}
I0716 19:15:56.950605 126140538426880 run.py:722] (val) algo bridges step 8150: {'is_bridge': 0.8102658111824015, 'score': 0.8102658111824015, 'examples_seen': 129242, 'step': 8150, 'algorithm': 'bridges'}
I0716 19:15:58.578146 126140538426880 run.py:722] (val) algo bridges step 8200: {'is_bridge': 0.7720848056537102, 'score': 0.7720848056537102, 'examples_seen': 130027, 'step': 8200, 'algorithm': 'bridges'}
I0716 19:16:00.255420 126140538426880 run.py:722] (val) algo bridges step 8250: {'is_bridge': 0.7928994082840236, 'score': 0.7928994082840236, 'examples_seen': 130806, 'step': 8250, 'algorithm': 'bridges'}
I0716 19:16:01.956431 126140538426880 run.py:722] (val) algo bridges step 8300: {'is_bridge': 0.8031809145129225, 'score': 0.8031809145129225, 'examples_seen': 131584, 'step': 8300, 'algorithm': 'bridges'}
I0716 19:16:03.633695 126140538426880 run.py:722] (val) algo bridges step 8350: {'is_bridge': 0.8426573426573427, 'score': 0.8426573426573427, 'examples_seen': 132407, 'step': 8350, 'algorithm': 'bridges'}
I0716 19:16:05.201916 126140538426880 run.py:722] (val) algo bridges step 8400: {'is_bridge': 0.743820224719101, 'score': 0.743820224719101, 'examples_seen': 133208, 'step': 8400, 'algorithm': 'bridges'}
I0716 19:16:06.884169 126140538426880 run.py:722] (val) algo bridges step 8450: {'is_bridge': 0.8312439729990357, 'score': 0.8312439729990357, 'examples_seen': 133997, 'step': 8450, 'algorithm': 'bridges'}
I0716 19:16:08.475724 126140538426880 run.py:722] (val) algo bridges step 8500: {'is_bridge': 0.8194594594594595, 'score': 0.8194594594594595, 'examples_seen': 134780, 'step': 8500, 'algorithm': 'bridges'}
I0716 19:16:10.139590 126140538426880 run.py:722] (val) algo bridges step 8550: {'is_bridge': 0.8098591549295775, 'score': 0.8098591549295775, 'examples_seen': 135570, 'step': 8550, 'algorithm': 'bridges'}
I0716 19:16:11.877119 126140538426880 run.py:722] (val) algo bridges step 8600: {'is_bridge': 0.7322611163670767, 'score': 0.7322611163670767, 'examples_seen': 136362, 'step': 8600, 'algorithm': 'bridges'}
I0716 19:16:13.548749 126140538426880 run.py:722] (val) algo bridges step 8650: {'is_bridge': 0.7829977628635347, 'score': 0.7829977628635347, 'examples_seen': 137135, 'step': 8650, 'algorithm': 'bridges'}
I0716 19:16:15.188836 126140538426880 run.py:722] (val) algo bridges step 8700: {'is_bridge': 0.7566137566137566, 'score': 0.7566137566137566, 'examples_seen': 137954, 'step': 8700, 'algorithm': 'bridges'}
I0716 19:16:16.844645 126140538426880 run.py:722] (val) algo bridges step 8750: {'is_bridge': 0.7712287712287713, 'score': 0.7712287712287713, 'examples_seen': 138756, 'step': 8750, 'algorithm': 'bridges'}
I0716 19:16:18.439987 126140538426880 run.py:722] (val) algo bridges step 8800: {'is_bridge': 0.805019305019305, 'score': 0.805019305019305, 'examples_seen': 139540, 'step': 8800, 'algorithm': 'bridges'}
I0716 19:16:20.100102 126140538426880 run.py:722] (val) algo bridges step 8850: {'is_bridge': 0.8407960199004975, 'score': 0.8407960199004975, 'examples_seen': 140330, 'step': 8850, 'algorithm': 'bridges'}
I0716 19:16:21.713712 126140538426880 run.py:722] (val) algo bridges step 8900: {'is_bridge': 0.7976539589442815, 'score': 0.7976539589442815, 'examples_seen': 141109, 'step': 8900, 'algorithm': 'bridges'}
I0716 19:16:23.349686 126140538426880 run.py:722] (val) algo bridges step 8950: {'is_bridge': 0.7967479674796748, 'score': 0.7967479674796748, 'examples_seen': 141899, 'step': 8950, 'algorithm': 'bridges'}
I0716 19:16:25.002769 126140538426880 run.py:722] (val) algo bridges step 9000: {'is_bridge': 0.8250000000000002, 'score': 0.8250000000000002, 'examples_seen': 142677, 'step': 9000, 'algorithm': 'bridges'}
I0716 19:16:26.695491 126140538426880 run.py:722] (val) algo bridges step 9050: {'is_bridge': 0.8035320088300221, 'score': 0.8035320088300221, 'examples_seen': 143489, 'step': 9050, 'algorithm': 'bridges'}
I0716 19:16:28.397365 126140538426880 run.py:722] (val) algo bridges step 9100: {'is_bridge': 0.8293963254593175, 'score': 0.8293963254593175, 'examples_seen': 144301, 'step': 9100, 'algorithm': 'bridges'}
I0716 19:16:30.064286 126140538426880 run.py:722] (val) algo bridges step 9150: {'is_bridge': 0.8629550321199143, 'score': 0.8629550321199143, 'examples_seen': 145094, 'step': 9150, 'algorithm': 'bridges'}
I0716 19:16:31.682125 126140538426880 run.py:722] (val) algo bridges step 9200: {'is_bridge': 0.8444902162718847, 'score': 0.8444902162718847, 'examples_seen': 145880, 'step': 9200, 'algorithm': 'bridges'}
I0716 19:16:33.294793 126140538426880 run.py:722] (val) algo bridges step 9250: {'is_bridge': 0.808134394341291, 'score': 0.808134394341291, 'examples_seen': 146666, 'step': 9250, 'algorithm': 'bridges'}
I0716 19:16:34.954233 126140538426880 run.py:722] (val) algo bridges step 9300: {'is_bridge': 0.7982300884955753, 'score': 0.7982300884955753, 'examples_seen': 147448, 'step': 9300, 'algorithm': 'bridges'}
I0716 19:16:36.602611 126140538426880 run.py:722] (val) algo bridges step 9350: {'is_bridge': 0.7740492170022372, 'score': 0.7740492170022372, 'examples_seen': 148230, 'step': 9350, 'algorithm': 'bridges'}
I0716 19:16:38.240686 126140538426880 run.py:722] (val) algo bridges step 9400: {'is_bridge': 0.8284389489953633, 'score': 0.8284389489953633, 'examples_seen': 149047, 'step': 9400, 'algorithm': 'bridges'}
I0716 19:16:39.916682 126140538426880 run.py:722] (val) algo bridges step 9450: {'is_bridge': 0.867075664621677, 'score': 0.867075664621677, 'examples_seen': 149855, 'step': 9450, 'algorithm': 'bridges'}
I0716 19:16:41.563369 126140538426880 run.py:722] (val) algo bridges step 9500: {'is_bridge': 0.8301486199575372, 'score': 0.8301486199575372, 'examples_seen': 150644, 'step': 9500, 'algorithm': 'bridges'}
I0716 19:16:43.198805 126140538426880 run.py:722] (val) algo bridges step 9550: {'is_bridge': 0.8160152526215443, 'score': 0.8160152526215443, 'examples_seen': 151437, 'step': 9550, 'algorithm': 'bridges'}
I0716 19:16:44.805226 126140538426880 run.py:722] (val) algo bridges step 9600: {'is_bridge': 0.803088803088803, 'score': 0.803088803088803, 'examples_seen': 152222, 'step': 9600, 'algorithm': 'bridges'}
I0716 19:16:46.490205 126140538426880 run.py:722] (val) algo bridges step 9650: {'is_bridge': 0.8320158102766798, 'score': 0.8320158102766798, 'examples_seen': 153008, 'step': 9650, 'algorithm': 'bridges'}
I0716 19:16:48.198501 126140538426880 run.py:722] (val) algo bridges step 9700: {'is_bridge': 0.8571428571428571, 'score': 0.8571428571428571, 'examples_seen': 153803, 'step': 9700, 'algorithm': 'bridges'}
I0716 19:16:49.883726 126140538426880 run.py:722] (val) algo bridges step 9750: {'is_bridge': 0.8393686165273909, 'score': 0.8393686165273909, 'examples_seen': 154616, 'step': 9750, 'algorithm': 'bridges'}
I0716 19:16:51.459562 126140538426880 run.py:722] (val) algo bridges step 9800: {'is_bridge': 0.7964125560538117, 'score': 0.7964125560538117, 'examples_seen': 155420, 'step': 9800, 'algorithm': 'bridges'}
I0716 19:16:53.100914 126140538426880 run.py:722] (val) algo bridges step 9850: {'is_bridge': 0.8116504854368932, 'score': 0.8116504854368932, 'examples_seen': 156214, 'step': 9850, 'algorithm': 'bridges'}
I0716 19:16:54.724743 126140538426880 run.py:722] (val) algo bridges step 9900: {'is_bridge': 0.8197802197802199, 'score': 0.8197802197802199, 'examples_seen': 157002, 'step': 9900, 'algorithm': 'bridges'}
I0716 19:16:56.381241 126140538426880 run.py:722] (val) algo bridges step 9950: {'is_bridge': 0.7982261640798226, 'score': 0.7982261640798226, 'examples_seen': 157775, 'step': 9950, 'algorithm': 'bridges'}
I0716 19:16:57.778872 126140538426880 run.py:752] Restoring best model from checkpoint...
I0716 19:17:10.353070 126140538426880 run.py:767] (test) algo bridges : {'is_bridge': 0.723540731237973, 'score': 0.723540731237973, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'bridges'}
I0716 19:17:10.353259 126140538426880 run.py:769] Done!
