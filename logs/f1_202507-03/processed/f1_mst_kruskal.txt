I0716 00:07:02.775434 135273028449792 run.py:722] (val) algo mst_kruskal step 0: {'in_mst': 0.3429852419204184, 'score': 0.3429852419204184, 'examples_seen': 173, 'step': 0, 'algorithm': 'mst_kruskal'}
I0716 00:08:45.692760 135273028449792 run.py:722] (val) algo mst_kruskal step 50: {'in_mst': 0.6155218554861731, 'score': 0.6155218554861731, 'examples_seen': 4391, 'step': 50, 'algorithm': 'mst_kruskal'}
I0716 00:08:49.138041 135273028449792 run.py:722] (val) algo mst_kruskal step 100: {'in_mst': 0.5642432556012803, 'score': 0.5642432556012803, 'examples_seen': 8479, 'step': 100, 'algorithm': 'mst_kruskal'}
I0716 00:08:52.399405 135273028449792 run.py:722] (val) algo mst_kruskal step 150: {'in_mst': 0.5130260521042084, 'score': 0.5130260521042084, 'examples_seen': 12607, 'step': 150, 'algorithm': 'mst_kruskal'}
I0716 00:08:55.583106 135273028449792 run.py:722] (val) algo mst_kruskal step 200: {'in_mst': 0.5798270893371757, 'score': 0.5798270893371757, 'examples_seen': 16654, 'step': 200, 'algorithm': 'mst_kruskal'}
I0716 00:08:58.877240 135273028449792 run.py:722] (val) algo mst_kruskal step 250: {'in_mst': 0.5407011289364231, 'score': 0.5407011289364231, 'examples_seen': 20657, 'step': 250, 'algorithm': 'mst_kruskal'}
I0716 00:09:02.143008 135273028449792 run.py:722] (val) algo mst_kruskal step 300: {'in_mst': 0.6792452830188679, 'score': 0.6792452830188679, 'examples_seen': 24913, 'step': 300, 'algorithm': 'mst_kruskal'}
I0716 00:09:05.421030 135273028449792 run.py:722] (val) algo mst_kruskal step 350: {'in_mst': 0.553211009174312, 'score': 0.553211009174312, 'examples_seen': 29115, 'step': 350, 'algorithm': 'mst_kruskal'}
I0716 00:09:08.697396 135273028449792 run.py:722] (val) algo mst_kruskal step 400: {'in_mst': 0.6039856923863055, 'score': 0.6039856923863055, 'examples_seen': 33291, 'step': 400, 'algorithm': 'mst_kruskal'}
I0716 00:09:11.884172 135273028449792 run.py:722] (val) algo mst_kruskal step 450: {'in_mst': 0.5665280665280664, 'score': 0.5665280665280664, 'examples_seen': 37323, 'step': 450, 'algorithm': 'mst_kruskal'}
I0716 00:09:15.142791 135273028449792 run.py:722] (val) algo mst_kruskal step 500: {'in_mst': 0.6, 'score': 0.6, 'examples_seen': 41441, 'step': 500, 'algorithm': 'mst_kruskal'}
I0716 00:09:18.480562 135273028449792 run.py:722] (val) algo mst_kruskal step 550: {'in_mst': 0.5600448933782268, 'score': 0.5600448933782268, 'examples_seen': 45561, 'step': 550, 'algorithm': 'mst_kruskal'}
I0716 00:09:21.827893 135273028449792 run.py:722] (val) algo mst_kruskal step 600: {'in_mst': 0.6351851851851852, 'score': 0.6351851851851852, 'examples_seen': 49670, 'step': 600, 'algorithm': 'mst_kruskal'}
I0716 00:09:25.159814 135273028449792 run.py:722] (val) algo mst_kruskal step 650: {'in_mst': 0.5759113982464237, 'score': 0.5759113982464237, 'examples_seen': 53982, 'step': 650, 'algorithm': 'mst_kruskal'}
I0716 00:09:28.455757 135273028449792 run.py:722] (val) algo mst_kruskal step 700: {'in_mst': 0.6231707317073171, 'score': 0.6231707317073171, 'examples_seen': 58197, 'step': 700, 'algorithm': 'mst_kruskal'}
I0716 00:09:31.567193 135273028449792 run.py:722] (val) algo mst_kruskal step 750: {'in_mst': 0.6194594594594596, 'score': 0.6194594594594596, 'examples_seen': 62281, 'step': 750, 'algorithm': 'mst_kruskal'}
I0716 00:09:34.771398 135273028449792 run.py:722] (val) algo mst_kruskal step 800: {'in_mst': 0.5338120885697187, 'score': 0.5338120885697187, 'examples_seen': 66331, 'step': 800, 'algorithm': 'mst_kruskal'}
I0716 00:09:37.912405 135273028449792 run.py:722] (val) algo mst_kruskal step 850: {'in_mst': 0.6680277664352798, 'score': 0.6680277664352798, 'examples_seen': 70296, 'step': 850, 'algorithm': 'mst_kruskal'}
I0716 00:09:41.306178 135273028449792 run.py:722] (val) algo mst_kruskal step 900: {'in_mst': 0.6371115173674587, 'score': 0.6371115173674587, 'examples_seen': 74389, 'step': 900, 'algorithm': 'mst_kruskal'}
I0716 00:09:44.626576 135273028449792 run.py:722] (val) algo mst_kruskal step 950: {'in_mst': 0.6753371868978806, 'score': 0.6753371868978806, 'examples_seen': 78478, 'step': 950, 'algorithm': 'mst_kruskal'}
I0716 00:09:48.022486 135273028449792 run.py:722] (val) algo mst_kruskal step 1000: {'in_mst': 0.6149553571428571, 'score': 0.6149553571428571, 'examples_seen': 82731, 'step': 1000, 'algorithm': 'mst_kruskal'}
I0716 00:09:51.486589 135273028449792 run.py:722] (val) algo mst_kruskal step 1050: {'in_mst': 0.44473007712082263, 'score': 0.44473007712082263, 'examples_seen': 86984, 'step': 1050, 'algorithm': 'mst_kruskal'}
I0716 00:09:54.678969 135273028449792 run.py:722] (val) algo mst_kruskal step 1100: {'in_mst': 0.5445026178010471, 'score': 0.5445026178010471, 'examples_seen': 91118, 'step': 1100, 'algorithm': 'mst_kruskal'}
I0716 00:09:58.034290 135273028449792 run.py:722] (val) algo mst_kruskal step 1150: {'in_mst': 0.6860236220472441, 'score': 0.6860236220472441, 'examples_seen': 95345, 'step': 1150, 'algorithm': 'mst_kruskal'}
I0716 00:10:01.287376 135273028449792 run.py:722] (val) algo mst_kruskal step 1200: {'in_mst': 0.6918976545842217, 'score': 0.6918976545842217, 'examples_seen': 99323, 'step': 1200, 'algorithm': 'mst_kruskal'}
I0716 00:10:04.577142 135273028449792 run.py:722] (val) algo mst_kruskal step 1250: {'in_mst': 0.5862279098110909, 'score': 0.5862279098110909, 'examples_seen': 103404, 'step': 1250, 'algorithm': 'mst_kruskal'}
I0716 00:10:07.882748 135273028449792 run.py:722] (val) algo mst_kruskal step 1300: {'in_mst': 0.6847662141779789, 'score': 0.6847662141779789, 'examples_seen': 107531, 'step': 1300, 'algorithm': 'mst_kruskal'}
I0716 00:10:11.138329 135273028449792 run.py:722] (val) algo mst_kruskal step 1350: {'in_mst': 0.6625829504849413, 'score': 0.6625829504849413, 'examples_seen': 111837, 'step': 1350, 'algorithm': 'mst_kruskal'}
I0716 00:10:14.500298 135273028449792 run.py:722] (val) algo mst_kruskal step 1400: {'in_mst': 0.641408751334045, 'score': 0.641408751334045, 'examples_seen': 116034, 'step': 1400, 'algorithm': 'mst_kruskal'}
I0716 00:10:17.651061 135273028449792 run.py:722] (val) algo mst_kruskal step 1450: {'in_mst': 0.6218097447795823, 'score': 0.6218097447795823, 'examples_seen': 120162, 'step': 1450, 'algorithm': 'mst_kruskal'}
I0716 00:10:20.843620 135273028449792 run.py:722] (val) algo mst_kruskal step 1500: {'in_mst': 0.7210424710424711, 'score': 0.7210424710424711, 'examples_seen': 124318, 'step': 1500, 'algorithm': 'mst_kruskal'}
I0716 00:10:24.069379 135273028449792 run.py:722] (val) algo mst_kruskal step 1550: {'in_mst': 0.676056338028169, 'score': 0.676056338028169, 'examples_seen': 128428, 'step': 1550, 'algorithm': 'mst_kruskal'}
I0716 00:10:27.223883 135273028449792 run.py:722] (val) algo mst_kruskal step 1600: {'in_mst': 0.6210762331838565, 'score': 0.6210762331838565, 'examples_seen': 132489, 'step': 1600, 'algorithm': 'mst_kruskal'}
I0716 00:10:30.389810 135273028449792 run.py:722] (val) algo mst_kruskal step 1650: {'in_mst': 0.6017076845806129, 'score': 0.6017076845806129, 'examples_seen': 136542, 'step': 1650, 'algorithm': 'mst_kruskal'}
I0716 00:10:33.878155 135273028449792 run.py:722] (val) algo mst_kruskal step 1700: {'in_mst': 0.7108366086468276, 'score': 0.7108366086468276, 'examples_seen': 140866, 'step': 1700, 'algorithm': 'mst_kruskal'}
I0716 00:10:37.156784 135273028449792 run.py:722] (val) algo mst_kruskal step 1750: {'in_mst': 0.6971428571428572, 'score': 0.6971428571428572, 'examples_seen': 145068, 'step': 1750, 'algorithm': 'mst_kruskal'}
I0716 00:10:40.393259 135273028449792 run.py:722] (val) algo mst_kruskal step 1800: {'in_mst': 0.7213530655391119, 'score': 0.7213530655391119, 'examples_seen': 149195, 'step': 1800, 'algorithm': 'mst_kruskal'}
I0716 00:10:43.672826 135273028449792 run.py:722] (val) algo mst_kruskal step 1850: {'in_mst': 0.751953125, 'score': 0.751953125, 'examples_seen': 153304, 'step': 1850, 'algorithm': 'mst_kruskal'}
I0716 00:10:46.996174 135273028449792 run.py:722] (val) algo mst_kruskal step 1900: {'in_mst': 0.6818181818181818, 'score': 0.6818181818181818, 'examples_seen': 157443, 'step': 1900, 'algorithm': 'mst_kruskal'}
I0716 00:10:50.191894 135273028449792 run.py:722] (val) algo mst_kruskal step 1950: {'in_mst': 0.7288444040036397, 'score': 0.7288444040036397, 'examples_seen': 161536, 'step': 1950, 'algorithm': 'mst_kruskal'}
I0716 00:10:53.230483 135273028449792 run.py:722] (val) algo mst_kruskal step 2000: {'in_mst': 0.7304761904761905, 'score': 0.7304761904761905, 'examples_seen': 165531, 'step': 2000, 'algorithm': 'mst_kruskal'}
I0716 00:10:56.542242 135273028449792 run.py:722] (val) algo mst_kruskal step 2050: {'in_mst': 0.6718668746749871, 'score': 0.6718668746749871, 'examples_seen': 169840, 'step': 2050, 'algorithm': 'mst_kruskal'}
I0716 00:10:59.911207 135273028449792 run.py:722] (val) algo mst_kruskal step 2100: {'in_mst': 0.7709727225939268, 'score': 0.7709727225939268, 'examples_seen': 174082, 'step': 2100, 'algorithm': 'mst_kruskal'}
I0716 00:11:03.324681 135273028449792 run.py:722] (val) algo mst_kruskal step 2150: {'in_mst': 0.6876668446342766, 'score': 0.6876668446342766, 'examples_seen': 178221, 'step': 2150, 'algorithm': 'mst_kruskal'}
I0716 00:11:06.743360 135273028449792 run.py:722] (val) algo mst_kruskal step 2200: {'in_mst': 0.7188715953307393, 'score': 0.7188715953307393, 'examples_seen': 182316, 'step': 2200, 'algorithm': 'mst_kruskal'}
I0716 00:11:09.835473 135273028449792 run.py:722] (val) algo mst_kruskal step 2250: {'in_mst': 0.6936026936026937, 'score': 0.6936026936026937, 'examples_seen': 186367, 'step': 2250, 'algorithm': 'mst_kruskal'}
I0716 00:11:13.052153 135273028449792 run.py:722] (val) algo mst_kruskal step 2300: {'in_mst': 0.7751865671641792, 'score': 0.7751865671641792, 'examples_seen': 190412, 'step': 2300, 'algorithm': 'mst_kruskal'}
I0716 00:11:16.406219 135273028449792 run.py:722] (val) algo mst_kruskal step 2350: {'in_mst': 0.6867958539882829, 'score': 0.6867958539882829, 'examples_seen': 194466, 'step': 2350, 'algorithm': 'mst_kruskal'}
I0716 00:11:19.824316 135273028449792 run.py:722] (val) algo mst_kruskal step 2400: {'in_mst': 0.744139650872818, 'score': 0.744139650872818, 'examples_seen': 198751, 'step': 2400, 'algorithm': 'mst_kruskal'}
I0716 00:11:23.141696 135273028449792 run.py:722] (val) algo mst_kruskal step 2450: {'in_mst': 0.7418719211822661, 'score': 0.7418719211822661, 'examples_seen': 202922, 'step': 2450, 'algorithm': 'mst_kruskal'}
I0716 00:11:26.380083 135273028449792 run.py:722] (val) algo mst_kruskal step 2500: {'in_mst': 0.7363420427553444, 'score': 0.7363420427553444, 'examples_seen': 207050, 'step': 2500, 'algorithm': 'mst_kruskal'}
I0716 00:11:29.633733 135273028449792 run.py:722] (val) algo mst_kruskal step 2550: {'in_mst': 0.7843530591775325, 'score': 0.7843530591775325, 'examples_seen': 211121, 'step': 2550, 'algorithm': 'mst_kruskal'}
I0716 00:11:32.735501 135273028449792 run.py:722] (val) algo mst_kruskal step 2600: {'in_mst': 0.7478991596638656, 'score': 0.7478991596638656, 'examples_seen': 215141, 'step': 2600, 'algorithm': 'mst_kruskal'}
I0716 00:11:35.782763 135273028449792 run.py:722] (val) algo mst_kruskal step 2650: {'in_mst': 0.7958549222797927, 'score': 0.7958549222797927, 'examples_seen': 219120, 'step': 2650, 'algorithm': 'mst_kruskal'}
I0716 00:11:38.984454 135273028449792 run.py:722] (val) algo mst_kruskal step 2700: {'in_mst': 0.7803532008830023, 'score': 0.7803532008830023, 'examples_seen': 223194, 'step': 2700, 'algorithm': 'mst_kruskal'}
I0716 00:11:42.278347 135273028449792 run.py:722] (val) algo mst_kruskal step 2750: {'in_mst': 0.7409800753904145, 'score': 0.7409800753904145, 'examples_seen': 227498, 'step': 2750, 'algorithm': 'mst_kruskal'}
I0716 00:11:45.646992 135273028449792 run.py:722] (val) algo mst_kruskal step 2800: {'in_mst': 0.7473784556720687, 'score': 0.7473784556720687, 'examples_seen': 231716, 'step': 2800, 'algorithm': 'mst_kruskal'}
I0716 00:11:48.840814 135273028449792 run.py:722] (val) algo mst_kruskal step 2850: {'in_mst': 0.7976071784646063, 'score': 0.7976071784646063, 'examples_seen': 235735, 'step': 2850, 'algorithm': 'mst_kruskal'}
I0716 00:11:52.226495 135273028449792 run.py:722] (val) algo mst_kruskal step 2900: {'in_mst': 0.7670540677109651, 'score': 0.7670540677109651, 'examples_seen': 239883, 'step': 2900, 'algorithm': 'mst_kruskal'}
I0716 00:11:55.524726 135273028449792 run.py:722] (val) algo mst_kruskal step 2950: {'in_mst': 0.7672764227642278, 'score': 0.7672764227642278, 'examples_seen': 244016, 'step': 2950, 'algorithm': 'mst_kruskal'}
I0716 00:11:58.838765 135273028449792 run.py:722] (val) algo mst_kruskal step 3000: {'in_mst': 0.7605760576057605, 'score': 0.7605760576057605, 'examples_seen': 248024, 'step': 3000, 'algorithm': 'mst_kruskal'}
I0716 00:12:02.206426 135273028449792 run.py:722] (val) algo mst_kruskal step 3050: {'in_mst': 0.739196746314184, 'score': 0.739196746314184, 'examples_seen': 252129, 'step': 3050, 'algorithm': 'mst_kruskal'}
I0716 00:12:05.424730 135273028449792 run.py:722] (val) algo mst_kruskal step 3100: {'in_mst': 0.7260012714558169, 'score': 0.7260012714558169, 'examples_seen': 256390, 'step': 3100, 'algorithm': 'mst_kruskal'}
I0716 00:12:08.733620 135273028449792 run.py:722] (val) algo mst_kruskal step 3150: {'in_mst': 0.8245004344048653, 'score': 0.8245004344048653, 'examples_seen': 260590, 'step': 3150, 'algorithm': 'mst_kruskal'}
I0716 00:12:12.318106 135273028449792 run.py:722] (val) algo mst_kruskal step 3200: {'in_mst': 0.7415865384615384, 'score': 0.7415865384615384, 'examples_seen': 264819, 'step': 3200, 'algorithm': 'mst_kruskal'}
I0716 00:12:15.701777 135273028449792 run.py:722] (val) algo mst_kruskal step 3250: {'in_mst': 0.768356229275225, 'score': 0.768356229275225, 'examples_seen': 268973, 'step': 3250, 'algorithm': 'mst_kruskal'}
I0716 00:12:19.025491 135273028449792 run.py:722] (val) algo mst_kruskal step 3300: {'in_mst': 0.7852604828462516, 'score': 0.7852604828462516, 'examples_seen': 272965, 'step': 3300, 'algorithm': 'mst_kruskal'}
I0716 00:12:22.095812 135273028449792 run.py:722] (val) algo mst_kruskal step 3350: {'in_mst': 0.746041055718475, 'score': 0.746041055718475, 'examples_seen': 276955, 'step': 3350, 'algorithm': 'mst_kruskal'}
I0716 00:12:25.304283 135273028449792 run.py:722] (val) algo mst_kruskal step 3400: {'in_mst': 0.8023391812865497, 'score': 0.8023391812865497, 'examples_seen': 280943, 'step': 3400, 'algorithm': 'mst_kruskal'}
I0716 00:12:28.625966 135273028449792 run.py:722] (val) algo mst_kruskal step 3450: {'in_mst': 0.7744763760350708, 'score': 0.7744763760350708, 'examples_seen': 285132, 'step': 3450, 'algorithm': 'mst_kruskal'}
I0716 00:12:32.009477 135273028449792 run.py:722] (val) algo mst_kruskal step 3500: {'in_mst': 0.7785467128027682, 'score': 0.7785467128027682, 'examples_seen': 289302, 'step': 3500, 'algorithm': 'mst_kruskal'}
I0716 00:12:35.374981 135273028449792 run.py:722] (val) algo mst_kruskal step 3550: {'in_mst': 0.8003679852805887, 'score': 0.8003679852805887, 'examples_seen': 293568, 'step': 3550, 'algorithm': 'mst_kruskal'}
I0716 00:12:38.798260 135273028449792 run.py:722] (val) algo mst_kruskal step 3600: {'in_mst': 0.8056279312141741, 'score': 0.8056279312141741, 'examples_seen': 297736, 'step': 3600, 'algorithm': 'mst_kruskal'}
I0716 00:12:41.989438 135273028449792 run.py:722] (val) algo mst_kruskal step 3650: {'in_mst': 0.7953216374269007, 'score': 0.7953216374269007, 'examples_seen': 301785, 'step': 3650, 'algorithm': 'mst_kruskal'}
I0716 00:12:45.245843 135273028449792 run.py:722] (val) algo mst_kruskal step 3700: {'in_mst': 0.8349082823790996, 'score': 0.8349082823790996, 'examples_seen': 305887, 'step': 3700, 'algorithm': 'mst_kruskal'}
I0716 00:12:48.540791 135273028449792 run.py:722] (val) algo mst_kruskal step 3750: {'in_mst': 0.7927432655305113, 'score': 0.7927432655305113, 'examples_seen': 309936, 'step': 3750, 'algorithm': 'mst_kruskal'}
I0716 00:12:51.841753 135273028449792 run.py:722] (val) algo mst_kruskal step 3800: {'in_mst': 0.7149627623561273, 'score': 0.7149627623561273, 'examples_seen': 314216, 'step': 3800, 'algorithm': 'mst_kruskal'}
I0716 00:12:55.112378 135273028449792 run.py:722] (val) algo mst_kruskal step 3850: {'in_mst': 0.7888372093023256, 'score': 0.7888372093023256, 'examples_seen': 318430, 'step': 3850, 'algorithm': 'mst_kruskal'}
I0716 00:12:58.329137 135273028449792 run.py:722] (val) algo mst_kruskal step 3900: {'in_mst': 0.8029809035863996, 'score': 0.8029809035863996, 'examples_seen': 322513, 'step': 3900, 'algorithm': 'mst_kruskal'}
I0716 00:13:01.601978 135273028449792 run.py:722] (val) algo mst_kruskal step 3950: {'in_mst': 0.8121353558926486, 'score': 0.8121353558926486, 'examples_seen': 326603, 'step': 3950, 'algorithm': 'mst_kruskal'}
I0716 00:13:04.808738 135273028449792 run.py:722] (val) algo mst_kruskal step 4000: {'in_mst': 0.7148014440433215, 'score': 0.7148014440433215, 'examples_seen': 330716, 'step': 4000, 'algorithm': 'mst_kruskal'}
I0716 00:13:07.984732 135273028449792 run.py:722] (val) algo mst_kruskal step 4050: {'in_mst': 0.763896532746285, 'score': 0.763896532746285, 'examples_seen': 334684, 'step': 4050, 'algorithm': 'mst_kruskal'}
I0716 00:13:11.162968 135273028449792 run.py:722] (val) algo mst_kruskal step 4100: {'in_mst': 0.7208226221079691, 'score': 0.7208226221079691, 'examples_seen': 338743, 'step': 4100, 'algorithm': 'mst_kruskal'}
I0716 00:13:14.494451 135273028449792 run.py:722] (val) algo mst_kruskal step 4150: {'in_mst': 0.804432132963989, 'score': 0.804432132963989, 'examples_seen': 343016, 'step': 4150, 'algorithm': 'mst_kruskal'}
I0716 00:13:17.975333 135273028449792 run.py:722] (val) algo mst_kruskal step 4200: {'in_mst': 0.8048103607770583, 'score': 0.8048103607770583, 'examples_seen': 347254, 'step': 4200, 'algorithm': 'mst_kruskal'}
I0716 00:13:21.400758 135273028449792 run.py:722] (val) algo mst_kruskal step 4250: {'in_mst': 0.812895797351756, 'score': 0.812895797351756, 'examples_seen': 351401, 'step': 4250, 'algorithm': 'mst_kruskal'}
I0716 00:13:24.648077 135273028449792 run.py:722] (val) algo mst_kruskal step 4300: {'in_mst': 0.7691309987029832, 'score': 0.7691309987029832, 'examples_seen': 355505, 'step': 4300, 'algorithm': 'mst_kruskal'}
I0716 00:13:27.809987 135273028449792 run.py:722] (val) algo mst_kruskal step 4350: {'in_mst': 0.70625, 'score': 0.70625, 'examples_seen': 359596, 'step': 4350, 'algorithm': 'mst_kruskal'}
I0716 00:13:31.162213 135273028449792 run.py:722] (val) algo mst_kruskal step 4400: {'in_mst': 0.7744581136496779, 'score': 0.7744581136496779, 'examples_seen': 363677, 'step': 4400, 'algorithm': 'mst_kruskal'}
I0716 00:13:34.547084 135273028449792 run.py:722] (val) algo mst_kruskal step 4450: {'in_mst': 0.7651715039577837, 'score': 0.7651715039577837, 'examples_seen': 367777, 'step': 4450, 'algorithm': 'mst_kruskal'}
I0716 00:13:37.969174 135273028449792 run.py:722] (val) algo mst_kruskal step 4500: {'in_mst': 0.7919534145050291, 'score': 0.7919534145050291, 'examples_seen': 372068, 'step': 4500, 'algorithm': 'mst_kruskal'}
I0716 00:13:41.310451 135273028449792 run.py:722] (val) algo mst_kruskal step 4550: {'in_mst': 0.7827715355805245, 'score': 0.7827715355805245, 'examples_seen': 376301, 'step': 4550, 'algorithm': 'mst_kruskal'}
I0716 00:13:44.641422 135273028449792 run.py:722] (val) algo mst_kruskal step 4600: {'in_mst': 0.8290946083418109, 'score': 0.8290946083418109, 'examples_seen': 380462, 'step': 4600, 'algorithm': 'mst_kruskal'}
I0716 00:13:47.984781 135273028449792 run.py:722] (val) algo mst_kruskal step 4650: {'in_mst': 0.8046441191317516, 'score': 0.8046441191317516, 'examples_seen': 384591, 'step': 4650, 'algorithm': 'mst_kruskal'}
I0716 00:13:51.158906 135273028449792 run.py:722] (val) algo mst_kruskal step 4700: {'in_mst': 0.7208067940552019, 'score': 0.7208067940552019, 'examples_seen': 388658, 'step': 4700, 'algorithm': 'mst_kruskal'}
I0716 00:13:54.355579 135273028449792 run.py:722] (val) algo mst_kruskal step 4750: {'in_mst': 0.7735941320293399, 'score': 0.7735941320293399, 'examples_seen': 392694, 'step': 4750, 'algorithm': 'mst_kruskal'}
I0716 00:13:57.869296 135273028449792 run.py:722] (val) algo mst_kruskal step 4800: {'in_mst': 0.765002804262479, 'score': 0.765002804262479, 'examples_seen': 396779, 'step': 4800, 'algorithm': 'mst_kruskal'}
I0716 00:14:01.296229 135273028449792 run.py:722] (val) algo mst_kruskal step 4850: {'in_mst': 0.7629586488060571, 'score': 0.7629586488060571, 'examples_seen': 401094, 'step': 4850, 'algorithm': 'mst_kruskal'}
I0716 00:14:04.446506 135273028449792 run.py:722] (val) algo mst_kruskal step 4900: {'in_mst': 0.7930391547545059, 'score': 0.7930391547545059, 'examples_seen': 405307, 'step': 4900, 'algorithm': 'mst_kruskal'}
I0716 00:14:07.673976 135273028449792 run.py:722] (val) algo mst_kruskal step 4950: {'in_mst': 0.830248545742993, 'score': 0.830248545742993, 'examples_seen': 409441, 'step': 4950, 'algorithm': 'mst_kruskal'}
I0716 00:14:10.888202 135273028449792 run.py:722] (val) algo mst_kruskal step 5000: {'in_mst': 0.7514153371075656, 'score': 0.7514153371075656, 'examples_seen': 413530, 'step': 5000, 'algorithm': 'mst_kruskal'}
I0716 00:14:14.068147 135273028449792 run.py:722] (val) algo mst_kruskal step 5050: {'in_mst': 0.773511407902059, 'score': 0.773511407902059, 'examples_seen': 417587, 'step': 5050, 'algorithm': 'mst_kruskal'}
I0716 00:14:17.446246 135273028449792 run.py:722] (val) algo mst_kruskal step 5100: {'in_mst': 0.772196261682243, 'score': 0.772196261682243, 'examples_seen': 421709, 'step': 5100, 'algorithm': 'mst_kruskal'}
I0716 00:14:20.741560 135273028449792 run.py:722] (val) algo mst_kruskal step 5150: {'in_mst': 0.8047337278106509, 'score': 0.8047337278106509, 'examples_seen': 425755, 'step': 5150, 'algorithm': 'mst_kruskal'}
I0716 00:14:24.168075 135273028449792 run.py:722] (val) algo mst_kruskal step 5200: {'in_mst': 0.8143899895724713, 'score': 0.8143899895724713, 'examples_seen': 430070, 'step': 5200, 'algorithm': 'mst_kruskal'}
I0716 00:14:27.417414 135273028449792 run.py:722] (val) algo mst_kruskal step 5250: {'in_mst': 0.7717078780908568, 'score': 0.7717078780908568, 'examples_seen': 434316, 'step': 5250, 'algorithm': 'mst_kruskal'}
I0716 00:14:31.221275 135273028449792 run.py:722] (val) algo mst_kruskal step 5300: {'in_mst': 0.762775685852609, 'score': 0.762775685852609, 'examples_seen': 438498, 'step': 5300, 'algorithm': 'mst_kruskal'}
I0716 00:14:34.328058 135273028449792 run.py:722] (val) algo mst_kruskal step 5350: {'in_mst': 0.778574844571975, 'score': 0.778574844571975, 'examples_seen': 442498, 'step': 5350, 'algorithm': 'mst_kruskal'}
I0716 00:14:37.602371 135273028449792 run.py:722] (val) algo mst_kruskal step 5400: {'in_mst': 0.7670639219934994, 'score': 0.7670639219934994, 'examples_seen': 446583, 'step': 5400, 'algorithm': 'mst_kruskal'}
I0716 00:14:40.940122 135273028449792 run.py:722] (val) algo mst_kruskal step 5450: {'in_mst': 0.8140350877192983, 'score': 0.8140350877192983, 'examples_seen': 450633, 'step': 5450, 'algorithm': 'mst_kruskal'}
I0716 00:14:44.168353 135273028449792 run.py:722] (val) algo mst_kruskal step 5500: {'in_mst': 0.7708437343984024, 'score': 0.7708437343984024, 'examples_seen': 454692, 'step': 5500, 'algorithm': 'mst_kruskal'}
I0716 00:14:47.514557 135273028449792 run.py:722] (val) algo mst_kruskal step 5550: {'in_mst': 0.7585284280936455, 'score': 0.7585284280936455, 'examples_seen': 458917, 'step': 5550, 'algorithm': 'mst_kruskal'}
I0716 00:14:50.974339 135273028449792 run.py:722] (val) algo mst_kruskal step 5600: {'in_mst': 0.727363184079602, 'score': 0.727363184079602, 'examples_seen': 463110, 'step': 5600, 'algorithm': 'mst_kruskal'}
I0716 00:14:54.180508 135273028449792 run.py:722] (val) algo mst_kruskal step 5650: {'in_mst': 0.7329032258064516, 'score': 0.7329032258064516, 'examples_seen': 467240, 'step': 5650, 'algorithm': 'mst_kruskal'}
I0716 00:14:57.404502 135273028449792 run.py:722] (val) algo mst_kruskal step 5700: {'in_mst': 0.7710455764075066, 'score': 0.7710455764075066, 'examples_seen': 471347, 'step': 5700, 'algorithm': 'mst_kruskal'}
I0716 00:15:00.794779 135273028449792 run.py:722] (val) algo mst_kruskal step 5750: {'in_mst': 0.7715039577836412, 'score': 0.7715039577836412, 'examples_seen': 475483, 'step': 5750, 'algorithm': 'mst_kruskal'}
I0716 00:15:04.047107 135273028449792 run.py:722] (val) algo mst_kruskal step 5800: {'in_mst': 0.8087719298245614, 'score': 0.8087719298245614, 'examples_seen': 479534, 'step': 5800, 'algorithm': 'mst_kruskal'}
I0716 00:15:07.316419 135273028449792 run.py:722] (val) algo mst_kruskal step 5850: {'in_mst': 0.7712082262210797, 'score': 0.7712082262210797, 'examples_seen': 483610, 'step': 5850, 'algorithm': 'mst_kruskal'}
I0716 00:15:10.466458 135273028449792 run.py:722] (val) algo mst_kruskal step 5900: {'in_mst': 0.8138739618954569, 'score': 0.8138739618954569, 'examples_seen': 487844, 'step': 5900, 'algorithm': 'mst_kruskal'}
I0716 00:15:13.770037 135273028449792 run.py:722] (val) algo mst_kruskal step 5950: {'in_mst': 0.768361581920904, 'score': 0.768361581920904, 'examples_seen': 492003, 'step': 5950, 'algorithm': 'mst_kruskal'}
I0716 00:15:17.076203 135273028449792 run.py:722] (val) algo mst_kruskal step 6000: {'in_mst': 0.7798119742701632, 'score': 0.7798119742701632, 'examples_seen': 496195, 'step': 6000, 'algorithm': 'mst_kruskal'}
I0716 00:15:20.329394 135273028449792 run.py:722] (val) algo mst_kruskal step 6050: {'in_mst': 0.7789266371245691, 'score': 0.7789266371245691, 'examples_seen': 500275, 'step': 6050, 'algorithm': 'mst_kruskal'}
I0716 00:15:23.676508 135273028449792 run.py:722] (val) algo mst_kruskal step 6100: {'in_mst': 0.7584237578526557, 'score': 0.7584237578526557, 'examples_seen': 504380, 'step': 6100, 'algorithm': 'mst_kruskal'}
I0716 00:15:26.938118 135273028449792 run.py:722] (val) algo mst_kruskal step 6150: {'in_mst': 0.7895545314900154, 'score': 0.7895545314900154, 'examples_seen': 508506, 'step': 6150, 'algorithm': 'mst_kruskal'}
I0716 00:15:30.170003 135273028449792 run.py:722] (val) algo mst_kruskal step 6200: {'in_mst': 0.82319118351701, 'score': 0.82319118351701, 'examples_seen': 512546, 'step': 6200, 'algorithm': 'mst_kruskal'}
I0716 00:15:33.592350 135273028449792 run.py:722] (val) algo mst_kruskal step 6250: {'in_mst': 0.8322824716267339, 'score': 0.8322824716267339, 'examples_seen': 516773, 'step': 6250, 'algorithm': 'mst_kruskal'}
I0716 00:15:36.870208 135273028449792 run.py:722] (val) algo mst_kruskal step 6300: {'in_mst': 0.8162650602409638, 'score': 0.8162650602409638, 'examples_seen': 521103, 'step': 6300, 'algorithm': 'mst_kruskal'}
I0716 00:15:40.330018 135273028449792 run.py:722] (val) algo mst_kruskal step 6350: {'in_mst': 0.7876025524156792, 'score': 0.7876025524156792, 'examples_seen': 525291, 'step': 6350, 'algorithm': 'mst_kruskal'}
I0716 00:15:43.328927 135273028449792 run.py:722] (val) algo mst_kruskal step 6400: {'in_mst': 0.7756332931242462, 'score': 0.7756332931242462, 'examples_seen': 529346, 'step': 6400, 'algorithm': 'mst_kruskal'}
I0716 00:15:46.586932 135273028449792 run.py:722] (val) algo mst_kruskal step 6450: {'in_mst': 0.7349214394323366, 'score': 0.7349214394323366, 'examples_seen': 533444, 'step': 6450, 'algorithm': 'mst_kruskal'}
I0716 00:15:49.985319 135273028449792 run.py:722] (val) algo mst_kruskal step 6500: {'in_mst': 0.7840440165061897, 'score': 0.7840440165061897, 'examples_seen': 537444, 'step': 6500, 'algorithm': 'mst_kruskal'}
I0716 00:15:53.355287 135273028449792 run.py:722] (val) algo mst_kruskal step 6550: {'in_mst': 0.7864806866952789, 'score': 0.7864806866952789, 'examples_seen': 541500, 'step': 6550, 'algorithm': 'mst_kruskal'}
I0716 00:15:56.584273 135273028449792 run.py:722] (val) algo mst_kruskal step 6600: {'in_mst': 0.7926078028747433, 'score': 0.7926078028747433, 'examples_seen': 545735, 'step': 6600, 'algorithm': 'mst_kruskal'}
I0716 00:15:59.919063 135273028449792 run.py:722] (val) algo mst_kruskal step 6650: {'in_mst': 0.6639455782312925, 'score': 0.6639455782312925, 'examples_seen': 549996, 'step': 6650, 'algorithm': 'mst_kruskal'}
I0716 00:16:03.101180 135273028449792 run.py:722] (val) algo mst_kruskal step 6700: {'in_mst': 0.8253602305475505, 'score': 0.8253602305475505, 'examples_seen': 554159, 'step': 6700, 'algorithm': 'mst_kruskal'}
I0716 00:16:06.160117 135273028449792 run.py:722] (val) algo mst_kruskal step 6750: {'in_mst': 0.791553871142393, 'score': 0.791553871142393, 'examples_seen': 558263, 'step': 6750, 'algorithm': 'mst_kruskal'}
I0716 00:16:09.355991 135273028449792 run.py:722] (val) algo mst_kruskal step 6800: {'in_mst': 0.7730646871686109, 'score': 0.7730646871686109, 'examples_seen': 562347, 'step': 6800, 'algorithm': 'mst_kruskal'}
I0716 00:16:12.539453 135273028449792 run.py:722] (val) algo mst_kruskal step 6850: {'in_mst': 0.7152317880794702, 'score': 0.7152317880794702, 'examples_seen': 566427, 'step': 6850, 'algorithm': 'mst_kruskal'}
I0716 00:16:15.793128 135273028449792 run.py:722] (val) algo mst_kruskal step 6900: {'in_mst': 0.8085742771684945, 'score': 0.8085742771684945, 'examples_seen': 570480, 'step': 6900, 'algorithm': 'mst_kruskal'}
I0716 00:16:18.961089 135273028449792 run.py:722] (val) algo mst_kruskal step 6950: {'in_mst': 0.7469613259668508, 'score': 0.7469613259668508, 'examples_seen': 574739, 'step': 6950, 'algorithm': 'mst_kruskal'}
I0716 00:16:22.235973 135273028449792 run.py:722] (val) algo mst_kruskal step 7000: {'in_mst': 0.8140960163432074, 'score': 0.8140960163432074, 'examples_seen': 578958, 'step': 7000, 'algorithm': 'mst_kruskal'}
I0716 00:16:25.505922 135273028449792 run.py:722] (val) algo mst_kruskal step 7050: {'in_mst': 0.7455555555555556, 'score': 0.7455555555555556, 'examples_seen': 583081, 'step': 7050, 'algorithm': 'mst_kruskal'}
I0716 00:16:28.652005 135273028449792 run.py:722] (val) algo mst_kruskal step 7100: {'in_mst': 0.7112117780294451, 'score': 0.7112117780294451, 'examples_seen': 587241, 'step': 7100, 'algorithm': 'mst_kruskal'}
I0716 00:16:31.993093 135273028449792 run.py:722] (val) algo mst_kruskal step 7150: {'in_mst': 0.72, 'score': 0.72, 'examples_seen': 591256, 'step': 7150, 'algorithm': 'mst_kruskal'}
I0716 00:16:35.295682 135273028449792 run.py:722] (val) algo mst_kruskal step 7200: {'in_mst': 0.7769265434880578, 'score': 0.7769265434880578, 'examples_seen': 595196, 'step': 7200, 'algorithm': 'mst_kruskal'}
I0716 00:16:38.668501 135273028449792 run.py:722] (val) algo mst_kruskal step 7250: {'in_mst': 0.7126436781609196, 'score': 0.7126436781609196, 'examples_seen': 599231, 'step': 7250, 'algorithm': 'mst_kruskal'}
I0716 00:16:42.078607 135273028449792 run.py:722] (val) algo mst_kruskal step 7300: {'in_mst': 0.7278521351179096, 'score': 0.7278521351179096, 'examples_seen': 603495, 'step': 7300, 'algorithm': 'mst_kruskal'}
I0716 00:16:45.365650 135273028449792 run.py:722] (val) algo mst_kruskal step 7350: {'in_mst': 0.7854688267059401, 'score': 0.7854688267059401, 'examples_seen': 607719, 'step': 7350, 'algorithm': 'mst_kruskal'}
I0716 00:16:48.741352 135273028449792 run.py:722] (val) algo mst_kruskal step 7400: {'in_mst': 0.7729577464788733, 'score': 0.7729577464788733, 'examples_seen': 611854, 'step': 7400, 'algorithm': 'mst_kruskal'}
I0716 00:16:52.086345 135273028449792 run.py:722] (val) algo mst_kruskal step 7450: {'in_mst': 0.7422796181920269, 'score': 0.7422796181920269, 'examples_seen': 615942, 'step': 7450, 'algorithm': 'mst_kruskal'}
I0716 00:16:55.349062 135273028449792 run.py:722] (val) algo mst_kruskal step 7500: {'in_mst': 0.7564259485924113, 'score': 0.7564259485924113, 'examples_seen': 620008, 'step': 7500, 'algorithm': 'mst_kruskal'}
I0716 00:16:58.747853 135273028449792 run.py:722] (val) algo mst_kruskal step 7550: {'in_mst': 0.8085758039816233, 'score': 0.8085758039816233, 'examples_seen': 623992, 'step': 7550, 'algorithm': 'mst_kruskal'}
I0716 00:17:02.063181 135273028449792 run.py:722] (val) algo mst_kruskal step 7600: {'in_mst': 0.7884972170686455, 'score': 0.7884972170686455, 'examples_seen': 628035, 'step': 7600, 'algorithm': 'mst_kruskal'}
I0716 00:17:05.330716 135273028449792 run.py:722] (val) algo mst_kruskal step 7650: {'in_mst': 0.7562437562437563, 'score': 0.7562437562437563, 'examples_seen': 632291, 'step': 7650, 'algorithm': 'mst_kruskal'}
I0716 00:17:08.640019 135273028449792 run.py:722] (val) algo mst_kruskal step 7700: {'in_mst': 0.7571428571428571, 'score': 0.7571428571428571, 'examples_seen': 636581, 'step': 7700, 'algorithm': 'mst_kruskal'}
I0716 00:17:11.864196 135273028449792 run.py:722] (val) algo mst_kruskal step 7750: {'in_mst': 0.7492483463619964, 'score': 0.7492483463619964, 'examples_seen': 640717, 'step': 7750, 'algorithm': 'mst_kruskal'}
I0716 00:17:15.201699 135273028449792 run.py:722] (val) algo mst_kruskal step 7800: {'in_mst': 0.7465116279069768, 'score': 0.7465116279069768, 'examples_seen': 644736, 'step': 7800, 'algorithm': 'mst_kruskal'}
I0716 00:17:18.381193 135273028449792 run.py:722] (val) algo mst_kruskal step 7850: {'in_mst': 0.7959183673469388, 'score': 0.7959183673469388, 'examples_seen': 648722, 'step': 7850, 'algorithm': 'mst_kruskal'}
I0716 00:17:21.628958 135273028449792 run.py:722] (val) algo mst_kruskal step 7900: {'in_mst': 0.8090859924283396, 'score': 0.8090859924283396, 'examples_seen': 652743, 'step': 7900, 'algorithm': 'mst_kruskal'}
I0716 00:17:24.910033 135273028449792 run.py:722] (val) algo mst_kruskal step 7950: {'in_mst': 0.797474502185527, 'score': 0.797474502185527, 'examples_seen': 656781, 'step': 7950, 'algorithm': 'mst_kruskal'}
I0716 00:17:28.472683 135273028449792 run.py:722] (val) algo mst_kruskal step 8000: {'in_mst': 0.7543453070683661, 'score': 0.7543453070683661, 'examples_seen': 661107, 'step': 8000, 'algorithm': 'mst_kruskal'}
I0716 00:17:31.834031 135273028449792 run.py:722] (val) algo mst_kruskal step 8050: {'in_mst': 0.7446569178852643, 'score': 0.7446569178852643, 'examples_seen': 665312, 'step': 8050, 'algorithm': 'mst_kruskal'}
I0716 00:17:35.214138 135273028449792 run.py:722] (val) algo mst_kruskal step 8100: {'in_mst': 0.7494646680942185, 'score': 0.7494646680942185, 'examples_seen': 669514, 'step': 8100, 'algorithm': 'mst_kruskal'}
I0716 00:17:38.580516 135273028449792 run.py:722] (val) algo mst_kruskal step 8150: {'in_mst': 0.6965174129353233, 'score': 0.6965174129353233, 'examples_seen': 673610, 'step': 8150, 'algorithm': 'mst_kruskal'}
I0716 00:17:41.827108 135273028449792 run.py:722] (val) algo mst_kruskal step 8200: {'in_mst': 0.7405329593267882, 'score': 0.7405329593267882, 'examples_seen': 677630, 'step': 8200, 'algorithm': 'mst_kruskal'}
I0716 00:17:45.281837 135273028449792 run.py:722] (val) algo mst_kruskal step 8250: {'in_mst': 0.7164015359297862, 'score': 0.7164015359297862, 'examples_seen': 681670, 'step': 8250, 'algorithm': 'mst_kruskal'}
I0716 00:17:48.710237 135273028449792 run.py:722] (val) algo mst_kruskal step 8300: {'in_mst': 0.7828746177370031, 'score': 0.7828746177370031, 'examples_seen': 685760, 'step': 8300, 'algorithm': 'mst_kruskal'}
I0716 00:17:52.228435 135273028449792 run.py:722] (val) algo mst_kruskal step 8350: {'in_mst': 0.70953032375741, 'score': 0.70953032375741, 'examples_seen': 690001, 'step': 8350, 'algorithm': 'mst_kruskal'}
I0716 00:17:55.506701 135273028449792 run.py:722] (val) algo mst_kruskal step 8400: {'in_mst': 0.7606060606060606, 'score': 0.7606060606060606, 'examples_seen': 694183, 'step': 8400, 'algorithm': 'mst_kruskal'}
I0716 00:17:58.803855 135273028449792 run.py:722] (val) algo mst_kruskal step 8450: {'in_mst': 0.7375565610859729, 'score': 0.7375565610859729, 'examples_seen': 698448, 'step': 8450, 'algorithm': 'mst_kruskal'}
I0716 00:18:01.920193 135273028449792 run.py:722] (val) algo mst_kruskal step 8500: {'in_mst': 0.8298507462686566, 'score': 0.8298507462686566, 'examples_seen': 702512, 'step': 8500, 'algorithm': 'mst_kruskal'}
I0716 00:18:05.143234 135273028449792 run.py:722] (val) algo mst_kruskal step 8550: {'in_mst': 0.7210355987055017, 'score': 0.7210355987055017, 'examples_seen': 706645, 'step': 8550, 'algorithm': 'mst_kruskal'}
I0716 00:18:08.408855 135273028449792 run.py:722] (val) algo mst_kruskal step 8600: {'in_mst': 0.7528975428836346, 'score': 0.7528975428836346, 'examples_seen': 710734, 'step': 8600, 'algorithm': 'mst_kruskal'}
I0716 00:18:11.643549 135273028449792 run.py:722] (val) algo mst_kruskal step 8650: {'in_mst': 0.7660550458715596, 'score': 0.7660550458715596, 'examples_seen': 714825, 'step': 8650, 'algorithm': 'mst_kruskal'}
I0716 00:18:14.934895 135273028449792 run.py:722] (val) algo mst_kruskal step 8700: {'in_mst': 0.8203966005665723, 'score': 0.8203966005665723, 'examples_seen': 719034, 'step': 8700, 'algorithm': 'mst_kruskal'}
I0716 00:18:18.221132 135273028449792 run.py:722] (val) algo mst_kruskal step 8750: {'in_mst': 0.8033613445378153, 'score': 0.8033613445378153, 'examples_seen': 723317, 'step': 8750, 'algorithm': 'mst_kruskal'}
I0716 00:18:21.552753 135273028449792 run.py:722] (val) algo mst_kruskal step 8800: {'in_mst': 0.8101265822784809, 'score': 0.8101265822784809, 'examples_seen': 727517, 'step': 8800, 'algorithm': 'mst_kruskal'}
I0716 00:18:24.782133 135273028449792 run.py:722] (val) algo mst_kruskal step 8850: {'in_mst': 0.7622080679405521, 'score': 0.7622080679405521, 'examples_seen': 731606, 'step': 8850, 'algorithm': 'mst_kruskal'}
I0716 00:18:27.935868 135273028449792 run.py:722] (val) algo mst_kruskal step 8900: {'in_mst': 0.7386958591147073, 'score': 0.7386958591147073, 'examples_seen': 735693, 'step': 8900, 'algorithm': 'mst_kruskal'}
I0716 00:18:31.257813 135273028449792 run.py:722] (val) algo mst_kruskal step 8950: {'in_mst': 0.7794561933534743, 'score': 0.7794561933534743, 'examples_seen': 739713, 'step': 8950, 'algorithm': 'mst_kruskal'}
I0716 00:18:34.581849 135273028449792 run.py:722] (val) algo mst_kruskal step 9000: {'in_mst': 0.829445308449974, 'score': 0.829445308449974, 'examples_seen': 743772, 'step': 9000, 'algorithm': 'mst_kruskal'}
I0716 00:18:37.900476 135273028449792 run.py:722] (val) algo mst_kruskal step 9050: {'in_mst': 0.7554459515002054, 'score': 0.7554459515002054, 'examples_seen': 748079, 'step': 9050, 'algorithm': 'mst_kruskal'}
I0716 00:18:41.181697 135273028449792 run.py:722] (val) algo mst_kruskal step 9100: {'in_mst': 0.7701396348012889, 'score': 0.7701396348012889, 'examples_seen': 752297, 'step': 9100, 'algorithm': 'mst_kruskal'}
I0716 00:18:44.649299 135273028449792 run.py:722] (val) algo mst_kruskal step 9150: {'in_mst': 0.7883495145631068, 'score': 0.7883495145631068, 'examples_seen': 756412, 'step': 9150, 'algorithm': 'mst_kruskal'}
I0716 00:18:48.018079 135273028449792 run.py:722] (val) algo mst_kruskal step 9200: {'in_mst': 0.7306666666666666, 'score': 0.7306666666666666, 'examples_seen': 760501, 'step': 9200, 'algorithm': 'mst_kruskal'}
I0716 00:18:51.304269 135273028449792 run.py:722] (val) algo mst_kruskal step 9250: {'in_mst': 0.7590551181102363, 'score': 0.7590551181102363, 'examples_seen': 764613, 'step': 9250, 'algorithm': 'mst_kruskal'}
I0716 00:18:54.599702 135273028449792 run.py:722] (val) algo mst_kruskal step 9300: {'in_mst': 0.7643585614600108, 'score': 0.7643585614600108, 'examples_seen': 768645, 'step': 9300, 'algorithm': 'mst_kruskal'}
I0716 00:18:57.993718 135273028449792 run.py:722] (val) algo mst_kruskal step 9350: {'in_mst': 0.6981239340534394, 'score': 0.6981239340534394, 'examples_seen': 772729, 'step': 9350, 'algorithm': 'mst_kruskal'}
I0716 00:19:01.343103 135273028449792 run.py:722] (val) algo mst_kruskal step 9400: {'in_mst': 0.7334083239595051, 'score': 0.7334083239595051, 'examples_seen': 777009, 'step': 9400, 'algorithm': 'mst_kruskal'}
I0716 00:19:04.883899 135273028449792 run.py:722] (val) algo mst_kruskal step 9450: {'in_mst': 0.7777230162641695, 'score': 0.7777230162641695, 'examples_seen': 781289, 'step': 9450, 'algorithm': 'mst_kruskal'}
I0716 00:19:08.242914 135273028449792 run.py:722] (val) algo mst_kruskal step 9500: {'in_mst': 0.75, 'score': 0.75, 'examples_seen': 785379, 'step': 9500, 'algorithm': 'mst_kruskal'}
I0716 00:19:11.731304 135273028449792 run.py:722] (val) algo mst_kruskal step 9550: {'in_mst': 0.6901172529313233, 'score': 0.6901172529313233, 'examples_seen': 789502, 'step': 9550, 'algorithm': 'mst_kruskal'}
I0716 00:19:15.067422 135273028449792 run.py:722] (val) algo mst_kruskal step 9600: {'in_mst': 0.7898763978811064, 'score': 0.7898763978811064, 'examples_seen': 793523, 'step': 9600, 'algorithm': 'mst_kruskal'}
I0716 00:19:18.574361 135273028449792 run.py:722] (val) algo mst_kruskal step 9650: {'in_mst': 0.767818574514039, 'score': 0.767818574514039, 'examples_seen': 797699, 'step': 9650, 'algorithm': 'mst_kruskal'}
I0716 00:19:21.979866 135273028449792 run.py:722] (val) algo mst_kruskal step 9700: {'in_mst': 0.8059880239520958, 'score': 0.8059880239520958, 'examples_seen': 801823, 'step': 9700, 'algorithm': 'mst_kruskal'}
I0716 00:19:25.477260 135273028449792 run.py:722] (val) algo mst_kruskal step 9750: {'in_mst': 0.785958904109589, 'score': 0.785958904109589, 'examples_seen': 806112, 'step': 9750, 'algorithm': 'mst_kruskal'}
I0716 00:19:29.003210 135273028449792 run.py:722] (val) algo mst_kruskal step 9800: {'in_mst': 0.7662790697674419, 'score': 0.7662790697674419, 'examples_seen': 810324, 'step': 9800, 'algorithm': 'mst_kruskal'}
I0716 00:19:32.280321 135273028449792 run.py:722] (val) algo mst_kruskal step 9850: {'in_mst': 0.8345784418356457, 'score': 0.8345784418356457, 'examples_seen': 814514, 'step': 9850, 'algorithm': 'mst_kruskal'}
I0716 00:19:35.416165 135273028449792 run.py:722] (val) algo mst_kruskal step 9900: {'in_mst': 0.8306828811973808, 'score': 0.8306828811973808, 'examples_seen': 818634, 'step': 9900, 'algorithm': 'mst_kruskal'}
I0716 00:19:38.740948 135273028449792 run.py:722] (val) algo mst_kruskal step 9950: {'in_mst': 0.7398708162066941, 'score': 0.7398708162066941, 'examples_seen': 822740, 'step': 9950, 'algorithm': 'mst_kruskal'}
I0716 00:19:41.758424 135273028449792 run.py:752] Restoring best model from checkpoint...
I0716 00:19:51.638330 135273028449792 run.py:767] (test) algo mst_kruskal : {'in_mst': 0.7737719693555656, 'score': 0.7737719693555656, 'examples_seen': 826765, 'step': 10000, 'algorithm': 'mst_kruskal'}
I0716 00:19:51.638474 135273028449792 run.py:769] Done!
