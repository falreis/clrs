I0716 12:28:46.894928 140714243360256 run.py:767] (test) algo activity_selector : {'selected': 0.9077212806026366, 'score': 0.9077212806026366, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'activity_selector'}
I0716 12:37:36.544335 134562683860480 run.py:767] (test) algo articulation_points : {'is_cut': 0.5849056603773586, 'score': 0.5849056603773586, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'articulation_points'}
I0716 12:50:13.766216 135562045462016 run.py:767] (test) algo bellman_ford : {'pi': 0.775390625, 'score': 0.775390625, 'examples_seen': 1108784, 'step': 10000, 'algorithm': 'bellman_ford'}
I0716 13:02:09.964153 125797712770560 run.py:767] (test) algo bfs : {'pi': 0.998046875, 'score': 0.998046875, 'examples_seen': 1194759, 'step': 10000, 'algorithm': 'bfs'}
I0716 13:11:46.614341 138795964425728 run.py:767] (test) algo binary_search : {'return': 0.67822265625, 'score': 0.67822265625, 'examples_seen': 768330, 'step': 10000, 'algorithm': 'binary_search'}
I0716 13:20:35.715950 139093709719040 run.py:767] (test) algo bridges : {'is_bridge': 0.5238819592333435, 'score': 0.5238819592333435, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'bridges'}
I0716 13:36:53.345270 134814337697280 run.py:767] (test) algo bubble_sort : {'pred': 0.4111328125, 'score': 0.4111328125, 'examples_seen': 338304, 'step': 10000, 'algorithm': 'bubble_sort'}
I0716 13:47:08.333022 139335303030272 run.py:767] (test) algo dag_shortest_paths : {'pi': 0.896484375, 'score': 0.896484375, 'examples_seen': 296183, 'step': 10000, 'algorithm': 'dag_shortest_paths'}
I0716 13:54:55.468099 124390092948992 run.py:767] (test) algo dfs : {'pi': 0.15283203125, 'score': 0.15283203125, 'examples_seen': 171456, 'step': 10000, 'algorithm': 'dfs'}
I0716 14:04:16.725700 132293788378624 run.py:767] (test) algo dijkstra : {'pi': 0.9541015625, 'score': 0.9541015625, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'dijkstra'}
I0716 14:13:50.429094 138886038054400 run.py:767] (test) algo find_maximum_subarray_kadane : {'end': 0.5908203125, 'start': 0.6796875, 'score': 0.63525390625, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'find_maximum_subarray_kadane'}
I0716 14:24:47.639428 126711536682496 run.py:767] (test) algo floyd_warshall : {'Pi': 0.2963409423828125, 'score': 0.2963409423828125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'floyd_warshall'}
I0716 14:31:56.241941 137316556228096 run.py:767] (test) algo graham_scan : {'in_hull': 0.8962264150943395, 'score': 0.8962264150943395, 'examples_seen': 297430, 'step': 10000, 'algorithm': 'graham_scan'}
I0716 14:46:06.210734 127286794696192 run.py:767] (test) algo heapsort : {'pred': 0.27001953125, 'score': 0.27001953125, 'examples_seen': 155410, 'step': 10000, 'algorithm': 'heapsort'}
I0716 15:04:31.202691 135463088223744 run.py:767] (test) algo insertion_sort : {'pred': 0.60888671875, 'score': 0.60888671875, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'insertion_sort'}
I0716 15:10:41.481631 136975986333184 run.py:767] (test) algo jarvis_march : {'in_hull': 0.6534954407294833, 'score': 0.6534954407294833, 'examples_seen': 114103, 'step': 10000, 'algorithm': 'jarvis_march'}
I0716 15:25:22.275037 139522342389248 run.py:767] (test) algo kmp_matcher : {'match': 0.01513671875, 'score': 0.01513671875, 'examples_seen': 168847, 'step': 10000, 'algorithm': 'kmp_matcher'}
I0716 15:38:25.841164 129007277008384 run.py:767] (test) algo lcs_length : {'b': 0.84893798828125, 'score': 0.84893798828125, 'examples_seen': 1186537, 'step': 10000, 'algorithm': 'lcs_length'}
I0716 15:54:10.039811 124743363274240 run.py:767] (test) algo matrix_chain_order : {'s': 0.9152603149414062, 'score': 0.9152603149414062, 'examples_seen': 821852, 'step': 10000, 'algorithm': 'matrix_chain_order'}
I0716 16:02:32.798711 128740243666432 run.py:767] (test) algo minimum : {'min': 0.95751953125, 'score': 0.95751953125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'minimum'}
I0716 16:16:50.422335 128490841785856 run.py:767] (test) algo mst_kruskal : {'in_mst': 0.7790411440628296, 'score': 0.7790411440628296, 'examples_seen': 826765, 'step': 10000, 'algorithm': 'mst_kruskal'}
I0716 16:26:09.335295 123486293136896 run.py:767] (test) algo mst_prim : {'pi': 0.853515625, 'score': 0.853515625, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'mst_prim'}
I0716 16:34:26.881150 133689742857728 run.py:767] (test) algo naive_string_matcher : {'match': 0.0, 'score': 0.0, 'examples_seen': 230279, 'step': 10000, 'algorithm': 'naive_string_matcher'}
I0716 16:47:23.957207 132355217737216 run.py:767] (test) algo optimal_bst : {'root': 0.7964275147928994, 'score': 0.7964275147928994, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'optimal_bst'}
I0716 17:23:00.169577 128977844405760 run.py:767] (test) algo quickselect : {'median': 0.01953125, 'score': 0.01953125, 'examples_seen': 323100, 'step': 10000, 'algorithm': 'quickselect'}
I0716 17:39:52.744637 131698539693568 run.py:767] (test) algo quicksort : {'pred': 0.68408203125, 'score': 0.68408203125, 'examples_seen': 347181, 'step': 10000, 'algorithm': 'quicksort'}
I0716 17:47:04.706276 124054970734080 run.py:767] (test) algo segments_intersect : {'intersect': 0.9580419580419579, 'score': 0.9580419580419579, 'examples_seen': 512000, 'step': 10000, 'algorithm': 'segments_intersect'}
I0716 17:53:27.331331 134211382015488 run.py:767] (test) algo task_scheduling : {'selected': 0.8798775822494261, 'score': 0.8798775822494261, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'task_scheduling'}
I0716 18:01:10.999886 136905113048576 run.py:767] (test) algo topological_sort : {'topo': 0.13525390625, 'topo_head': 1.0, 'score': 0.567626953125, 'examples_seen': 190739, 'step': 10000, 'algorithm': 'topological_sort'}
