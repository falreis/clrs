I0716 06:36:31.895260 125155326850560 run.py:767] (test) algo activity_selector : {'selected': 0.8812260536398469, 'score': 0.8812260536398469, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'activity_selector'}
I0716 06:45:27.878300 127164589098496 run.py:767] (test) algo articulation_points : {'is_cut': 0.603960396039604, 'score': 0.603960396039604, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'articulation_points'}
I0716 06:58:18.988042 139425983874560 run.py:767] (test) algo bellman_ford : {'pi': 0.88330078125, 'score': 0.88330078125, 'examples_seen': 1108784, 'step': 10000, 'algorithm': 'bellman_ford'}
I0716 07:10:15.295962 123331353363968 run.py:767] (test) algo bfs : {'pi': 0.99853515625, 'score': 0.99853515625, 'examples_seen': 1194759, 'step': 10000, 'algorithm': 'bfs'}
I0716 07:19:57.438370 130384490354176 run.py:767] (test) algo binary_search : {'return': 0.66796875, 'score': 0.66796875, 'examples_seen': 768330, 'step': 10000, 'algorithm': 'binary_search'}
I0716 07:28:55.277292 135792746137088 run.py:767] (test) algo bridges : {'is_bridge': 0.6135670731707317, 'score': 0.6135670731707317, 'examples_seen': 158554, 'step': 10000, 'algorithm': 'bridges'}
I0716 07:45:38.178970 128201723934208 run.py:767] (test) algo bubble_sort : {'pred': 0.3779296875, 'score': 0.3779296875, 'examples_seen': 338304, 'step': 10000, 'algorithm': 'bubble_sort'}
I0716 07:55:54.438570 136751140242944 run.py:767] (test) algo dag_shortest_paths : {'pi': 0.90185546875, 'score': 0.90185546875, 'examples_seen': 296183, 'step': 10000, 'algorithm': 'dag_shortest_paths'}
I0716 08:03:55.742014 132989137683968 run.py:767] (test) algo dfs : {'pi': 0.1513671875, 'score': 0.1513671875, 'examples_seen': 171456, 'step': 10000, 'algorithm': 'dfs'}
I0716 08:13:21.785874 140312253715968 run.py:767] (test) algo dijkstra : {'pi': 0.95849609375, 'score': 0.95849609375, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'dijkstra'}
I0716 08:22:50.643856 139747962115584 run.py:767] (test) algo find_maximum_subarray_kadane : {'end': 0.6328125, 'start': 0.69921875, 'score': 0.666015625, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'find_maximum_subarray_kadane'}
I0716 08:34:04.607904 129472666056192 run.py:767] (test) algo floyd_warshall : {'Pi': 0.4221954345703125, 'score': 0.4221954345703125, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'floyd_warshall'}
I0716 08:41:16.421973 140366468310528 run.py:767] (test) algo graham_scan : {'in_hull': 0.7876447876447876, 'score': 0.7876447876447876, 'examples_seen': 297430, 'step': 10000, 'algorithm': 'graham_scan'}
I0716 08:55:50.133172 125574027200000 run.py:767] (test) algo heapsort : {'pred': 0.1953125, 'score': 0.1953125, 'examples_seen': 155410, 'step': 10000, 'algorithm': 'heapsort'}
I0716 09:14:20.725194 123435390150144 run.py:767] (test) algo insertion_sort : {'pred': 0.59521484375, 'score': 0.59521484375, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'insertion_sort'}
I0716 09:20:32.388073 134408502466048 run.py:767] (test) algo jarvis_march : {'in_hull': 0.5522388059701493, 'score': 0.5522388059701493, 'examples_seen': 114103, 'step': 10000, 'algorithm': 'jarvis_march'}
I0716 09:37:13.160105 135833165022720 run.py:767] (test) algo kmp_matcher : {'match': 0.06494140625, 'score': 0.06494140625, 'examples_seen': 168847, 'step': 10000, 'algorithm': 'kmp_matcher'}
I0716 09:50:23.868151 134838742562304 run.py:767] (test) algo lcs_length : {'b': 0.820404052734375, 'score': 0.820404052734375, 'examples_seen': 1186537, 'step': 10000, 'algorithm': 'lcs_length'}
I0716 10:06:11.859367 126261868496384 run.py:767] (test) algo matrix_chain_order : {'s': 0.94012451171875, 'score': 0.94012451171875, 'examples_seen': 821852, 'step': 10000, 'algorithm': 'matrix_chain_order'}
I0716 10:14:33.733377 130024657290752 run.py:767] (test) algo minimum : {'min': 0.9150390625, 'score': 0.9150390625, 'examples_seen': 514368, 'step': 10000, 'algorithm': 'minimum'}
I0716 10:29:03.184336 138429420811776 run.py:767] (test) algo mst_kruskal : {'in_mst': 0.8095292899067787, 'score': 0.8095292899067787, 'examples_seen': 826765, 'step': 10000, 'algorithm': 'mst_kruskal'}
I0716 10:38:27.265252 125851968894464 run.py:767] (test) algo mst_prim : {'pi': 0.84912109375, 'score': 0.84912109375, 'examples_seen': 564760, 'step': 10000, 'algorithm': 'mst_prim'}
I0716 10:46:44.382516 128058109416960 run.py:767] (test) algo naive_string_matcher : {'match': 0.13232421875, 'score': 0.13232421875, 'examples_seen': 230279, 'step': 10000, 'algorithm': 'naive_string_matcher'}
I0716 11:00:02.593102 137961844098560 run.py:767] (test) algo optimal_bst : {'root': 0.8145488165680473, 'score': 0.8145488165680473, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'optimal_bst'}
I0716 11:39:25.844568 123447751300608 run.py:767] (test) algo quickselect : {'median': 0.0234375, 'score': 0.0234375, 'examples_seen': 323100, 'step': 10000, 'algorithm': 'quickselect'}
I0716 11:56:43.515410 133387583333888 run.py:767] (test) algo quicksort : {'pred': 0.59716796875, 'score': 0.59716796875, 'examples_seen': 347181, 'step': 10000, 'algorithm': 'quicksort'}
I0716 12:03:55.400537 134131846411776 run.py:767] (test) algo segments_intersect : {'intersect': 0.9270935960591132, 'score': 0.9270935960591132, 'examples_seen': 512000, 'step': 10000, 'algorithm': 'segments_intersect'}
I0716 12:10:23.778873 138304095274496 run.py:767] (test) algo task_scheduling : {'selected': 0.9191149800507799, 'score': 0.9191149800507799, 'examples_seen': 398112, 'step': 10000, 'algorithm': 'task_scheduling'}
I0716 12:18:14.039100 137187410863616 run.py:767] (test) algo topological_sort : {'topo': 0.7353515625, 'topo_head': 0.78125, 'score': 0.75830078125, 'examples_seen': 190739, 'step': 10000, 'algorithm': 'topological_sort'}
